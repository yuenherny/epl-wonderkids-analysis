<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='EPL_20_21' inline='true' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EPL_20_21' name='textscan.06irjmf19qs9581ash3hg0w0dx2d'>
            <connection class='textscan' directory='D:/Projects/EPL Player Stat' filename='EPL_20_21.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06irjmf19qs9581ash3hg0w0dx2d' name='EPL_20_21.csv' table='[EPL_20_21#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_MY' separator=','>
            <column datatype='string' name='Name' ordinal='0' />
            <column datatype='string' name='Club' ordinal='1' />
            <column datatype='string' name='Nationality' ordinal='2' />
            <column datatype='string' name='Position' ordinal='3' />
            <column datatype='integer' name='Age' ordinal='4' />
            <column datatype='integer' name='Matches' ordinal='5' />
            <column datatype='integer' name='Starts' ordinal='6' />
            <column datatype='integer' name='Mins' ordinal='7' />
            <column datatype='integer' name='Goals' ordinal='8' />
            <column datatype='integer' name='Assists' ordinal='9' />
            <column datatype='integer' name='Passes_Attempted' ordinal='10' />
            <column datatype='real' name='Perc_Passes_Completed' ordinal='11' />
            <column datatype='integer' name='Penalty_Goals' ordinal='12' />
            <column datatype='integer' name='Penalty_Attempted' ordinal='13' />
            <column datatype='real' name='xG' ordinal='14' />
            <column datatype='real' name='xA' ordinal='15' />
            <column datatype='integer' name='Yellow_Cards' ordinal='16' />
            <column datatype='integer' name='Red_Cards' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.06irjmf19qs9581ash3hg0w0dx2d' name='EPL_20_21.csv' table='[EPL_20_21#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_MY' separator=','>
            <column datatype='string' name='Name' ordinal='0' />
            <column datatype='string' name='Club' ordinal='1' />
            <column datatype='string' name='Nationality' ordinal='2' />
            <column datatype='string' name='Position' ordinal='3' />
            <column datatype='integer' name='Age' ordinal='4' />
            <column datatype='integer' name='Matches' ordinal='5' />
            <column datatype='integer' name='Starts' ordinal='6' />
            <column datatype='integer' name='Mins' ordinal='7' />
            <column datatype='integer' name='Goals' ordinal='8' />
            <column datatype='integer' name='Assists' ordinal='9' />
            <column datatype='integer' name='Passes_Attempted' ordinal='10' />
            <column datatype='real' name='Perc_Passes_Completed' ordinal='11' />
            <column datatype='integer' name='Penalty_Goals' ordinal='12' />
            <column datatype='integer' name='Penalty_Attempted' ordinal='13' />
            <column datatype='real' name='xG' ordinal='14' />
            <column datatype='real' name='xA' ordinal='15' />
            <column datatype='integer' name='Yellow_Cards' ordinal='16' />
            <column datatype='integer' name='Red_Cards' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;RM&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_MY&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Club</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Club]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Club</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nationality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Nationality]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Nationality</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Matches</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Matches]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Matches</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Starts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Starts]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Starts</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mins</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mins]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Mins</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Goals]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Goals</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Assists</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Assists]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Assists</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Passes_Attempted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Passes_Attempted]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Passes_Attempted</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perc_Passes_Completed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perc_Passes_Completed]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Perc_Passes_Completed</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Penalty_Goals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Penalty_Goals]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Penalty_Goals</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Penalty_Attempted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Penalty_Attempted]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Penalty_Attempted</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>xG</remote-name>
            <remote-type>5</remote-type>
            <local-name>[xG]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>xG</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>xA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[xA]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>xA</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yellow_Cards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Yellow_Cards]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Yellow_Cards</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Red_Cards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Red_Cards]</local-name>
            <parent-name>[EPL_20_21.csv]</parent-name>
            <remote-alias>Red_Cards</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Assists]' role='measure' type='quantitative' />
      <column caption='Penalty Conversion Rate' datatype='real' name='[Calculation_112027082841022464]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Penalty_Goals]/[Penalty_Attempted]*100' />
      </column>
      <column caption='Mins per Contribution' datatype='real' name='[Calculation_1256222864499412992]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Mins]/([Assists]+[Goals])' />
      </column>
      <column caption='Contributions' datatype='integer' name='[Calculation_1256222864520429569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Goals]+[Assists]' />
      </column>
      <column datatype='string' name='[Club]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Goals (bin)' datatype='integer' name='[Goals (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Goals]' peg='0' size='5' />
      </column>
      <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Matches]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Mins]' role='measure' type='quantitative' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Passes Attempted' datatype='integer' name='[Passes_Attempted]' role='measure' type='quantitative' />
      <column caption='Penalty Attempted' datatype='integer' name='[Penalty_Attempted]' role='measure' type='quantitative' />
      <column caption='Penalty Goals' datatype='integer' name='[Penalty_Goals]' role='measure' type='quantitative' />
      <column caption='Perc Passes Completed' datatype='real' name='[Perc_Passes_Completed]' role='measure' type='quantitative' />
      <column caption='Position 1' datatype='string' name='[Position - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Position]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Position], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='Position 2' datatype='string' name='[Position - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Position]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Position], &quot;,&quot;, 2 ) )' />
      </column>
      <column datatype='string' name='[Position]' role='dimension' type='nominal' />
      <column caption='Red Cards' datatype='integer' name='[Red_Cards]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Starts]' role='measure' type='quantitative' />
      <column caption='Yellow Cards' datatype='integer' name='[Yellow_Cards]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='EPL_20_21.csv' datatype='table' name='[__tableau_internal_object_id__].[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]' role='measure' type='quantitative' />
      <column datatype='real' name='[xA]' role='measure' type='quantitative' />
      <column datatype='real' name='[xG]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Assists]' derivation='Median' name='[med:Assists:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1256222864499412992]' derivation='Median' name='[med:Calculation_1256222864499412992:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1256222864520429569]' derivation='Median' name='[med:Calculation_1256222864520429569:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Goals]' derivation='Median' name='[med:Goals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[xA]' derivation='Median' name='[med:xA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[xG]' derivation='Median' name='[med:xG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
      <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
      <column-instance column='[Age]' derivation='Sum' name='[sum:Age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Assists]' derivation='Sum' name='[sum:Assists:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_112027082841022464]' derivation='Sum' name='[sum:Calculation_112027082841022464:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1256222864499412992]' derivation='Sum' name='[sum:Calculation_1256222864499412992:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1256222864520429569]' derivation='Sum' name='[sum:Calculation_1256222864520429569:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Goals]' derivation='Sum' name='[sum:Goals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Matches]' derivation='Sum' name='[sum:Matches:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mins]' derivation='Sum' name='[sum:Mins:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Passes_Attempted]' derivation='Sum' name='[sum:Passes_Attempted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Penalty_Attempted]' derivation='Sum' name='[sum:Penalty_Attempted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Penalty_Goals]' derivation='Sum' name='[sum:Penalty_Goals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Perc_Passes_Completed]' derivation='Sum' name='[sum:Perc_Passes_Completed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Red_Cards]' derivation='Sum' name='[sum:Red_Cards:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Starts]' derivation='Sum' name='[sum:Starts:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yellow_Cards]' derivation='Sum' name='[sum:Yellow_Cards:qk]' pivot='key' type='quantitative' />
      <column-instance column='[xA]' derivation='Sum' name='[sum:xA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[xG]' derivation='Sum' name='[sum:xG:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Position:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;DF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FW,DF&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;FW&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;MF,DF&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MF,FW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DF,MF&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;FW,MF&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DF,FW&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;MF&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aleksandar Mitrović&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Anwar El Ghazi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Axel Tuanzebe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brandon Williams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Callum Hudson-Odoi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Craig Dawson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Douglas Luiz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eric Bailly&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Filip Krovinović&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fred&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Issa Diop&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamie Shackleton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jay Rodriguez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John McGinn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kortney Hause&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Leif Davis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mark Noble&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinelli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mohamed Elneny&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oriol Romeu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reiss Nelson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ricardo Pereira&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scott Dann&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shkodran Mustafi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thiago Alcántara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wesley Moraes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Willian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Connolly&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andrew Robertson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anthony Gordon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bernard&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carney Chukwuemeka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chris Wood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;David McGoldrick&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Edouard Mendy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ezgjan Alioski&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hal Robson-Kanu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Islam Slimani&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;James Milner&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joël Matip&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;José Izquierdo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kamil Grosicki&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Łukasz Fabiański&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luke Shaw&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Matthew Lowton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Neeskens Kebano&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nélson Semedo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Phil Foden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Reda Khadra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rúben Neves&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steven Bergwijn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Terence Kongolo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tyrick Mitchell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Lallana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angelo Ogbonna&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bobby Reid&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cenk Tosun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Conor Coady&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Diego Llorente&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Emerson Palmieri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fabio Carvalho&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hamza Choudhury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harvey Barnes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamie Vardy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jóhann Berg Guðmundsson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Josh Onomah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kasper Schmeichel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kelechi Iheanacho&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marcos Alonso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Keane&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morgan Sanson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oliver Burke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pablo Marí&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raphael Dias Belloli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rúben Vinagre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sadio Mané&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tammy Abraham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vitinha&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ahmed Hegazi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alexandre Lacazette&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ayoze Pérez&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carlos Vinícius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christian Fuchs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daniel Amartey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eddie Nketiah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ethan Ampadu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Cahill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jack Robinson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jacob Ramsey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japhet Tanganga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jeffrey Schlupp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan Ayew&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kevin Long&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyle Walker-Peters&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Matěj Vydra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maxime Le Marchand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;N&apos;Golo Kanté&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oliver Norwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pascal Groß&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Robbie Brady&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sam Field&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sébastien Haller&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timothy Castagne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;William Smallbone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yerry Mina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alex Iwobi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Andi Zeqiri&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arthur Masuaku&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Branislav Ivanović&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Callum Robinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curtis Jones&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight Gayle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eric Dier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fraser Forster&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabriel Dos Santos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ivan Cavaleiro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jayden Bogle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Joe Gomez&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;John Stones&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kurt Zouma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mamadou Sakho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Martin Dúbravka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mason Greenwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mohamed Salah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oleksandr Zinchenko&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Owen Otasowie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Richarlison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scott McTominay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shola Shoretire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thiago Silva&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Willian José&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aboubakar Kamara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Webster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anthony Elanga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Billy Gilmour&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bruno Fernandes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Conor Gallagher&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Demarai Gray&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Diogo Jota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fábio Silva&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hannibal Mejbri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Héctor Bellerín&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jan Bednarek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John Egan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jonjoe Kenny&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kayne Ramsey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenny Tete&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marcus Rashford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michail Antonio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neil Taylor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niels Nkounkou&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oliver McBurnie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Raúl Jiménez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rui Patrício&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saïd Benrahma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanguy Ndombele&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vladimír Coufal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;André Gomes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Osborn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben White&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Caoimhín Kelleher&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cheikhou Kouyaté&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darnell Furlong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Érik Lamela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fabinho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gylfi Sigurðsson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Illan Meslier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Maddison&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jean-Philippe Gbamin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joe Bryan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kai Havertz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kiko Casilla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lucas Moura&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Matt Ritchie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nathan Broadhead&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nathaniel Phillips&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ozan Kabak&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pedro Neto&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rúben Dias&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sead Kolašinac&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Son Heung-min&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trézéguet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Cresswell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andriy Yarmolenko&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Antonee Robinson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bernardo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bernardo Silva&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Christian Benteke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dean Henderson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Declan Rice&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ezri Konsa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harrison Reed&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jaden Philogene Bidace&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;James Rodríguez&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joël Veltman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Josh Benson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Karlan Grant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luke Ayling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luke Thomas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mathew Ryan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Matty Cash&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nemanja Matić&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicolas Pépé&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pierre Højbjerg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ryan Bertrand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stuart Armstrong&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Theo Corbeanu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tyrone Mings&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alex McCarthy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Allan Saint-Maximin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ben Johnson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlie Taylor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Danny Ings&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;David Button&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emile Smith-Rowe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fabian Delph&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grady Diangana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ibrahima Diallo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jakub Moder&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamal Lewis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;João Cancelo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Josh Maja&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liam Cooper&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liam Delap&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Matt Doherty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moussa Sissoko&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nathan Tella&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oskar Buur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paul Dummett&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romain Saïss&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Scott Carson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sergio Reguilón&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tomáš Souček&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adama Traoré&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allan Tchaptchet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anthony Martial&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bukayo Saka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Charlie Austin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Conor Hourihane&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denis Odoi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominic Calvert-Lewin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fernandinho&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hélder Costa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jack Cork&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;James Tomkins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jannik Vestergaard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;John Fleck&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kevin De Bruyne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lys Mousset&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marek Rodák&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mario Lemina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michy Batshuayi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Odion Ighalo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olivier Giroud&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rayan Aït Nouri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rúnar Alex Rúnarsson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sam Johnstone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tariq Lamptey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wes Morgan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilfred Ndidi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ainsley Maitland-Niles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alexis Mac Allister&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ben Chilwell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caleb Watts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cédric Soares&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniel James&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ederson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Federico Fernández&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gaetano Berardi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;George Baldock&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jacob Murphy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jesse Lingard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joel Mumbongo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan Henderson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khanya Leshabela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leander Dendoncker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marvelous Nakamba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mateo Kovačić&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nampalys Mendy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pascal Struijk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phil Jagielka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roberto Firmino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Semi Ajayi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Timothy Fosu-Mensah&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Toby Alderweireld&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;William Thomas Fish&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Youri Tielemans&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alireza Jahanbakhsh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andreas Christensen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ben Davies&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cengiz Ünder&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daniel Jebbison&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dara O&apos;Shea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edinson Cavani&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Felipe Anderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georginio Wijnaldum&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hugo Lloris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jaïro Riedewald&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Javier Manquillo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jimmy Dunne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jorginho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ki-Jana Hoever&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leandro Trossard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mateusz Klich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michael Hector&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nathan Aké&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Patrick Bamford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rhian Brewster&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Robin Koch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rodri&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serge Aurier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tom Cairney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yves Bissouma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amad Diallo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bailey Peacock-Farrell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Mee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Che Adams&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Danny Welbeck&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;David de Gea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Enda Stevens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fernando Marçal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Granit Xhaka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iliman Ndiaye&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;James Justin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jayson Molumby&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;João Moutinho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joshua King&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Juan Mata&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lucas Digne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Matt Phillips&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Naby Keïta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nathaniel Clyne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paul Pogba&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Robert Sánchez&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ross Barkley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solly March&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tosin Adarabioyo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trent Alexander-Arnold&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Willy Caballero&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alexandre Jankewitz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Andre-Frank Zambo Anguissa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benjamin Mendy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chris Basham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;David Luiz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Davinson Sánchez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Erik Pieters&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fikayo Tomori&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hakim Ziyech&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isaac Hayden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James McArthur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joe Willock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan Pickford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kalvin Phillips&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kostas Tsimikas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luka Milivojević&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Matt Targett&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Neal Maupay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Neco Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Percy Tau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robert Snodgrass&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romaine Sawyers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ruben Loftus-Cheek&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steven Alzate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tyler Roberts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yan Valery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adrián&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alex Oxlade-Chamberlain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ashley Barnes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Callum Wilson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dan Burn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dane Scarlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Divock Origi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dwight McNeil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabriel Jesus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harry Winks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jack Grealish&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jean-Philippe Mateta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joe Rodon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jonjo Shelvey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kepa Arrizabalaga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyle Bartley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Martin Kelly&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mason Holgate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morgan Gibbs-White&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pablo Fornals&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rekeem Harper&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riyad Mahrez&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Séamus Coleman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sidnei Tavares&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thomas Partey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Willy Boly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ademola Lookman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alphonse Areola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antonio Rüdiger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Çağlar Söyüncü&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Conor Townsend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dan Nlundulu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Donny van de Beek&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Emiliano Martínez&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ferrán Torres&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;İlkay Gündoğan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jack O&apos;Connell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jarrod Bowen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;João Virgínia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Lundstram&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kieran Tierney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lee Peltier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martin Ødegaard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matthew Longstaff&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Miguel Almirón&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ollie Watkins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Patrick Cutrone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Reece James&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sander Berge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shane Long&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Theo Walcott&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wesley Fofana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wilfried Zaha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Ramsdale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Wan-Bissaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andros Townsend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bertrand Traoré&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Christian Pulisic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dale Stephens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DeAndre Yedlin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dele Alli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fabián Balbuena&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harry Kane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jake Livermore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James McCarthy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James Tarkowski&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joel Ward&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Karl Darlow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kean Bryan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manuel Lanzini&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Max Kilman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mohammed Salisu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niall Huggins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Okay Yokuşlu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pierre-Emerick Aubameyang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ryan Fraser&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stuart Dallas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tyrese Francois&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Victor Lindelöf&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alisson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aymeric Laporte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ben Godfrey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;César Azpilicueta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daniel Podence&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Darren Randolph&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Emil Krafth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Femi Seriki&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Giovani Lo Celso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ian Carlo Poveda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jake Vokins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaal Lascelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joachim Andersen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Josh Brownhill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kieran Gibbs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lewis Dunk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Matheus Pereira&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michael Obafemi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nathan Redmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Patrick van Aanholt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rhys Williams&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Robin Olsen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rodrigo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sergio Agüero&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tom Davies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ahmed Elmohamady&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alex Telles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ashley Westwood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Calum Chambers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dani Ceballos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Davy Pröpper&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eberechi Eze&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eric García&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gareth Bale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jack Harrison&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jack Stephens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jeff Hendrick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jonny Castro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jonny Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyle Walker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lewis Richardson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mason Mount&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Max Lowe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moussa Djenepo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pablo Hernández&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phil Bardsley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rob Holding&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sean Longstaff&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tim Ream&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timo Werner&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Will Norris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Xherdan Shaqiri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abdoulaye Doucouré&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andy Carroll&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Antwoine Hackford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bernd Leno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Billy Sharp&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ciaran Clark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dennis Praet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elliot Anderson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fabian Schär&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harry Maguire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jack Butland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Ward-Prowse&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joelinton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Ruddy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Keinan Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kyle Edwards&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marc Albrighton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mbaye Diagne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moise Kean&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nick Pope&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ola Aina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Raheem Sterling&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ryan Fredericks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Takumi Minamino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vicente Guaita&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Virgil van Dijk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zack Steffen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Club:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Bromwich Albion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wolverhampton Wanderers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Leicester City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fulham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Ham United&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arsenal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manchester City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liverpool FC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burnley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aston Villa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tottenham Hotspur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leeds United&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newcastle United&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brighton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Everton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crystal Palace&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sheffield United&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manchester United&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Passes_Attempted:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Assists:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Assists:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Penalty_Goals:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Penalty_Attempted:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Matches:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xG:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:xG:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Age:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Yellow_Cards:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Mins:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Perc_Passes_Completed:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Red_Cards:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xA:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:xA:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Goals:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Calculation_1256222864499412992:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Calculation_1256222864499412992:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Calculation_1256222864520429569:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Calculation_1256222864520429569:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Starts:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Calculation_112027082841022464:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[__tableau_internal_object_id__].[cnt:EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Nationality:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SKN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GUI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;POR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RSA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ZIM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GER&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MTN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SCO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CRO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ENG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NED&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WAL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NIR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SUI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;URU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GRE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Malaysia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='EPL_20_21.csv' id='EPL_20_21.csv_5CA6D2F06B8449ABB3F8ADAAD5D99A3F'>
            <properties context=''>
              <relation connection='textscan.06irjmf19qs9581ash3hg0w0dx2d' name='EPL_20_21.csv' table='[EPL_20_21#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_MY' separator=','>
                  <column datatype='string' name='Name' ordinal='0' />
                  <column datatype='string' name='Club' ordinal='1' />
                  <column datatype='string' name='Nationality' ordinal='2' />
                  <column datatype='string' name='Position' ordinal='3' />
                  <column datatype='integer' name='Age' ordinal='4' />
                  <column datatype='integer' name='Matches' ordinal='5' />
                  <column datatype='integer' name='Starts' ordinal='6' />
                  <column datatype='integer' name='Mins' ordinal='7' />
                  <column datatype='integer' name='Goals' ordinal='8' />
                  <column datatype='integer' name='Assists' ordinal='9' />
                  <column datatype='integer' name='Passes_Attempted' ordinal='10' />
                  <column datatype='real' name='Perc_Passes_Completed' ordinal='11' />
                  <column datatype='integer' name='Penalty_Goals' ordinal='12' />
                  <column datatype='integer' name='Penalty_Attempted' ordinal='13' />
                  <column datatype='real' name='xG' ordinal='14' />
                  <column datatype='real' name='xA' ordinal='15' />
                  <column datatype='integer' name='Yellow_Cards' ordinal='16' />
                  <column datatype='integer' name='Red_Cards' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Assists vs Goals by Nationality (Penalties Considered)'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Assists]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mins]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Penalty Goals' datatype='integer' name='[Penalty_Goals]' role='measure' type='quantitative' />
            <column-instance column='[Penalty_Goals]' derivation='Avg' name='[avg:Penalty_Goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Assists]' derivation='Count' name='[cnt:Assists:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals]' derivation='Count' name='[cnt:Goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Assists]' derivation='None' name='[none:Assists:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals]' derivation='None' name='[none:Goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mins]' derivation='None' name='[none:Mins:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' filter-group='4' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]' filter-group='3' included-values='in-range'>
            <min>1</min>
            <max>3420</max>
          </filter>
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]</column>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <size column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[avg:Penalty_Goals:qk]' />
              <tooltip column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Goals:qk]' />
              <tooltip column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Assists:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Assists:qk]</rows>
        <cols>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Goals:qk]</cols>
        <show-full-range>
          <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Goals (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{2CEE5572-D008-401B-9686-1906518A21B9}' />
    </worksheet>
    <worksheet name='Median Contributions, Goals and Assists by Nationality'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Assists]' role='measure' type='quantitative' />
            <column caption='Contributions' datatype='integer' name='[Calculation_1256222864520429569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Goals]+[Assists]' />
            </column>
            <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Assists]' derivation='Median' name='[med:Assists:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1256222864520429569]' derivation='Median' name='[med:Calculation_1256222864520429569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals]' derivation='Median' name='[med:Goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Calculation_1256222864520429569:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Assists:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Calculation_1256222864520429569:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Assists:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <computed-sort column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' direction='DESC' using='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Calculation_1256222864520429569:qk]' />
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[:Measure Names]</column>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[:Measure Names]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Calculation_1256222864520429569:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Assists:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk] / [federated.1ougk2p1drmbze1gtlohy0y5ejf1].[:Measure Names])</rows>
        <cols>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{6A6BD3BC-16A9-40D5-BEB4-D50D687BAC32}' />
    </worksheet>
    <worksheet name='Median Goals by Nationality'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mins]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Name]' derivation='Attribute' name='[attr:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='Count' name='[cnt:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nationality]' derivation='Count' name='[cnt:Nationality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals]' derivation='Median' name='[med:Goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mins]' derivation='None' name='[none:Mins:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' filter-group='4' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]' filter-group='3' included-values='in-range'>
            <min>1</min>
            <max>3420</max>
          </filter>
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]</column>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Longitude (generated)]' field-type='quantitative' max='17641004.213501185' min='-12679521.701583179' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Latitude (generated)]' field-type='quantitative' max='10925128.605222661' min='-5185479.1243022587' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <lod column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Nationality:qk]' />
              <lod column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Name:nk]' />
              <size column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]' />
              <tooltip column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Name:qk]' />
              <tooltip column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[attr:Name:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='3.7016575336456299' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Latitude (generated)]</rows>
        <cols>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9482AE12-DA23-4EF6-855F-81762EA9E8AC}' />
    </worksheet>
    <worksheet name='Median Mins per Contribution by Nationality'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Assists]' role='measure' type='quantitative' />
            <column caption='Mins per Contribution' datatype='real' name='[Calculation_1256222864499412992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Mins]/([Assists]+[Goals])' />
            </column>
            <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mins]' role='measure' type='quantitative' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_1256222864499412992]' derivation='Median' name='[med:Calculation_1256222864499412992:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Calculation_1256222864499412992:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</rows>
        <cols>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Calculation_1256222864499412992:qk]</cols>
      </table>
      <simple-id uuid='{ACE3D658-2D9A-4BA2-B60B-ECCBA5388444}' />
    </worksheet>
    <worksheet name='Median xG and xA by Nationality'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[xA]' derivation='Median' name='[med:xA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[xG]' derivation='Median' name='[med:xG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[xA]' role='measure' type='quantitative' />
            <column datatype='real' name='[xG]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <computed-sort column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' direction='DESC' using='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xG:qk]' />
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xA:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</rows>
        <cols>([federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xG:qk] + [federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xA:qk])</cols>
      </table>
      <simple-id uuid='{C2867802-7366-42E7-BE19-8B6CFD6DD897}' />
    </worksheet>
    <worksheet name='Mins vs Mins per Contribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Assists]' role='measure' type='quantitative' />
            <column caption='Mins per Contribution' datatype='real' name='[Calculation_1256222864499412992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Mins]/([Assists]+[Goals])' />
            </column>
            <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mins]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1256222864499412992]' derivation='None' name='[none:Calculation_1256222864499412992:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mins]' derivation='None' name='[none:Mins:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[Assists]' derivation='Sum' name='[sum:Assists:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1256222864499412992]' derivation='Sum' name='[sum:Calculation_1256222864499412992:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals]' derivation='Sum' name='[sum:Goals:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' filter-group='4' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]' filter-group='3' included-values='in-range'>
            <min>1</min>
            <max>3420</max>
          </filter>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Assists:qk]' included-values='in-range'>
            <min>5</min>
          </filter>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Calculation_1256222864499412992:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Goals:qk]' included-values='in-range'>
            <min>5</min>
          </filter>
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Calculation_1256222864499412992:qk]</column>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Goals:qk]</column>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Assists:qk]</column>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]</column>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Name:nk]' />
              <tooltip column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Assists:qk]' />
              <tooltip column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Goals:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Calculation_1256222864499412992:qk]</rows>
        <cols>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]</cols>
      </table>
      <simple-id uuid='{A883CEF7-AB86-4947-99B3-AAD2D56E4609}' />
    </worksheet>
    <worksheet name='Nationality of Players in Each Club'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Nationality]' derivation='Count' name='[cnt:Nationality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' filter-group='4' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <computed-sort column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Club:nk]' direction='DESC' using='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Nationality:qk]' />
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <lod column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Nationality:qk]</rows>
        <cols>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Club:nk]</cols>
      </table>
      <simple-id uuid='{873CC785-AE2B-440E-905C-68ADDEE2DD4D}' />
    </worksheet>
    <worksheet name='Number of Players in Each Club'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Name]' derivation='Count' name='[cnt:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' filter-group='4' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <computed-sort column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Club:nk]' direction='DESC' using='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Name:qk]' />
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Name:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Name:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Club:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{13A5BA8B-5160-475D-82C4-3F1FE32E309E}' />
    </worksheet>
    <worksheet name='Penalty Goals vs Attempted'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Penalty Conversion Rate' datatype='real' name='[Calculation_112027082841022464]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Penalty_Goals]/[Penalty_Attempted]*100' />
            </column>
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column caption='Penalty Attempted' datatype='integer' name='[Penalty_Attempted]' role='measure' type='quantitative' />
            <column caption='Penalty Goals' datatype='integer' name='[Penalty_Goals]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_112027082841022464]' derivation='Attribute' name='[attr:Calculation_112027082841022464:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_112027082841022464]' derivation='Median' name='[med:Calculation_112027082841022464:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Penalty_Attempted]' derivation='None' name='[none:Penalty_Attempted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Penalty_Goals]' derivation='None' name='[none:Penalty_Goals:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' filter-group='4' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Club:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Club:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Calculation_112027082841022464:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Name:nk]' />
              <tooltip column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[attr:Calculation_112027082841022464:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Penalty_Goals:qk]</rows>
        <cols>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Penalty_Attempted:qk]</cols>
      </table>
      <simple-id uuid='{002E8880-13D0-4690-8916-9F94D970AF22}' />
    </worksheet>
    <worksheet name='Player Quality by Nationality: Assists'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Assists]' role='measure' type='quantitative' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Assists]' derivation='Median' name='[med:Assists:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[Assists]' derivation='Sum' name='[sum:Assists:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' filter-group='4' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Assists:qk]' />
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Assists:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Assists:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Assists:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A6EE050D-DA16-462C-8D38-F740DB337CD3}' />
    </worksheet>
    <worksheet name='Player Quality by Nationality: Expected Assists'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[xA]' derivation='Count' name='[cnt:xA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[xA]' derivation='Median' name='[med:xA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[xA]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' filter-group='4' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xA:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xA:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xA:qk]' />
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xA:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xA:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:xA:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E7AD9E9C-A6F9-46E1-86E2-0CA355D73CB2}' />
    </worksheet>
    <worksheet name='Player Quality by Nationality: Expected Goals'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[xG]' derivation='Count' name='[cnt:xG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[xG]' derivation='Median' name='[med:xG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[xG]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' filter-group='4' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xG:qk]' value='n#,##0.000;-#,##0.000' />
            <format attr='text-format' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:xG:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xG:qk]' />
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xG:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xG:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:xG:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{892005A6-318B-4AC3-B99E-494C4E36178B}' />
    </worksheet>
    <worksheet name='Player Quality by Nationality: Goals'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Goals]' derivation='Count' name='[cnt:Goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals]' derivation='Median' name='[med:Goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' filter-group='4' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]' />
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Goals:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5E4CF7BD-3D48-4C9A-9043-AB9984E9CAE5}' />
    </worksheet>
    <worksheet name='Positions in Each Club'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column caption='Position 1' datatype='string' name='[Position - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Position]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Position], &quot;,&quot;, 1 ) )' />
            </column>
            <column caption='Position 2' datatype='string' name='[Position - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Position]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Position], &quot;,&quot;, 2 ) )' />
            </column>
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column-instance column='[Position]' derivation='Count' name='[cnt:Position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position - Split 1]' derivation='None' name='[none:Position - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position - Split 2]' derivation='None' name='[none:Position - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' filter-group='4' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <filter class='categorical' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position - Split 1:nk]'>
            <groupfilter function='level-members' level='[none:Position - Split 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position - Split 2:nk]'>
            <groupfilter from='&quot;&quot;' function='range' level='[none:Position - Split 2:nk]' to='&quot;MF&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;DF&quot;</bucket>
              <bucket>&quot;DF,FW&quot;</bucket>
              <bucket>&quot;DF,MF&quot;</bucket>
              <bucket>&quot;FW&quot;</bucket>
              <bucket>&quot;FW,DF&quot;</bucket>
              <bucket>&quot;FW,MF&quot;</bucket>
              <bucket>&quot;GK&quot;</bucket>
              <bucket>&quot;MF&quot;</bucket>
              <bucket>&quot;MF,DF&quot;</bucket>
              <bucket>&quot;MF,FW&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position - Split 1:nk]</column>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position - Split 2:nk]</column>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Position:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Club:nk]' />
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A492AF5F-BDA6-43F8-9AD4-2E9A88065863}' />
    </worksheet>
    <worksheet name='xA vs xG by Nationality (Penalties Considered)'>
      <table>
        <view>
          <datasources>
            <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mins]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Penalty Goals' datatype='integer' name='[Penalty_Goals]' role='measure' type='quantitative' />
            <column-instance column='[xA]' derivation='Count' name='[cnt:xA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[xG]' derivation='Count' name='[cnt:xG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Penalty_Goals]' derivation='Median' name='[med:Penalty_Goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mins]' derivation='None' name='[none:Mins:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[xA]' derivation='None' name='[none:xA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[xG]' derivation='None' name='[none:xG:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[xA]' role='measure' type='quantitative' />
            <column datatype='real' name='[xG]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' filter-group='4' included-values='in-range'>
            <min>16</min>
            <max>25</max>
          </filter>
          <filter class='quantitative' column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]' included-values='in-range'>
            <min>1</min>
            <max>3420</max>
          </filter>
          <slices>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]</column>
            <column>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:xG:qk]' field-type='quantitative' max='0.5561473073888068' min='0.21467164939675326' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:xA:qk]' field-type='quantitative' max='0.35116660560117519' min='0.085504994354203501' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:xA:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:xA:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:xA:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:xG:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:xG:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:xG:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <size column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Penalty_Goals:qk]' />
              <tooltip column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:xG:qk]' />
              <tooltip column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:xA:qk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' />
              <text column='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:xA:qk]</rows>
        <cols>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:xG:qk]</cols>
      </table>
      <simple-id uuid='{6890F624-C5EB-462D-8B20-4B0E6448C185}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Basic EDA'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='9' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='60125' id='6' name='Number of Players in Each Club' w='32500' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37875' id='7' name='Nationality of Players in Each Club' w='98400' x='800' y='61125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='60125' id='12' name='Positions in Each Club' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position:nk]' type-v2='color' w='10900' x='33300' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='60125' id='8' name='Positions in Each Club' w='55000' x='44200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='32' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='31' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='60125' id='6' is-fixed='true' name='Number of Players in Each Club' w='32500' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60125' id='8' is-fixed='true' name='Positions in Each Club' w='55000' x='44200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='60125' id='12' name='Positions in Each Club' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position:nk]' type-v2='color' w='10900' x='33300' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37875' id='7' is-fixed='true' name='Nationality of Players in Each Club' w='98400' x='800' y='61125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A064DE26-9368-4943-B863-21EA1B9365F0}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
      </datasources>
      <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
        <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
        <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Player Quality by Nationality: Expected Goals' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Player Quality by Nationality: Goals' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='Player Quality by Nationality: Expected Assists' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='16' name='Player Quality by Nationality: Assists' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8625' id='8' name='Player Quality by Nationality: Expected Goals' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='Player Quality by Nationality: Expected Goals' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xG:qk]' type-v2='color' w='16000' x='83200' y='9625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='11' name='Player Quality by Nationality: Goals' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='17750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='12' name='Player Quality by Nationality: Goals' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]' type-v2='color' w='16000' x='83200' y='26375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31000' id='19' type-v2='empty' w='16000' x='83200' y='34500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='14' name='Player Quality by Nationality: Expected Assists' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='65500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='15' name='Player Quality by Nationality: Expected Assists' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xA:qk]' type-v2='color' w='16000' x='83200' y='74125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='17' name='Player Quality by Nationality: Assists' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='82250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='18' name='Player Quality by Nationality: Assists' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Assists:qk]' type-v2='color' w='16000' x='83200' y='90875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='36' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='8625' id='8' name='Player Quality by Nationality: Expected Goals' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Player Quality by Nationality: Expected Goals' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Player Quality by Nationality: Expected Goals' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xG:qk]' type-v2='color' w='16000' x='83200' y='9625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='11' name='Player Quality by Nationality: Goals' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='17750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Player Quality by Nationality: Goals' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='12' name='Player Quality by Nationality: Goals' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]' type-v2='color' w='16000' x='83200' y='26375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='14' name='Player Quality by Nationality: Expected Assists' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='65500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='Player Quality by Nationality: Expected Assists' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='15' name='Player Quality by Nationality: Expected Assists' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xA:qk]' type-v2='color' w='16000' x='83200' y='74125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='17' name='Player Quality by Nationality: Assists' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='82250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='16' is-fixed='true' name='Player Quality by Nationality: Assists' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='18' name='Player Quality by Nationality: Assists' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Assists:qk]' type-v2='color' w='16000' x='83200' y='90875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{967AAA72-D8CE-4FB1-9531-38D89EC6E38C}' />
    </dashboard>
    <dashboard name='EPL Story: The Lookout for the Wonderkids' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Median Goals by Nationality' captured-sheet='Median Goals by Nationality' id='1'>
                    <capturedDeltas>
                      <worksheet name='Median Goals by Nationality'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Latitude (generated)]' field-type='quantitative' max='9427747.2226088122' min='-6945187.5708078369' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Longitude (generated)]' field-type='quantitative' max='7332724.5441347659' min='-9574333.1715550162' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Median Contributions, Goals and Assists by Nationality' captured-sheet='Median Contributions, Goals and Assists by Nationality' id='2' />
                  <story-point caption='Median Mins per Contribution by Nationality' captured-sheet='Median Mins per Contribution by Nationality' id='3' />
                  <story-point caption='Median xG and xA by Nationality' captured-sheet='Median xG and xA by Nationality' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{FF0692C1-ED6A-4ACC-9636-74CC731617D0}' />
    </dashboard>
    <dashboard name='EPL Story: Young Talents' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='7' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Assists vs Goals by Nationality (Penalties Considered)' captured-sheet='Assists vs Goals by Nationality (Penalties Considered)' id='7' />
                  <story-point caption='Mins vs Mins per Contribution' captured-sheet='Mins vs Mins per Contribution' id='5' />
                  <story-point caption='xA vs xG by Nationality' captured-sheet='xA vs xG by Nationality (Penalties Considered)' id='6' />
                  <story-point caption='Median Goals by Nationality' captured-sheet='Median Goals by Nationality' id='4'>
                    <capturedDeltas>
                      <worksheet name='Median Goals by Nationality'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Latitude (generated)]' field-type='quantitative' max='7889716.8009304833' min='2807801.0867624213' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[Longitude (generated)]' field-type='quantitative' max='4290465.176154485' min='-957234.357850731' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Penalty Goals vs Attempted' captured-sheet='Penalty Goals vs Attempted' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{4C923120-2692-490C-A30C-957FD45A674C}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='The Search for Young EPL Talent'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='EPL_20_21' name='federated.1ougk2p1drmbze1gtlohy0y5ejf1' />
      </datasources>
      <datasource-dependencies datasource='federated.1ougk2p1drmbze1gtlohy0y5ejf1'>
        <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Mins]' role='measure' type='quantitative' />
        <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Mins]' derivation='None' name='[none:Mins:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='25' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='26' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='6250'>
              <zone h='92750' id='5' type-v2='layout-basic' w='82400' x='800' y='6250'>
                <zone h='46373' id='3' name='xA vs xG by Nationality (Penalties Considered)' w='41200' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46377' id='12' name='Assists vs Goals by Nationality (Penalties Considered)' w='41200' x='800' y='52623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46377' id='19' name='Median Goals by Nationality' w='41200' x='42000' y='52623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46373' id='23' name='Mins vs Mins per Contribution' w='41200' x='42000' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92750' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='6250'>
                <zone h='8625' id='27' name='Mins vs Mins per Contribution' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]' type-v2='filter' values='database' w='16000' x='83200' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8625' id='9' name='xA vs xG by Nationality (Penalties Considered)' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='14875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='57250' id='11' name='xA vs xG by Nationality (Penalties Considered)' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' type-v2='color' w='16000' x='83200' y='23500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='18250' id='10' name='xA vs xG by Nationality (Penalties Considered)' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Penalty_Goals:qk]' type-v2='size' w='16000' x='83200' y='80750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='38' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5250' id='26' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='9' name='xA vs xG by Nationality (Penalties Considered)' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='14875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46373' id='3' is-fixed='true' name='xA vs xG by Nationality (Penalties Considered)' w='41200' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='57250' id='11' name='xA vs xG by Nationality (Penalties Considered)' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' type-v2='color' w='16000' x='83200' y='23500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18250' id='10' name='xA vs xG by Nationality (Penalties Considered)' pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Penalty_Goals:qk]' type-v2='size' w='16000' x='83200' y='80750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='27' name='Mins vs Mins per Contribution' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]' type-v2='filter' values='database' w='16000' x='83200' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46373' id='23' is-fixed='true' name='Mins vs Mins per Contribution' w='41200' x='42000' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46377' id='12' is-fixed='true' name='Assists vs Goals by Nationality (Penalties Considered)' w='41200' x='800' y='52623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46377' id='19' is-fixed='true' name='Median Goals by Nationality' w='41200' x='42000' y='52623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{01DD51CD-08A8-4897-9873-621BD2893367}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Number of Players in Each Club'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Name:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[cnt:Name:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8449A72-EEB9-4D85-B5C9-36CD5DF7FA36}' />
    </window>
    <window class='worksheet' name='Nationality of Players in Each Club'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3AE5E957-E381-44FE-8B91-6E2F9C7F025D}' />
    </window>
    <window class='worksheet' name='Positions in Each Club'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position:nk]' type='color' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Club:nk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position - Split 1:nk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position - Split 2:nk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{959F1C63-C7F1-4379-A132-6D5F7F221DE9}' />
    </window>
    <window class='dashboard' name='Basic EDA'>
      <viewpoints>
        <viewpoint name='Nationality of Players in Each Club'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of Players in Each Club' />
        <viewpoint name='Positions in Each Club'>
          <highlight>
            <color-one-way>
              <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Position:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5C97A36C-23C8-4588-A835-E0225388C1C1}' />
    </window>
    <window class='worksheet' name='Player Quality by Nationality: Expected Goals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xG:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xG:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58151B66-4EB4-4131-9633-DA16A56FAE28}' />
    </window>
    <window class='worksheet' name='Player Quality by Nationality: Expected Assists'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:xA:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40552759-186D-4637-9470-F0E38A7EEBCA}' />
    </window>
    <window class='worksheet' name='Player Quality by Nationality: Goals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{830D406B-3BB8-4352-8B84-677433949D8C}' />
    </window>
    <window class='worksheet' name='Player Quality by Nationality: Assists'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Assists:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Assists:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91FD9AB0-C703-4745-8CF5-5859150EFB0D}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Player Quality by Nationality: Assists' />
        <viewpoint name='Player Quality by Nationality: Expected Assists' />
        <viewpoint name='Player Quality by Nationality: Expected Goals' />
        <viewpoint name='Player Quality by Nationality: Goals' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C3B3DEEC-0520-4498-8709-3978F764FA8F}' />
    </window>
    <window class='worksheet' name='xA vs xG by Nationality (Penalties Considered)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Penalty_Goals:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Name:nk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F199729D-32B3-4D9C-956C-072FF560FA23}' />
    </window>
    <window class='worksheet' name='Assists vs Goals by Nationality (Penalties Considered)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[avg:Penalty_Goals:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Name:nk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E62D337-FE89-4767-9328-04C97DD97F54}' />
    </window>
    <window class='worksheet' name='Penalty Goals vs Attempted'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Club:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Club:nk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Name:nk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Penalty_Attempted:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Penalty_Goals:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB6A117C-B173-4048-A925-79B62399506D}' />
    </window>
    <window class='worksheet' name='Mins vs Mins per Contribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Calculation_1256222864499412992:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Name:nk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CEF4B25B-6E2C-44EF-B54A-E02CC162F8D9}' />
    </window>
    <window class='dashboard' name='The Search for Young EPL Talent'>
      <viewpoints>
        <viewpoint name='Assists vs Goals by Nationality (Penalties Considered)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Median Goals by Nationality'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Mins vs Mins per Contribution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='xA vs xG by Nationality (Penalties Considered)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8310F270-43B8-45FB-B141-9E5A55D1357F}' />
    </window>
    <window class='dashboard' name='EPL Story: Young Talents'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{45982D3B-8FE6-4A65-8C66-F128A7E82F20}' />
    </window>
    <window class='worksheet' name='Median Goals by Nationality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[med:Goals:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Mins:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Name:nk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F88081A7-2507-476F-AC96-520D3E59D6BB}' />
    </window>
    <window class='worksheet' name='Median Contributions, Goals and Assists by Nationality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[:Measure Names]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[sum:Assists:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE07F3AE-71B5-4A4D-A167-B1B66EF2F062}' />
    </window>
    <window class='worksheet' name='Median Mins per Contribution by Nationality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A5C94D5-95B9-4EA3-A14A-853B070FDD2C}' />
    </window>
    <window class='worksheet' name='Median xG and xA by Nationality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Age:qk]</field>
            <field>[federated.1ougk2p1drmbze1gtlohy0y5ejf1].[none:Nationality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67438E8F-3ACC-40F6-A588-9E5D1A52EDFB}' />
    </window>
    <window class='dashboard' maximized='true' name='EPL Story: The Lookout for the Wonderkids'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{90E0D944-F45B-4796-AE04-9F0BAC5C5913}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Assists vs Goals by Nationality (Penalties Considered)' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Basic EDA' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3Rc533n/bnTe8egDTpAdBLsFCmK6pYsyXYsO5ZiJ/HGfu3NJusk+554
      c5LsxomTtTfvuylO3thOcRLbsh1XWbZlUZUUOwkWAETvGPTBYHov9/1jQACDmQEpmyQoi99z
      cM6de58795mLp/y+vyqIoihyF3fxDoVkqztwF3exlbg7Ae7iHY27E+Au3tG4OwFuMoKuKY6f
      OI0/mlo9l46HcLvdhOJpPB7PFvbuLjZCuEuCby7m+05xdsyPRKlHoxCQx71UOMoZnZxCtLVQ
      lJzAHQRRoiaZivHIIw8i2+pOv4ORtQOM9FxgeilEMuhi1hPd9Ma+nt639CDn6ABX+oYBGO7t
      prOzk8HRKXr7et5il7Phcrl+rvtvNhRaA/vvf5yWcgMANqsZ5+w8xZX16OTCWkNBhqOshPTP
      9bQkJ954nbNnzxKKp/K2cLtcpAGf3we8tfeVr+3s2DDnLl6kp38k7z3BuUEml+NZ58aGeuns
      vEAwsETv4FzWtbc6jm42shafpWAU78VT2HY4mIvISQaXKDMrmY2omR++SFJQoFYq0BiLcM1P
      czkexlxSjU4aZWxyhoa2XfhmxwgkZbQ31+OedzI6NUdlXSPH3jxBx4EHAJied/HAQw9x/I1j
      KNRyEBNc7ryCoNZjVsspq61jemIck1bB8MQ0tU3biSxP4wkkMWmlLC77aNmxF40cItEYEyP9
      ePwRtKYittVWbMmLvAZLVXvmoGU79Xlb1N3EpyVJouTePc28ebaLIoNIKClnV1sdFy5dpbi8
      EpmQQOae5wcvvszDjzwB8SghzyJXhycocdSQCrjwhqIYLMUo0qGsdxuN5L7bufFpGh96ABPg
      cc0xOjlNcXkNGiHC6PQ8JeoUVxZ8LJrV7N3ZTswzxVxIyaE9rRCdxx+MMu2cwlFhZ3xsmYnR
      QQJBH00dezGq5Tfx3dwYJBs/ttcU0TWSmaXO6WmSQRdOV5CUIEMZjlKzczfLi06UGgM7d+/F
      OTHI6VOnkEolnDl9hq6rg7Q2Zf71/SPj7Nu3j5H+bhzVtbQ3Z84nIgE6OzvRWewAiGmRlJjm
      SncXdrOc85cHmZpycvL0KaRSKWdPn6G76yrNrU24XIuk0gIyibjax7lFNx27duFemLpNr21z
      /NE/vb7699rF8Vv6rOnxYc6f76a2VIFPWkKzXcLZnhF84QRSqYzpaSdGawkNDQ04SqxMO6e5
      dHWIffv24RwdZN7lZdeuXbhmpnLe7bQz37tN0HXxIr2DY6RTSUQEuq90Zf7Xe/Zi0Mipb24n
      GfUDEHTPoy8qye7ztBOIMjE+h6WolP0H9tJ9+eItfU+FkEOCy7ftZGE0I5YElhfo6h3KXLi2
      ewuZw1Q8RGfneaRKPQ6HgzRStre3YbcXI1lpq5YJnD9/HoXGnPUMuVrPnj172L2jBYCIe4oZ
      bwKZXI7aUol36AQlDR1UOBykRdi+vR2r3Y5cImAxW0gHFxme9a1+nyAICOu6uNW4Or64+rfo
      DQHw3Lee45Vjb/Kdb3+DhaWbR4QdNQ3sP3gYR0Ulnqk+OvunqSgtxWpQ0dfft9rOv7TAzIIb
      AItOyfnz5xHlKiRC5q0J8JbebTqdZmR4FKlUilQiQSOXcKGzk0AkgSAIqzdYa7Yz33OSzs5O
      grGMwBcN+rh8qYcE4HMvcPbMGWzFW7Nz33EkOBLw8MbZK7z7kQe2uis/M977h99aPX7moTae
      faiNs5cu4l1aIuB1c//D76bIYtrCHt7FNdxxCgi13vy2HvwAbTX21WO7SQuAEjh0732IyQQG
      g2GLenYXG3HH7QB3cRe3E1k7QOfZEwhyDTpzEY21lTmN+06dpezQAVY373Sc06fOIVfpqbGl
      WFS30lKiWm1/6uwZDh2451b2/45E+Dv/afVY3vJe5K3v28Le/OIiHosSi0aRSKWoNVokkrdu
      182aAIFInAcOHAZgYXoS5+wcRnslce8s4YSALJWg5/JliKY4fM8eRi5eoKLjABV6Od7xDIvv
      6e2jsVTLYEDPwswEJ49FaNx9L0V6xU34yW8PpKYvrB5LHXuBDAm2l1TgXZzmvgcfZ2K4G7na
      TDDk42pPFx0duzh44OBWdXlL4Jmf4fKrzwOw8+H3YS4pB1GEcSdMz0IiCQY91FSAzbJ6XzqV
      YqS/l+mJMVKpjP1DZzDSvGMnJov1LfUha8qkYiEuXrzIyMQ0y8tukMoZnxzDE4yzd+9ulFI5
      7Tt3IksnARBFMcP418Hv95OOh/CH4hSXV3PvvdsZ7r21qsC3A+q2NZGKRwCQrKjJJBIp6XiA
      kqIS5n2RrezebUc6leLYN7/EePcFxrsvcOybXyLt88MLL8Ox0zAyAZPT0NOfOXf8LCQz426k
      v5fJ0eHVwQ8Q9Pu4cu40kVDoLfUjawcwmTLqylQ6TSweQyrTYDIa0QlxOjsvYdAZkMEqiWvY
      s4+TJ04xrzFS79ChVUjwJSP0DPsxVJawNOvj1OleWvce+jle1dsP11Z9AImhDMgmwa6FGcpr
      m3EU2/Eu21Hq9Ph9b+0f97ZCMAyXe8A5C4kEmIykGqoI+9fUwXGvF/HF1yASy/8doxMQjxM7
      vJfpibG8TRLxOM7xUba1bSeZSJBKpVAolTmL9HrcJcF3kRfpVAq3a5GAz4tMLsdWXIJGq8tp
      FwmFmBwbIRwMotHpqKqtR63VrjXwBeAnr0I0d2APhuY5Nd0FwGFHBw3a4uv2y7N9G50zhSUK
      s60IW3EJE8NDpJIJDCYzrbv25O073J0AtwQLf/bZ1WPtkfvQHTmyhb1564hFI3RdOIdv2b16
      TiqV0tDajqO6dnVFDfi8dJ48TnJFNAGQyWTsufcIeuOKquTF12C+sP+RZ+c2RLsV8+sXEBLJ
      gu2uIWTScVpaYJcAlGo1sUi2OGmyWNlz75G8O8EdZwf4RUCsr3/1WNWSsXbnkOChy4hKC6+9
      /jIHdrRQWddKQ13NVnV5FaIo0nflUtbgB0ilUgz2dKE3GDFZbQAM9fZkDX6AZDLJUG8Puw8e
      zog+mwx+AHMoCVpzhvCu4JW+HhqLS3mx5woVFiutZQ6qbUUAaKIJdKVGgn5f3u+TSqU55/xe
      D/FYDKVKlXPtbjzAbcJGEiyVqVmc6sVanvGPEiS5/7itQCQUwr24kPeaKIrMTE6sft44SXLO
      h8PXf2Aot02ZyczZsWGaS8sBVt01IOOa0bxjJ3JFrlaxrKKKUkeu+l4qk+edGHB3B7glULY0
      rx5LizKr5UYSXFJVR2VNPXK5ApkE9AbjFvU2G7FohM2k4khkbcDKFUpSkdwBLFcoMwcazfUf
      qNWAXgdyeYYgA9XWIkoMRuRSGVKJBK1SudbeasZksbL3QDuTQ+cIRxXI1SUUlzmwl5WTiMeZ
      dU5maYOqG7Yhk+f3NL3LAe4iC+FgkNOvv1xwEpQ6KnHU1BKPxVh2LeIcH81p43DUYtLYUGpV
      mLq7kCwuFX7g4w9AaTGc7oSB/DEG65G6p4oQPyAZWIsjkenb0dZ8CqnKAUAsGmV2ZJjU+CRm
      tRZLdTVCRTkoc3eNuxPgFuDL50+vHu8ur2BP+dbGKLwViKLIlXOnWVqYz7kmCAJqjZZwKAiA
      TC5HpVITDAYyBixBQJ3W4O/xkohmgmJKKyzs1sSQJhMbn0Sq3khiWwIxFUIqdSA/voQQilMI
      6WIFvtJvIyZz5X9BZsTY+ndIlEUZQ9qp8xBf90yFHA7tyxjVriEUvisC3QqMrZONa1csk9/8
      9n+g0+sw6mQkkzLKa1torCrdqi4WhCAItHTsyqsFMpjMeNxrq3kykSClUHL4kceJRSMoFSpO
      fvno6uAHmHMuM/1oB1WSSJYdIGofJSz/NkytRR7KaqvROe9H4s2zJtdVEy49gejNT37FpI/w
      zNfR6X41Y0jbuK7HE5nz2ofAbstYmo+f2+AKEQi8pZd1uzHgXP6Z7tNrVDRVX1/HfKvRXOvg
      ZNcY/oVxjtz/4FZ3pyCUKjV7Dh5mYW6GscF+pFIZLR27mXVOZE0AgGgkjCAIGM0WooEwEW+u
      Qc8fiMKT+1c/JwK9hAf+HtIbNEjiBKHWPnTy/4QwPZ/RDBn1UJ1xhUhc+ttN+53wnofhXbmD
      /xpEES73wr4OeOMMJBLZE0Cv12/6gK3GJ7/0tZ/pvt31ZfzTp26fQ1rtOn8UszpDBJ949xPo
      tVp0phLgHqSbWCfvBAgSCQsz04SDGXFnbLCPopLcHUspVzLbPUlw0YeuyIhSr86ZBIbS7ICo
      mOsoiPl1/gn/RdLtn0RaeyDnmpja3FoupkKweJ2Y50UXdPWuEu68ItC5c+fYv39/vkurcE1N
      o690kKtZ3XqUWfTYDBpiyRTBSGGZ8lbhk/tyndoMuowlsqR463eiG0EqmcS7brX3uJdo6diF
      vbSMxblZAGQyOdHRKN0nzq22Uxk0yFVyEtHMABOrzYwZRCbHR6k2W6gwmUnH8qtZMzekSMeX
      kKoyLiSimCYVmQRAqq4kFc4l3dcgVVdd/4elRZhde37OBEiFFhi8OoBKoSShkDPRO0JVhYnB
      mSDVViUKg43J7rOojHUcvkMnwJI/jFGrQqdSYDdqCcc2ErBbi88e/ePV4/vqHuRI/Z0r7hSC
      ZEXmd7sWAZCl5HQ+d4LlKRdIRSzb7NR0NHL+9LGs+6L+MPs+fD/RZJIXpoeZlcRhdHD1elOR
      naf0lk0MUBKSgV5SkUmU1geJzH2H6Nx3MldWJkUhqEreC3Y5zMwVbmQywDoekTMBnFOLNLQ3
      MD85y95HHmC2v5swZexoK0eSiENsGb2tjJREfccy6OaKItKiiCcYJRCJo1ffXlfs/oWrq8ct
      JW1AfhI85xwm6F4iLVdR6aiiY3vrbe1nIQT9fnounicaDqPR6rCaixn+US/pxIr3ZQJc3XNE
      5wt4sAoCxxKuzODfgAHXIslQBU+rZfnFIImMyMxXM4/xnCUZHoGV5DFi0o+y6DFirpeybhEB
      ie0pMN2P2OFFmJ3PzwMEAfbsgONnIJVxp8gZw9XN7VSv+/yeDzyb8z13xr+pMLrGs1V4u+s3
      XzluFzaSYK9ngSKNnK7xeSTSO8coPzbYt+pqkEwmkC7J1gb/OgQWvUhkUtLJtWtytYKgXsrA
      5GLB7x8J63GXPIPV/11Ir9MC6ZoRxSSpUCZ/VDI0hCA3ISYzGSYkChua6t9GYb2fuPsN0jEX
      C3E1b3hrmB23wfhrVJpMvGt3K2Xdg/nVoOUlUFYMY5ksF3fqIv62RnNx2+qxTZuJD95Ignt7
      uqgsthMIRXnykdYtjxMO+724nGOodAbS6ex0XSF3Ye3gtvvbcV4eJeINoTZpaX9qH4OJ68c2
      zMkPUNv2ACOTr3J10UVIsGFhBw3SSxSRmQAyfSsqx68zMvhVJoICCt19NPj8VBi3IzfsYNbv
      4+sXzhBJJIDMbjPgWmRSLucTjx2hzBvE63bzyuIsA0op0eFuiufGOVRkZZdTjrBRCwSZ3JZX
      xlzs3LkTrSJ7VfL5/BiNd35A91aT4P/xrj/PObeRBJcUZ3Ll3AmWgOnBHo5940vEIhktS1F1
      I9aGDhLJJI6qGsLSMMFZf+6NggANNpbMCVxeP0UmAxGbGrybZxUESIki3xta4OKsGVjREgWd
      nKCIw5ZneLjKgtRyPz8cHKNzYRciQCjAK1Mn2eOo5H0t7RwdHlgZ/NmIJBIcnRzlyaZWvjg1
      SEgOpDO71Izfx7f9PmbLTDw17883AZx4oyr6+vrQKgR6L57CWuJAMJTh7O+lbXsj4RikIsto
      rOXs3XHnCURbTYL9/Z9ePVbaHkFZ9Mhtff5bQSqZ4MzzX18d/ACuiUEadx+kbvch0vEkIUMQ
      56VRkuveowh46w38e+8lUivy9vR8kO6FOTrKHNd9bv/iPJPe/PmRTixbqKnai8u5wIXp7GRn
      InBhegqDUsWU11vw+6e8Xv6j+zKheP4F8GQiTMt9e3IngEJrQOWJY1NLmY8JFJdXU1pkRFHe
      gjK69kBL8fV/5FZhq0nwej8VuWE7kJ8ET/Seo6JpB0df+D71jU1s395BVXn5be1rLBwi6M31
      6nRNTRByypjrzaggdUVGJFIJvnkPCo0SfWs5nTI3qQ3iUkoU6ZmfpVinZyGYX3QqNxhx+goP
      XoCXhvpXJ1Y+XJxxIlL4eiKVvO4zLvuWcyeApaqdh1fUqRnv9KbVa1VH7t/0C+8UvH1IcDVn
      X3uRhqYmRBGkwu0nwkqNFp3Jit+drZv3T8Zwe9Z07t4ZNw1H2jj8yccBODU5TqI/v9Epnkqx
      o6SMKZ+HAVc2GW4qstNcVMwPVpIi+11LeGZn0VksBN1uDHY7ptISFkNB5Ju4iEeTCUoNRsYL
      uGRrFUq80c25iDcSuUuCbwVk+vbVY4kiI/PnI8GNdXXUVpSjkMoQZPJVnnBbEAjC9BzSRIJ7
      dj/IsRMvrIpBVW27kXjsJMiW+xeHZml5dBdAXtl7PUTgo7v34/R6mPBkXFiuGcLOOydX2yVX
      RJRENIooinhn5zCXZZiRXCohkc6f9VqrUPJkYwv/3Hk2py9quZz3tbTzb5fOb9pHLZL8JHgy
      ICPmnmH73r05DaamnVQ6sr0b85HjaWdGdnNUZAIUPB4PEqkE4zW/92QQ52KCirJsM/nNwFaT
      YEPzX+aeK0CC4Ta7n4giXOyGnoFVXbkD+GD9EeZri1A7KrA5ajj3tTcILGZPAKVuzexZdp34
      hTKdnrTXi0OporKmbuXRImIkQpFmLWZYbdBjKikm4vejL7IRXpHr5RIph6pqeWVkMO/373dU
      4jCa+MTeezg6PMCU10MyKWJRanjXtma22WzUmC2Mewr7j2kG3PlJ8OiSDt/wVdRaKd0jS5To
      MrGWoZiMWHSZyel55ocvYy2tJoCOuHucuppqzvU5aa+20Lr78EoGYJidHicuaNBIk1wdmcKu
      SiMzFCOkQqisbbdkAmw1CT75z0dXjyt31VG5K3+i9C3B1QHo7s85rUykqXL6YU8lSKXU3tOE
      e2KR1EqookQhI7jNzHNXLhJNJrBptBhVKnzRXI1PVSKF8R++xOz4BIJajeGpJ9E9+ADuf/gi
      scFBtNu2YetoZSmdQr3if6Y1Z8aB1pSJJe4oK+f+2nq80Qid02vyvoDAHkcFh6prASjVGzhk
      r2fqag+jU26uxvycfn0Ru1nLjiY7ckFKgtxd5N6qGmzz8/lJsNUfRr9tB75AlCKLAYvZQDrs
      JhSDEkc1comIWF5NRXU9Zy9mtnKQsnvndnSyFGa9GpVcgj8uxWoyoAXSopSKUjtqqYC91M7Y
      5DQG3a1xpNhqEuweX5OnbTUlpFMxfvijF2lp285I/xVKqpvY3b4F2rNUCq70Fb4ejiAOjNC/
      EGXywjBSuRT7tjLkJg2vsYzLP8s1qWiIjPyvksmIp1KkRRGJILDNYuPID35EaiyTuUFMJPB+
      45vEhkeIXLwEQOzSZZ6oruKbZh3xVO7g1EoVpNxS/vdzp/CFokRFCTqzlIPtFWwvL6XCaEIQ
      BERR5PmTg3z95W6SqTUyHk+nmHb5mXb5KbJq2LnPynIiSDSZpEirw6LWoFeqCNea8pPgQzfg
      U0RLxthTU1ub93LHnnwpEVtWj2rrW/Jcvzm400hwMhFBpdYxMDyKa3aWph2bOxreMnh8q16Q
      hRDoHWO4z7MqHgmCwEiFAtdM/vsSqRQf3bUPuVSCQanGlEgw5/xitn5GFIkPD2fdV2E08VsH
      DvDjgT5G3C5EMhnVjVINA5f9XPRezWqPExYmYzjeb6HSlPGkPXZlgq++1EV6E22Ryx1mpEvJ
      //q/HiQtiPxz51l6F+fpXcyMkbsk+BbAWrPm8akxa1GoTLRsq0Gq1GE4dIBE8vrpP24Wkskk
      3hVNiSktvOV/eCSZ4NLsdMHrKVFk2O3iyabMjpaORBDUasQNE0175D4STiexwUGUjY1oD9+L
      XqPh43sPEEkkCMZjpOIif/qvb+L15k97suQL87nnTvInHz1CZbGRrx7t3nTwX8PYrIefnhsh
      ZY4xuyGbRM77CHsX6R6cYueePSjXaaF8fh9+v4+KPFH369sY74Dg7q0mwfd+/F0556pqbj8P
      iIRDXD57itBKoJNWo2WfRECWLjxo9K21NNgyIpDKoMGyr470+NWC7QEW/H6Cbxwj+PobAMiK
      iogHAqu7SNxq55ihlstWO4sN9ahUKuqPXuXBXbU0VVpRy+WoZDK+9Eons0ubB2VF40n+8UcX
      efKebSz7bzyd5GsXxylqz1Uz504Af4BANM5AzyW8oSTlNgvJaICzV4cotapwzrrwzw6gUJtZ
      jshQaaQUmzSEYmkWpoapa2wjEE2gIUpaYeCefbtvuJM3C1tNgnnx9bXjhprM3xZgtL9vdfAD
      hMIhJrVy6gIFFgWNmnStnkrdTyi1jyDT1RE0N8N1UrvqLl1m+fipNQ9MQUBz6CBSg4F+X5J/
      WdaydHKdH78vyticl9cujvPw7lp+44mdJJIp3uy6sRJX43NeXjqfG0BfU2rCpFPhCUSQSaWM
      zKxpgBY9IQwxDWwwLeRMALlGiyIZJBjPpKJYds0i09moKS/GYrciIU1EY0KIR3CUNKPQg2t6
      ErXeSl3dWgE4vdl2Qz/mVmCrSTDz64w/pRlnuL/94v9He20xbo+AtcbB4b17kf8M6bzfCgL+
      XEvook1PXY09Sw0KgFGPeP9ughN/QiqSGYiJ5SnU4VEsyveyHMuvjweo7x/M/i5RJLm4yPJ7
      n+ELX3mDSCy/yJdKixy9MEo0nuRd++pyFqq2GjupdBpRBF8oypw7uHpt2pXrm5RMpZlc8FFf
      bsHtC+dcqzKaGQ9mG85yJoDRVsKRh0o2nmY9gW1t2ZF1xedw3FFOcncaCQbQKOX4ojEEQQUI
      WcmebhX0BhNBvz/nHLt3QGMdoe4hFq5OgNlI8X17UMhGVgf/NaSjU7y7QsJzI6m8jgfVZgtl
      BiOJhWyrcDKV5os/7Cw4+NfjeNckKmUuO/GFoijlMrRqOWIw++kqhSznu5OpNCVmLQNTS/hD
      2TxCq5bzgR07eK7nYhYPuCkk+HYNfpn9Z+MXUrP2+o1uJkrWSiShyzz7g+9/mkQyBWkJJpvl
      tsQE1zW34Pd51jiAXk9dc2YhmxiYpfulXsS0CFNBrvbM0vqAAnMeY3RTUREfNTr4Yd9VllcS
      YUkEgV1lDt7T3EYinGB5ZDRLBBqvbmNs/MaLAV4amkMQsjcSpVxGIplifC6UM6APtDg4en40
      iwTPuYNZu8R6tFQXYdVp+O0D99LvWsAdCmHVagu5Q3s4sH8HMsA5NYEgKHBUbP0qeqMoNWqx
      6dREE0kS6Z+vFPXPhHfnhkCaTG+tcMPNgFqjpa6yld7XO0lEEpjbipBJFYTcAbpfOJcZ/CsQ
      0yL9x0PsfVcRctnaai5VVyLTtdAoUfFbyJk8f4VoMkHlkSPY2nZAOk1SqURRXUU6FEZiMqJ7
      4AGOx0wwPpDVn1KrDrNOxZI/gkGjzJLRA+E4xWYd88trA3j99fVQyqX80uEmPIEoZ/sKa6iu
      QSaV8Ni+ek5ddeJcyKz+FcVGqkutBdyh4waGR0aQAMsL08w5Z1isa+TsuS52H2jD4/ai1ps5
      cnDfdR++FXAHIxjVSixaFfHU7Z8AP/nS51ePG/bcy7Y99972PgBMXhzhyvfXknQNvd7DfK+T
      8u01WYP/GlJJGYHExygpvoDf189CUk1d1e8hSNW4v/glQsffRE/GeSMyNMLy0DByhwPvc98A
      QGq1UvTp30eq0+H/wYWc75dJJcx7Qnll9HgixVMHt/EvP7l8XdXmY/vrsVt0fPI9u3G6fMy4
      CmuOBAGqS0x84Xvn8ASyrdZmvSq/JXh3ZTsLg+cJpmSYDSaM7VbmR0YodzgQlDrKHXoQ7tyE
      ck2lFtIixFNpkqk0ctnt9bKcH1tb+UrrMt60+Ujw0Z++SCyRwKSR3/Ts0KlEkqs/yR2E/gUv
      ifP5/WsAJAo7YftH+NyVP8Ydmsbq/Dyfrv41xONv5rQNHX8TqWWtdFHK7SY5M4O0sRGDVpnT
      XiaVUFVsZGrBl7XSAygVUu7bUUUoGudbr/UWnAT7msv58MPtIIqolTJ+74MH+NefXqF/Yinn
      HotejdmgZnR2OW+IsCcQzW8JBijdnb26t7S2b2x6x6J7Ojt5064qe4GWtw/5SLC1qAS/ZxFI
      3/Ts0P4Fb1YAy3rIlHIEiZCzCwgSgeJtDl6bfAV3KPMO3SEXZ1//BoVs18K6LM1SmxXZSjxD
      a3UR393QdnyusH9+VbEJvUbBew41IpNKeOHUEN7g2optNah56lAjT9zTwMScl+8e76NvwkUo
      mkAqkaBSytCrFTRV2jDqVNSXm9GqFfyvr50omCcL7lqCbwlKatdiKHQr6uCNJPjq1S5KrEYq
      KyowaFU3PTu0QpO7Al+DqdxK7cHmLB4gSgW2PbYLmVGNPZCdu8hWXAV05/0uw3ueZCkG5871
      sVTZgOz1QRxFBjrqi6ktMzM2e2NEuKOhhP/zH2foHl0gEkuiU8vZ2VDCAzurqbAbKbPpUcql
      eX1/0ukUiWSKcDSBVq3gw4+2U2zW8bmvnyC1idEP8iTHDbqmSOgrIeLBbL4RT80o01MBYqEF
      4nId0rgfpbGEqvKbv+ru+/PnbqjdRhJs0ar40q/euWGJtwqnvvIyS6O5SW4Pffxd2GqKCbkD
      DHQNc3ZxGrdRSlImQSoRsGk0BCMDJJLTdJTv4l2VD7Lw336f9IbUmSmNjuNPfpSfds8SjWer
      JFUKGc1VNvomXMTyZJRYj2KzFn84lldlWm7T8ycfPUKxRccbl8f5wnfPX5cj1JaZ+cxHj/Cp
      L7yUtYvoNQpqS82Mz3upKTVxdWwxPwmOyCuJzE4wPTmCa2GZvrE5duyoQ5EQ8Kej6HQmUkmQ
      JgOozVqiPh2x0DQl9S3MLXk40rJ90w7eamw1Ce48eXz1uKyyirLK6tveB4A9v1QmokQAACAA
      SURBVHwfnd9+c3USyJRy2p/Yi23FV8mZDvNjcZGwSQDSkEpDCqZ8PqCU9uJdPNLYgVwmo+i/
      f5qlv/lbUksr4qWtiK+X76ezM7/1NhpPcnl4nhKLjkQyhTuP24JUIrC7sYyrY4sF7QUzSwH+
      9rvn+O8fPvSWfH+ePzlIbMOk1KoU9E262F5bjFQqQRTziEAKrYH+kX6K1TKW55yU1TagMpeg
      0cpReN24YxKyVdhSDAYtGCporK3ENz/B5MziLdkBbhRbTYLXJ5A1r5T2KUSCKx1FuJaDLPgT
      VBcbbmqtYKVOReMDOxBTaYJLfqr2NFDalnH1nfX7+EbXJWKbOOb1LMyhkMn4YOt2Ip2diLEY
      Ep0O8298lNdSFjp/euW6fZhfDvLMQ21oVXIuDs3h8oRQKmTUl5t5aFctl4fnON8/s+l39E64
      eO7lnrfk+3P6qhOFXEpk3SRIJFO0VttZ8ITwBCKkRTE/CX7gmjv0BuIb8vnZZjRsShz2Hbzv
      hjt5q/B2IcEARpuD149/i/bmOrSmbTf1mTlq0GM9zPc7ufcTj/HS0MCmg/8aLs9OszMNyh++
      sGql8pw6x/Op/G7w+fDKhVH+4b89wXsONeZc++rRrqzPbTV2lgMRSq06hqeXVw1gJ6/m7jSb
      +f4s+yPUO8z41hnQ3P5Izk70lkiwdovdHVRFPxtRVBhvY6wtYLau+UGpV8oE5SPBhw8fwWjQ
      88yHPoxSKkF7E/2nNlODXjl2hRFhk6ot65AWRbrmZ1mvE5xcDuMWsgeSUi6lstjI+JyXpkob
      /ZOuVQLq9keYmPPSVJX7+yIbxBRfKEo0lkQll5FeR2DjeXjE9Xx/njiwjcEp96ZEOK8l+PLQ
      NNtad1JsUuLxBDCbjcw6p7FXOAj7fBiMW+/yvBlK9GqsaiWJtIhUcvvTkO+5N7cs6kZL8I72
      jtXjtfjgm4fN1KDj4zOkarL/9X1vHENrtiBTyBEkEgxFNnTWTJ+XjAYM73mK4KuvIbVaiB5+
      AE5mr8hmvZr55SDttXbkMmmO6nHRG8o7Acpt+ixNkVIuI55M0TO+mOXKXmbVM7mQ7ct/Pd+f
      XdtKefahdp57tbugKjQvCV7yBYidO4ezqhxhyYknHGMpAPrBYRKBRWqq6nG5Paj1BmKROA8+
      sDWWzkJYDscwKBWMLwcoN2pQFqgQ+IuMzdSgMpUc8ri2GexFeGZmifj9lDYWFsdU8tz3KQhQ
      X24hEksyOuvJIasqRX5h40hHFSe61yZTPvcHjUrORx7dzue+fvIt+f6olTKevr8Zk17Fc690
      51iCdWpFfhKs16WRR1LU1lYxtjBGLORD0FRTWWogbTfAyq4lU2oxa2+zo9kNYJvNSFoUsetU
      THqCmEoLD4ZfKKykOiGRQGsyYqspZmk8Nxf/jgNtdE71khLXNGQN9xxAplSi0KgBsopK23x+
      /C/8CESRdCiE6fQbyKS1Wbr4zQbjNQvwuf4ZXr80zvish1gihc2oYXudnbaaIq6O588xJAC/
      8lAbe5vK2NdcfsO+Px840oIgCAjAI3tquafVwZWReaYWfPSMLTI+5yGRTG2eGAvAdPAIPQNj
      tLe1sAXSxM+Eqws37oX4C4E8qU4A9igUdFo1LLkz8rFUIcNWU0xqMYBDoWEytjZg5StFpK9l
      ZbgGiSCwoyTbEdJuUNNhKaFzcPaGuldXbubvf3CB7tHsyegNRhmZWUYmlWDWq/CHYlnyulIu
      pbHSxpIvwr+/1EV7rZ3R2WVc3sL1hyWCwK8+up0GhyXrvE6t4FBbBbNLAQYm19wmrkuCJXIV
      O9pvXQD7XdwEFEp1koxzqExN6FeeJJFKszA4w8BrXSwMzmAxKZhr1xNncztJh9lKhUqDf8cO
      YkNDyIpsmD7wNL+m0DMwtXTdkFOlXMr0op9QtHBUXjKVxhOI8vSRZnRqBd5glGV/hCvD83SP
      LmRNHL1aQZFJg9sXyRGzzHoV77u3iUPtFUTjSVQKWdZOdmlojm++ejXrvpwJICYjnLtwBZOt
      jKaGa1tBxtrrqCza9MfeKdhqEnxbcQOpTrSLC7C9mb6jl1dPq71x3m2v5mWPk3C+TBEi7Jp0
      cuD7P2FxJahGotejf/RRZI5yqgSB33/2IH/1H2eyVI3rYdQqsZu1DE/fWHHDn5wZ5kv/9xO4
      vGH+x7+8kWNdBghE4iRSaT7+5E4isSSL3hCiCBNzHjyBKM+90sO/H+1Cq5LTUl3EB460rO4G
      PzgxkDNppJ/5zGc+s/7E0LmzlOw6iLPnAmPOBQYvn2TK48U1NEHPzBILQ530TrnoOvZTlGWN
      WHS3T77+14tDN9QunkpjUGVIsFouRSWT8Xjj26dW71vCshf6hzdvI5VCXRWxYBTXSKZ8kMSg
      QrezEpVKSSAWQy6VICCglEkpN5p4KBCm+ScvIaxLfCXG40SuXEFRVYm8vJwSi457t1cRjWcG
      YjKVRiJIsOhVPLCzhk+8ZzffeaPvuv4415BMpZHJpAxMLjHozJ/z81q7YCTObz+9j+oSEy+c
      GmJkxkM4liCVFhHFjNp0xhXgjcsTKOUyHEUGvvpSN4l1vGV/S3nuDlDZVM/Z82fRmkqwKiT4
      JaWUVlWwhB/XzARlFTbKLWZGQmVENtnWthLvWBJ8HdQeakZt0nJheIyzqhDJkbWdQymV8URT
      Cx2l5SgkEhb+x/8kni+YKJ3G//wPUe/ejT8S58dnhrgyPE80nkQmkVBm0/HMQ20caHFwcXCO
      eDJXf99YaWVs1kNVsYlFb3a016XBWYKRtXFVyL4wPL3M6IyHL/6wc1OHu2Qqzb+/1LV6vB6z
      S4HcCaA2l/LA4dyyDVXlsJudq5/rt7XltLlT8I4iwWYjyOWbJ7wqzoiuEomEpMPAudkwGxfl
      WCrJ8309lOj0VChVJOcLV3JMzi8wP+vms98+z8yGNCYT8z7+8hunefbhtoLJCCKxJPXlFiwr
      toP1mPeESCbXBmoh+0JaFPnay9035G2aFkV+cKIftUpGPLg2Ia0G9SbF+u7i7QGpFDo2UVJo
      1NC4lq3j1dGhgg5laVHktdEhBJksy88/p51cwRdeuJQz+Nd/zzdfvUrvRH7VZnWJiVRaZGrR
      l0OilXIpsnX10tbbFwamsoNehjYRkzbCG4yhU2X/pisjC/ktwQl9JWYVkI7jCSQwG7N1/f48
      1mDn+BChtJJiiyE7C/QW4B1FggHamjIF4UYnILiiIhQEkEhge0uGJ+g0oNetpiovhAmPB0Gh
      QHPwHgI/eTFvmzFHI33Tm6+8aVGkr8AEeLNrMu95gNZqO4FIjK6RzA5UyL6gVcmJxnPFq/0t
      5cy4AhRbtFm+RAANDitatZwh59o7KOgOfepHX8NQWglxOXKLifn+cxjt5SzHVChCcziqHJzp
      HqejyUFD627Gp+a478gRLl04zdURJztamlAoFDQ3N2/ymm4N3nGWYEGA3dthVzv4/LC4BBd7
      IBKFsxfX2rQ3oZBK8yakvQb5yupreuZDpCMRQseOwzUuIJGgvf8IE6U74cxaYqqmSht6jYJI
      LEk0nly15gYjCVpriugtYOTK9zOePtLM/HKQ7tGFgu4LggDvv6+Zb7yWm7Fuzh1Er1Hk+BIB
      aFQy/uyXm/iPF0/zyriUYDSVKwIptAYmRvqxFJdTU7Hmo2IrdVBdU0/K76KyoQ5RkLF75w70
      liLsZj1mvZqB0UnkWiMVpXZS/nlU5q0po7TNZkQmEVZJ8DsGggBqNVy6mhn86yGK0N1Pk3/z
      AnZNRZlYAUEux/Lxj1H8p3+C8UMfRP9AC9Zfuw/zr7wXZNnrZigaZ345iEIuYUN8FR99rOOG
      E5M9uqeOJV+YQDjO7sYyZNLc3VsmlfCRR7bz1KFtmPLEHauVMkZmlukcnM0Rr0pD3SS/8TRP
      L/05f133Ip/96KHciLCbhdmZWcrKb24qlfu+/OOf6b6OUitfeE++bNW/gOjuh86ugpe9UoEv
      lBsI5XGFlgoC1WYroUSMMr2RRxoaMculRH/6aZIjrwMigsrIpcpP8X9OrQ0bi16NWiljyRfO
      iv6qLjHy17/9GCMzy/zF105kRWdthEYlB5Gs7HBKuZSaUtOqGrXBYeXhPTXUlpoRBIEvv3CR
      F89eRwW8ApVCxl/W/BTL8rm1Zz7z3K2LCb7Zg/8ubhALm4sbppTIbza08b35qazqKQ6DEXc4
      zOhyxk16PhBg2u/lk/olxJHXVtuJUR8tM/9GsfETLPgy8vVyIAJ5+PC79tWzHIiw6A3x7gMN
      vNo5xnIgTDJ1LfU6NFbYsBrVnOpx5twfS6QyWqX//DBVJaac6++/r5lTPVMFDXHr8cQ9DRTL
      B0lcmwAyNYLWlp8EO0NKtNIElRWbizDpeIhQSonHPbdaNsm5UtbyWhbpnNJIt8Gq/I4jwW8R
      NpWEX69w4lZdwpeUU1zxPpYlVfxL57msdovBIFOL59hoQlRG5/nNxxr4/A8G8lprIROs0jk4
      yz++cDHH77TBYeHZh9ppqbYhIPCxv3yhYF+j8SRfefEKf/ob9wOZCLNjVyaYcQVQK2Xc01rB
      m92ThDexSR1sq+CZB9uQp6oBSLv6EaMBoq99Nj8JHphTok/OcPTlV9m+vYNExI++yExkyYdE
      kmJkPkypKoxMqWBZVYMlPslLL73C+z74LM6V2mCu+RlCSRkGaZrLQxOU6QUMxVVEkyFklNzS
      CRBJpFgmRiCWRK+UU6xT37Jn3XEoLgJnYSc1UZ7CP/9npGJTaAANwMRlYoaPkLdemXUbTL6U
      dUpQW2hNXeSPdgf52riDkYXoqnpSp1ZQX25mYMpdMA3K8PQyf/2dM/zPXz+CNxjNktXryy0E
      IzFsRg1Ti378oRhdo/OEInGOXZnkKy9ezjFo6dUK6srNTM77sq7p1Ap2NpRw/85qFr0hSix6
      VA/+EdHX/4JE1zdheTR3AuiKKri3WINzRo1G56Om3II7oCIt1aFWhxAUBho0VgyKJEqtHl0w
      jdXQhFxpQiEVKLcXsRxOYzXrsAFCWqBDKkeplKDSmXHNT2MvvbU+RVaNEpVMSjyVZi4QfmdN
      gMY66BuCcP742WjpGKnYxvBCEXvg+9g1n2AxvCZO2HU6qnY9S9LTjWT8OCCC0gCiSOz4/0MN
      8CfVR/B86C+YWw6hUsiwGjX84T++VnBnuIZAOM5ffO0ET9zTkHU+lkgST6QxalWk05kAGFGE
      oxdGVy26Od8ViWMXtfz97z6Oc9HPwnKQ412TTC34ONE9xYnuKQQhk3vo2Yfb2O5dE7duGQm+
      FbhLgq8DUcxVg17Diho0oP8eCV9uqCRAqvbzvD6bZjbgx6jMuEfPBfwkk3HKYzPss+ppbbqH
      8Lc+DNGV6CyVEd3HjiIoMmGn//KTy7xwqnDmuY0os+mzimJciwlOJlMsrrg9CwLYjJpN3aAB
      Pv3sIerKzfzpvx0vWGhDIgh8oN7HU8F/QkjerRP8iwPnLJy9lAmKgcyo0agzxTk0anCUgl6H
      MPZKwa+w6Iv50PYSookEX75wJiuN+LCslFG/wNMhgdaynSTHjgEgMZQR7/oWEmMF0rqHeOPy
      dappbMCyP4JWJV91l746vpjTprrElCVOFQqGvzg4yw9PDWxaZSYtinx3xEjtU/9AMDWVOwFc
      EyMMLnjRqtTs3LFWyfDkqROoJBLK65soLbJCcI4etxJbdA5lTStzgxnHqtaV2AGPZ45QQLYq
      68eXJxmPWWksvfUB6qV6NWUGLYFYAp1SxlYkiL6tcM7Cq29mRzmKYkYMml+Exx/MWIUBpe1d
      xJcyKs31kBk6kCozdp9z05M5tbQgM3heGh6k9eE/RznyU8Son8TlrxM/+TcA+Lf/FwJhS859
      mxW6iMaTPPtQG9/MY9SCjPryQw+28fnnTq6eKxQMf3FoblNV6/rf8dw5F7bWPOnRdWYjof5h
      PKKUqUknMc8khrJGlpbnkEZSBEQJL3//HA3bGhlxiWgTHg5VteLz+UCAoy88j6C1IElO4/La
      SL8yjMFiQ0RCecftyc4WTqRwhSJ4InG0MRklOs1tee6WQBQzK38hQXZhCcYmoT6TeFduaEdb
      87uEp76MmFoRMaRaJHIzkdlvoyx6hBF34YwRgVgMV0KkcsezpGYvEz/9d6vXwuNngXfn3LNZ
      oQuAe7dXUmTS8JUXr2QR4nKbnt/94AGqS0wo5dJVG0OhYPhAOFcdWsjzdHrRj6U+T5nUeCKF
      3mTGXlKOSgoBrx2NtRyJWIuQFkhLwKqSYrVaMZWmcS/Mo5NBkUVLXKpdVZ2Kkgosi36UEgsa
      o4n5mVlKTbemLvBGXCPBoXiS+UDkF3sC+PxrYk8hOGdXJwCAsuhRFNYjpCKTxFyvElv8MXF3
      psBdzHUUMfnMDT1aYqlF0JciBjIxBvaWwwjj5LgwbFboQhAyXpkP7a7lUFslp3udPH9iAF8o
      hk6t4Menh9jXUs7BtgreuDwB5PcPkkklFJk0OecLeZ6KIhwqq8tfIumgbV2ajsrcQJJrOv9y
      gKYMi2/Ikw5xvRmh5jZWSRxb3rzS4C8U4jcQk5GnjSBRIlU5iC+/yfrtIx2bpVLoZ5j8qdr1
      SiVyUcaPTw8xNuchKv4m5uRlOtq2sWf/szR2H2NgKnsHKVToAjKGMLVSDsDA1BJff6Ubty+j
      wfIGoww63RzvmsRRZECjlBcsePixd+/kXP9MzgSoLjExvxzM63k67HHdJcFvexgN5NQW2giz
      MbNLjEyALwByGZQVI5bpEFO56tI9Nin9KWMODxAQiM4JfOrYSxsSVbXy4xPQMP46h9oqcibA
      Zvjg/RnO2Dfh4nPPnSyoPp12+THpVLTV2ukamV8VhyrtRj7yaDv7WxwsByJcGclOBlzI81Sl
      lDEX8+ZOAGd/DwGZAkkyRkpeTGt9Mb09favk9hquR2qjnlkCcjtFuuxH9PT04F5yYysqoq2t
      NevaYG8fNa0t/Lw1Hd9RJFipgPpqGC6gfZFIIC3C914k60UMjiJYTcgqKkgm15UwRUBv3c/H
      Ktp5eXiQ/sV5Eqk0Vo2GwR4/zsnCPvjD08vMuPzUl1s2XfWv4ZE9texuLCORTPHlFy5e13bg
      DUax6NV8/Y/fz5IvjFopw6xfs/E8tLuGH50euu73ANy3o4qEIZw7AYpLdLzx+jj2hBNFVRPj
      PWeRW4rxnjpObGmWS6NLVNXXsL1cy/nBM/RZ7UyMTtBWa8Xri2Gya/E4IwipWYxt9xOfniIZ
      miYis3D4iV8mGFjC5w4i12r47tf/CbVGjScmQ6K1IQaW6Ru6jKCpIOGZREIalb2BJx58awlj
      31EkGODALvAHMoR3PSQSqK7IGMbyQHB70Sb3E2pSkgyPIAhSpOpKEsF+5AkP72vcz1NNraTS
      aY5dnuTVyeunQQnHkniDUR7fX89L50fybkyCAO852MivP74DQcgkv52YL1w8Yz3e7J7kI4+2
      U2bLWK2j8SQzSwH8oRgGrZKnjzTzjVd6CuoEIJNl7rGDtSxG84REKsxVbK/zgWChtsxOtyCn
      osyOJLqMvGk7StsAluJi6kr0qIvrWVjyUWIx4yi1IqQFRHycnOjjvkd+iaVAnHS5GY22Eq3B
      hFYOjiIr1TVNeKJpNJI0GpUCtakIXyDK8pKOErseQWFALa8mGvAiaMy4XQsgu/FB/I4iwZAJ
      iXz8wYy2xzmbkfnNRmish9dObHqr1CdHr/kUidJpQhN/RzI0SDKUMWRJZmzo6v4AmaaZbxVQ
      U+bDki9Mhd3IX/3Wu/jpuWH6J5fwBqPEEyk0KjmP7a/ngY7q1QTB+bJG7G8pZ3YpsJpV4hp5
      DkcTzLgC1JbL+MmZIX50aigr4a1Fr6a8yMCiN5Q3n6ijRE91q4Z/vnyGtCi+vSzBT3316M90
      X1uJhc89uvcm9+ZtgHAEvvXD1Y8/7blCscFIJBEnlkhyf2MzEomEdL0dv+FfScdzZXeJwsa0
      7jP80VfyW48LYXutnc9+/EGSqTQvnh3m+RMDWQNVJpXQUV/Crz22gxNdk3znWHZqlwq7AaVc
      RrFZS9foQhaB/aNfPczLF0a5MFB4R6opNbG9rpjJeR+xRBK7ScvuplK6glPMBG5yneDbhfbK
      G6lYk4sa0+3NDn3HIJEtC3vCIVRyOcFYDK1CuZo0KhHoJK3KT1zT8SUmRl4nn6PckR1VzC0H
      KTJq6BlfzFJxziwFiCdS/PV3znL6aq6rczKVpnNwloGpJXZty03CYDWocbr8LHpDWYNfEOCV
      zrFNBz9k6pFtryvmM79xP9f8gfsW55m5lE3scybA8mQPF8fcVDfsoMGRPeB6+3pobbnzi+V5
      52bxzE4jUyjRms3UmFqvf9MvIrSaTND8SgjkwbptRBMJJBKBWpt9dQKklZv72KTjbvJNgPF5
      L1pVRoW5MfwQ4FuvX807+NcjGIlztm8aiSBkBbxfGcmflcKsV3NlOLfsUz68dG6EJ+/Zhn2l
      UPrsSoKv9cg1hIX8BKNxBk9dIFRvZ2p5nnJZnKGFKDJrOVODzxFTFWEQw9ga9rO9IXf2bjUU
      ag2GIjuxUIhInh/9joEskxCLoTEAqm15vHAlEiR1HeA6l3ttBY6yqrznr4UfSgQhpw6YSiHj
      J2duLFornkihUsiuq72RCAL15ZacijIVdgOBcBy1MjOcr9kCYokUV0bmeXRvJiuGWi7P/c6N
      J3RFFRQZ9DTtrCUYitHS2EpjWweHDx2gqaaCbS0dtDQ14gmnabsDBz9A0O0iGgwilctRau68
      7NW3FXt3gDGPn/817N+JvOJBJIr8xTkkChvt7e/GrM+14g9OuUkk03mL4MmkkhtSR16DSiFj
      Z0PhOgkSQeCZh1qpLM6fbaTcpsdu1ubEJC96QqvHTUV2FBsSJOSJB6jk3qJMNFf9tjXrrQ5Y
      Hx+2rSb/qnArobrBWl+VjdmleBTSd3D6I6USnnwYLnTB6OSqOITJCLvbocqBBNDV/QHB0c9n
      EWFBpkeisBGd+H/5wO4W/unYjUXXFZu1bKuw5hS0KJQ9AjLxAf/5vXs40zvN8ycGVp3a1vvx
      728u57vHc5MA281a0mmRJV+Y+eVQ1jXlSl0CbyRCIBbjUFUtb46PkLrR7NB3EkoMP5uJzKJ5
      W/3Mmw+lEu7dB6V2OHc5oyaVZFuPZdpmDPo/JOF8jbQqjKS2g0TgyqqP0EHLVQZbf4M3e0OF
      ngJkaqH9wYfv5ZXOsZxroWicUDROkUlDJJbLGeQyCb90uIlH99Qytejn7OQEY4ElktIkr8z3
      4kwtYbfl7gAXB+cK9sdsVvKlc6ey4p81cjnFOj2CIOSbACLf+973ef/TTyOQifG9Ft97DcNX
      eyittDEwFkIqi6AQpTmW4q3E0swMLqeTsvp6lmZmKD148yovvm0x4YTjZ9c+L3vh9VPw4CEo
      scPRY0jcHpSsiEILIvHadVbfdJT/+p56KsrSfOdYX14de4PDwu98YD8VdiOOotx6cqFIArVS
      Ru94bu1gk06JfqWqjVatYCQ8z0B4DlYklmA8TueME6V0DotZxbLn+m7PNouaNxeHiKWyRbFw
      IsFiKMin7rkvdwKEF4cZGxjl5NkLjEzNokl4KCqtIhCNoyFCWmHkgT21fOuHZ2iuLGNemcKU
      knL0+W8RUZbxvse3vkqkUqPBXFxM35kzyPIQn3ckrvQWPm+dBfeGTG9uD0pFJYmiQUjHkCiK
      iE5/hYf1I+x9VMPF+VZmxQeIxJNMB/spKU7z8Qfvp1ifWaH3NJXx1aNdWTygUPYIgP0tDhSy
      zGgfdS9xcjK/a0cslcRepyDcndyUY6gUMmpbdPhT+TVcoXicV0YGcyeAL6bid/7gdxi6Okhz
      bRUWTTXI1ASjSezmjD5dYaqkpdlFlb0EkySNKi3Bp5Uj0+QGQ2wFfC4X8WiUe556Cu9iboTR
      OxK+AiPPH4BQ/kGiWC7F+OCXSQb7CY3/Del4JuWKUR7lwYoTKIvNvBEspevii7h98OcvX+S3
      7v09jg5kQlc7Wlo5e+X6nrlGrZL337eWQXDMc52cn5oU/+Xp3Xz1xR6WfLl9txk1/Nen9/Gj
      qS7YpH7HgCtPbtDSioy407Zj82rve/bsAeCaYq2icmuywOWDY9tagTeTfetrBN8RMOozYs9G
      GPQFJwCAVFlMdP4HkM4NNokt/Jgud9PqZ3fIxV8d+xzBWGbQlxlm2N/yNOf6ChutVEopu/fZ
      +fFoDxq5gr0bxO1CqHYY+dtPPcYbl8fpGV3MxA/I3DSZRznSbsNSFuE7Y5troaLJ5NuLBN/F
      z4GO1ozMn++8cza/N2llOQDpaKFK7mlarcX0ujLepBaNlWhyTTYPxDz89uOVaPQBLvfG8AbX
      lmOZVEJzjY2kNcJsapnZlXxel2anKdZtorZdgfH/b+9NYyRJz/y+X2ZE5H1fdd/VXX0fUz1H
      z8UlhxySuxySWq4syAS8Fixb1n6wAQOCv8iGAGMBQV8EA5YWsL0StUstvLa4S+2uuLskRc7F
      6Z6Z7unu6e6qrq7quo+svO8rMiL8Iaoqs7oyI7N6qmeGmPoDjarOevLJyIj3ed/nfmx2XHYL
      b7w4xRsvTiHn7pJ/+K9ArUAGcrm/Jiz+F2zV2mcB9IiWgxNiKpko73zwMeHefiz73I511tei
      eLxuoMbM/QU2V+e5+2CJsbERTOiR4shOb8mngZvb7XvWNyOxscHKzAwWm42N+XmGh4aYCnw+
      1LPPDD6vniCXzeuzBHxeuDqtZ4v2hGFze18Xibypzq8ScyzNfITHU0LUWgmBmfOXfp+hwEnG
      gpN8f/q/xmwy8zA+h8lkYsA7yF/e/xGr5Q+YGFP4x6//NoptlUBPit974xUig24e5Q6mYCiq
      St0gh33EpXGZv6a88UPqhVkE5yTl9X+DWmmKOmt1RBM8rLU/Ub5ZFw4mw81dewfvMy8z9/bf
      4nZYWUlreK1laiYryWSRkLVM2Rqg1xdELsepmpxQ2iaj+un3Vvjo2m2CWozIkwAAIABJREFU
      p57j4ul+fvkXf82r3/0vOT95NG0S/8+PP+6KLp9OU8xkWLp3D1GS+Pb3vscbExOd3/hFhqrq
      J0Euj+p08B9//H+RiuojSYM9Tl59dQu0x6bD93wb58g/BkBTNVY/WmD5xjzblS0Gzo/ytvoO
      d7du79FfHX2Fa8t6dmrQGWaq/++zlj3oVrUIAs8NDrc0hJ2iie97foyfhkAK9mE0TdsvAIDg
      mOBt4b9vyeflkTG+tdjCBjh5ZZr3b7xPz+hpRnrdbL53i5OTJ8nXBSKBLBaziujw4LI7gTCD
      Q8PMfHyLfqsHp1iGF924gr1gEnn+5av0hg66w542jo3gJ4DZDCO6HadUKxTzDXuhUDDhmPx9
      ats/pF6YAZOL5PYpytuX8cbnGbw4xvqdJW7/+TUArEgkfrEBJxV2M9GsopX1bKMhV7IYp1BJ
      AgcjzA7JwrdOnaXf4+VXK0tsF/JYzSqnIr18uaeKsLL/NFLKq4iu0wfmXUreK7wxdI4zkV5u
      bW2QKZfx2e1c7htgIhiChxu/XunQ3Z4Aj6PP6Tw+AQ4FjRt/8yM+/uV/AiBy4gJ9Z64QjPQw
      NDrBzT99h62ZxmLuOzNMJVcivb5fnbH2O9i6kiKWj/LVqW+wldvkT27+ANBPgP/upX/KD28f
      fKYvj4zzxmk9gbGWvUFp+Q9Qa3HMljAW/1Uq0R8deI9r8p9Sy1ynltLtHEvgJZwjv4dJaOoK
      WK3pTQQskl5K+ta1YyP4GK1gYvrrv834xeeJbW2ytrpGKh4jFY9RThT3LX6ArZlVrM4WO7no
      5B88/zt7/1dUBb/k58Zb7zKUHKKQn+fLk71cqySo7LRrnwyG+PK4noKj1lIUF/4FmqJ7ldTq
      JpXYTzBJQTS54SoVrENIyRDS6vM4yicg4MMUfqax+GVZbx2zsNyIfrtdMNjXOh36XtJGcX2W
      17797QP1uXdn7nP+zP704tW19QOdpO/cuI4jOEDIJ+5rkPVp4DgS/MlhMpkJ9A2RK5TAtL73
      ejbeutY3MBph6/5+wXCHPVz7wc+pFipETvZz8kvnsX8sMrqsdxWJJTYRVmL8D//wdYq2Eqbo
      H+Gqfkx9xkI58lu6bq88FkdQy9gHf5d6cR6ltIhgH8W+cgrTij4D2QQQK8FSEr72CoQC8NO3
      DpaL5gswO986HTpTqJJN5Ljx3i+49yhFrxsks4JsG0RUM6ysb7E9f5uxqfPMrGXpccgsBvzM
      buQYCYhc/fJvkS3UuHhliJ//7Z8QzwQZXDJhcw/y7DNPP2XiOBJ8dOjpH2Rt6RGVchmb3cHU
      xYuk7sSRm4pUJLuF8996jp6T/Sxen0UQJQLDEZY/eIiyU5ST3UqRj2VJPNqft6PU6mzfW2Jg
      4N+hlB6hoTdpKW/8EaLrFK0guk5i6/2O/p9HK7By7SBRtQq/ugFnThxc/M28Hn/BFR7ipLmM
      0vcqklZg2tVL2O8BpcLmVorQwAUsZkgFXHgDPVhcSfoCDkDEEanTH3Dhd9sZGYowv7TG1Nmr
      BGI5tlfneealT2de2LERfHSwO508+/JvcP/2TSqlEkuLD5h47TRr1xYpZ4pYXFYuffdFBIuJ
      h/d+wnZ8np6xEyh1397i30VsfoM9q7gJ9dyHKP5HB18vzCG6z1PP3917TfK/iOBsBDpZNii4
      SWfaNgTYxbERfAxDaJrG/Vs32Vpr9NcRBJHzz1zhwx//CcnoCr3jk0RGJrnx1/9hjyYSfA41
      tz8IJVhEwpN9RGfW9r323HeKiLU/a/n57lP/ArW6Sb3wCDFuwZIbxyQDQT+cPgHvfgBbBpuc
      3XZwXloTjo3gYxhClmvEth5zOyp1bvznv2RrWU+wW525TTG7P5kuMtVL/E4FpSlhLTAWYur1
      87jDXrYfblCrFRi/ehLvUJniwQMAMCPYh5FcZ7HO+mBhCdhZ7FsxmF/Wg3vtIOoNwHjUfizr
      gUqRdHyTH//5f6RY072q62ure2OPmjFzt012ITVm7s9x69ZH+n/rBda6mOZ9lEhsbDB7/TrZ
      RIJHd9oPjDvG0WHswrMMn7mE1e5k+MwlLn/jm1z6u1dx9rlx9/pwjrspuPN8+N5bWAYtuCer
      bGz/lHd+/H9w94MNBMfBE9ra8y3MkheW1nYW/2OoVhtuzVY4NQGXzu11xm6FAyeAP9xPT6SH
      O++/SaZUJ7u9iehwsBGc4/rMCqdPjlIu1bBRZTO6ztLdj7CHz1K1V/EKFn7n73ydu7duYnY6
      2d5YQVMq5BhCyM1gsfSiOes4fOOE7bCxMs/LX/8OXucn7QW3H8dG8NFBkixE+gYOqEDTX/8u
      N5UK20vzeHsHUaweXMNnCU1NM3XhMtlMmoeLd9CGVDzBAIVcDlnWDefVRw/ZvPnLvfLFBx+8
      w4VX/1dq2z9ETl3DZJKw9n4LW//f0z/QSM8vV+ClKzCzoOv8oO/8pyb02cmCAK++AG9f50CL
      wJ4WQ/IABocG0eolXBUYH4hgsbvQNIXn7AF6eyNYdgWqXsLlsGOxR3BFnNjRAJGXvvQbyPUK
      hUwCd7ifVDyDXXyGtYcbmMPDjAftZIoKF6+8cOSLH46N4KOEyWTi1IVL2Gw2ErEoFquNsRNT
      +ENhvvq7/yOVUoFb16+RjOvZbIV8jvL772GxWFF2yi/TyQSSpfGc7U4XTm+AaklPg3C6fYib
      BSwPL0BmVG/luOqAiTm9+XLNIKcZ9KDWt7+mnwY1Wc9wtdsb9vb4sG4zzC1AOqufGEP9MD5y
      bAQf45MhEdvm1rV3D7zu8ngp7DTXFQSBC8++wObqMgDjU2eQS3lu/fzHINeZdg7iLbTpcu33
      6gt6Zb3130URfue39Ck4T4BjI/gYTwVjJ6fIJBOUikWGxsYJ9fQS6mnq+uDx8JXv/57uxWnX
      2Bf0HbtS1Ttayy3y+09N6Lv9E6Kr7tCAbszGZHpsOZaqQYrReZ65fPmxdxeYuZsECpw5fxa1
      VmRrawtHzyT+nUj5UXWANsJxJPjTgy8QxOl2U8w3IrZOt5tQTx+9AwdnS+xDLKGnJ3RCuQKj
      g5AttNbzP8EoaMPu0OLAKG+++TPGwwIOb4Bo1sl3ng9w8+YyTjXBez/9CZ6JaQQti91i57e/
      8yrZbAGI8Wd/eguvTWK7pDI4keWDt99i4tRZStksI2efbjT42Aj+9CCKIpdfeIlHszPkc1nc
      Hi8Tp88gil0oF49WjOcaNCObhzdeh1wbPf9Jr//xF5q7Q4/1hXA5AgRdZsxWJ+50AdEV5jde
      Gqe8PUfYH8bq6yfgtyBpAF7stlm8vScZGpmgXkgz4QpQKNV4+erzhCIRNqLJp653HRvBny7s
      Difnpp+g+XBmf9+gn83cZaqnj8V4jI1Mit+6cBnfbmOzYknvaRR4sv6w7dBiLZq5dOnS3v9e
      iDQluY3qP/oB/BeZaJGqcelK8zzepmqcKd0InTyxfzDyYWATuxP3yTONxli9/T1Yu3zfMT5b
      9Pv8XF+c59WTp9nIpDCbnn5Ds18rI3jA+2SWg8/ya/U1vzjweSEa3/vvaDBMr8eL1+7gu5ef
      xWm1NmidjvYBr0+AAyKWWrnLVouhg/dnGglJM/fv7qNLp9MHosXtI8VPH1ur63z0zns8mnnA
      7EfHkeDPLSZG9N6HO3BarQRdbkRB2L/4W9AeFVqmQ1e88O//8F8RiPRxf36DU2fPks2mWJ+/
      R/jEC1SzWXyaiTdn3kIspxnoi7C++JCAP8hGTmHAK1A3uzhz/rNpS+5wOgj19WK129jOteto
      cIzPHJGQ8XyzXfi9e9NIjxot06GXlma5NP08Ln8IT6CPSCRINOmh328HmxVfYIQHy9tcPTeM
      YAI0E2GvE0QbkboJUc6D1fdULrgbJLfjVCplKqUSbp9BstQxPluYTPp8M7nePt3B74XXXn4q
      6g88lg6dz3++5+vejB9MyusGbsnG9NBxJPhzC1XVBWB2HjI53TXqdOhqz6kTT23xw69ZPcAx
      jnHU+AI3zj/GMY4F4BhfcBwLwDG+0DgWgGN8obFPAJLRdYo1FbVWJF/ufsBZK6yttsnfboOt
      1UXml/X3LC/M8tHtj6nVVVbXDsenG0TXl7l58yaLq63bdq+uH3TJxTZXmXu0QnpzjcK+W1Nn
      fc14Zu0xPr/YJwAPHtzj3Xd+RS21wsNoga3VRR48WiGfjvODP/pjVjfjPHq0AJrCzN07FCoy
      uWyWpflZEpkipXyaW7fvUK2rrK+to5aSLK5t8YM/+mPuzy2SSulNldJpvUa4mE1y/8EjlFqR
      n/z8zb3EvqW1TS6emeTNt95mbX0dtV7l7p3bpHKlfTwqhQz35xbQgGwmxdr65t5CBUAt8Whx
      i2wmxczdjynV9Aql2bklpqenGR/uJ5vc5vbdGVQNCpkE9x4ssLa+zvrSPNGEnnobW5xhNavR
      F/aT2VqnUIdsLkutmKVYqzH78R3mFp/MRXuMzxb7BECwuul3Kayn9C7AlWqVh+//nAQ+Tpw4
      wXB/mHhsmw9/9S4DE6f44Fe/4s7N6/h6R5i9e5NqpYJSK/KzX+r9Gc21HFt5EydOnODs1Dgf
      f/QRxewGs8t6o6LrN24xErHz4f1VRsfGmBzVE+8yiSi37tzD6w8CUK/VUFSFv/nbn/Lo/m0y
      xTx37s3z3vsfMRQQ+OjeMj/5qx8TjPTw3rX3cbt3MgjNNeJbaa5de5fxk5PcvPEhANVihps3
      b7K8HqVSqVDJrPLW+/e4fuMO48MDIJex+nqZm9XTP2bWYkyfHsHjaTT6nZm5R2rlHiupGqpo
      w1WNMrv5+Y6jHOMgDtgA5597mY+vvwPUmV/a5PTkAOWqglyroe4UFTcHDiS7C7/bgSQK3Lx9
      l6mpU0iPZV/qC1jlhekp/vCHP2P64okDfJrhC/Vy5dnneP4ZfSr9vds36Rs7icth48oLz/Gn
      f/gDzk4/Q3xrldnFLVxOidHJKRwWgZdefpmbb79Jqan+2esPYrM6EM36CWB1+pienmZ0sJeP
      7z3g1JmzCPXS3uR0JDthvxtR0gPlpwbD3HywTK5p6HZdrpNM6v0pnQ4HNbmO1OUY12N8frAv
      EJbLZvF4vaTjm4iuCJnoEoLVgTfURymxTtXsxGMX8XhczNy7x/CJM6jVEh6vl1w2i1mTWU8W
      6QvpOdtep0S2KmBRi6xsZ5ka6+Pnb17na699CdBVoOVohjNTE2TSafx+/X3ppt+z2Rxuh4V7
      Dx4xMDRI0Ovmpz//Ba9/7auU82nmFtc5c+4s5WIer8fL1toSRUXaOU3q5LJVNFMdr8dLNpfF
      6/ESXV9mYzuJP9yHz6qRrUHQ48GsVVnZzjLYF9pHD7C9sUKmAsMRH4LTS2xlHtVsIdg3wNaj
      OUR3kNHB9oOej/H5xKcaCd5cWyHQO4RNevKdMhndQPKE8TieZlHlMb4oOE6FOMYXGsdK6zG+
      0DgWgGN8oXEsAF9waPUy169d48Gj5b3XPu1erp8ljgXgC46HH95g9JkXSMc3mFtYYG5hgXff
      fJMHS9HP+tI+FRxXi3/BMXxqkusfXMfpclHOpigoIm63DVEQPutL+1Rw7AU6xhcan1gF2u0A
      fIxj/DqirQqkaVojNQDQ6lUeLjxCsjjI5wucuXAO6bjf1DF+zdFWAGLrS7x57SOuvvwlhvvD
      mEQrVgGSxQqn+7xkqxp+SUVVVWrRv0SO/ZXhB9nG/yfMzcPNjnGMzwHaCkCpXOUrr30NaWeb
      r1dL1FQzI70hllJZzkRMmNANpc38SRZXv2n4QdNDYQI7DVPz//KcIa0w+CyOv/tvAahu/QXV
      6F8Y0jsm/wmiW2+HmLv1D415u6ZwnvgnOu9r/5ra9X9tSG//nX+LOPQEfS+P8WuBNgIgc/29
      Dwn0DvLlb3xFJ7Q6ODmlNwMNhUP7qOuJOpXZsuEHqZcb6Zl3bca6k8diwlhEjgZC4FUsk0FD
      GrN9ZO/3ypv/HDU+Z0i/K7jLqSX++MM/NKR9deIrfGnyK11e7TGeBtoIgMb5CxdIFSpddZ92
      O9z0hQYMaaxSI3lt6IzxvGCrb9jw70b489yrhn/vNffw9Z3f84qfdG3ckL5Ps7E7fuH/KSZZ
      zhlXf/2znZ9Bc4VvOgxmWwH9UqM78gereVLlNlNSdvCNqQAAqZLMB2vGtQeTQTuTIf3K/++/
      +oilrYwh/e//tw1B/Ju51tPgW/HeurlCJVM0pB97TW+H/3ncFFoKQCmTZX1rhcWVFM+++gKd
      2hKJkoTd6TCkMZsbfmVvU2FJKwi7LbGB2eoIdzos6q8rXnYTkTfrYeNrrTc61smKRrmmGlDv
      n6t26aGL0fkOHe/+G/2HXTBz0mV856yWxj0ZvPe/E4rOGvOe+vc6b2WTE8UfGpL6Pa8A+n37
      iucBxWqnirXGojtR/IOueVcyRUqx7gqBDrspfBpoKQAOX5hIj5+ludgnnT/wiZFaTbPwjnHv
      yFdHK7CzLl9Muw1pfaKxoBrhTP8UqvLk43iM8FMty7KWMKT5Zzs/ZVkiHjMWdKvHSWDn93fr
      i6zUjYXrfNPv2lqHASaOMPQZk7TCYTeFrR+/S2XT+J6M/d53D38hTWhrBI8MjZOfFvms44Fa
      qYySND6SNbmhOoRk4xvsqLf+RpqmoaoqqqYiia15CKNnMXs6jP3ZgRJTKfxJ+wnlAKav1bHu
      LKSrQwHOeborqLGZXEyIFw1pHOaevd9X5AqzVWM1pRnVUr/h3+uy8SbTDislO38wO2lI87oY
      4PWde1IR7BRFlyH9Lg6rFr618AvefvSL9gIwP/cQq/XpNJY9jJ4+HhrHdOo1Q3q/o/XUkLXt
      DZLZFB6nm/GBUUMes8tzKKrKanSNr7/wGqJw8NZsVyQqJd2WUTUNbUc/EprSBnYtipLmZla5
      YviZY1o/u0tp7p6DzVXjhXXlFf2nUod81jiGKVZMOA0puoOqqtSVOpIo7YsLPRFEO4LH2BVu
      sjY5JRx2TO7uupOU1DgPy8beQn/9CpPozyRRjDG7fa+9AAQCARbXEm3rdtshkUmSLeZIZlJc
      OXO55ZQP6QPjXVoYEmFng3NanfR4egzpLULr6rDV7XVsFiv5Umcd9cTQBPeXHjDaN9xy8QNU
      6+qezfDB/Zs47A62kzFee/ZLB2hFpxPvGeNd2hZufK/tlJnV7e7OW1Vl7zpUTWV9e4O12CZT
      w5OEfPoCcimNJ/d9/zcpaM91xbsZdaXOzQe3KVXK9ATCnBlrMRKoCWuxDcqVMrW6zLnxg46O
      frONf+Q0dnD4pSfbdANagdc14zG6Ia1xevscJxkLvdFeAJwuJw53taECKVXmFpYIBcNEE2nO
      nJpsaR9Ua1WiyRilSkmfBN6C6KTf+Kh3u1sbmt0IVzOGIv3ky0UsbVSaZsh1mXK1zEJsi1Oj
      UwhmY94Tg2NsJaJtTxazWdhzDLRbpM0D/KZHnmFCGmnJywiapvFw9RF2m41KrdqSxlYOQvHw
      JaSiIOJ2uLBKFk500V07nUsj1+uUq21Uv7oGqQ5bas+TpaZZ0OjHeKC2lUbazoQcQixNtROA
      GtHNJLVShTroQmC2EPR7iSZSjAVsJCuNSLDa5Crxe3xki7mdBdRY/YqqUK/rx1mzx6iVmiJZ
      LXu0zbzbCVcz72bI9Tr1ep0Tg42Hp2laS96lSplKtcIzpy5iNrW+7ua8QU3TiKZiCGaBsf7G
      wt2lVVRlH22rRaqq6h69z+7D6tEfR7udtBVvk8nMUM8ApWoZa9M09mbeFVnZOzE68W6GumMX
      za0uMBDpJ+wLHeDdfE/6Q33E0vF9KmEzb7mudPS6OeTW91tVVTRNQ0Pbd0Lv0hbzEsszxhtI
      xOQmHNbpbbJuL7YRABMPHz4k0Du4t4TVWo6l9Tj9ET/z0RxnwiYEk/5FzU27paZp1GSZgXD/
      vl1UMAstR2e2UlNMJtMebTPvdsLVjne5VkGuy6xtrzMxOGbIO5FNEvKFKJZLezrv47ybdeBE
      JonH6WEwst9g3KUVmty+7Rap2WxuybvdTtqSN1CVa9gsNkLehv78pLz3QdNY3d7gyunLuOwN
      Y7Qdb0VVkOsyIz2D+9i0uu52aMf7xuytlirnLq1ccXQUAGtvgL7Hnn2bc17iynOnScYbi9Js
      9fLsMxcYGBzi4oWzbRPhcsU8daVOLB3rKlN0KNKPzWrDYevsnmwnXO0QS8f3/nVC0BtAURVU
      Vd0nGO0gK3XsVhvJrLGHCtov0nboD/Vht9pwOTqbsaqqItdrFMtFosntI+WtqIouuJUyK9HO
      ne8KpSJyvc5G4uiLaSYGx0DT2qqcokUiEAka/rM7D7qw29oAnkA/veHDByWS2RSxdByTyYSi
      qgeOw8fRSk1ph2bh6g/1duT9lWljb1Mzwr7Q3hHfDTxON+l8BrvF1pF2d5HW5BrR5DZ9IWMb
      qN1O2ppWJZZOoGkaNov1SHmbzWZd9UCj1xvpSB9Lx0nnM9isNuCgEVyt5VmP3jDkYR01EeHg
      tbVTOXchSRKBiPHzaxWsbSkAxfQ2f/YffkSwdwJjje0gzk2c4dxE95Pg0/kM5WqFh2sLLT0H
      zajKVcrVCiaTCe3Q/qlPDpNUwGTV62VHR1yMsqsWGNfQamiUq1U0TaMqtzZUmxHPJMkVCzza
      WOaKx3gwtEWS+ObVr3V1/YflLZgFLp7oPivr6nljT1O1lmejgwBECq1Taiq1KufGTxP0Blr+
      /UnRUgDkapmJU+exWeyfeSCsGaN9I4z2Get5MwvGvuCwPMYY3QtoM8yWPGbb4QvGRUHk5Ysv
      PNFntkKxnOj4Pc/0f6XlTvpZwulyc/aicWwk3Ns6CLe1o1atbW/w7JlnDHm087q1QksBUGUN
      s9XGyPDAU6+av3L68pHyyxeMk9Wc5UawKZ6aY2bhF4b04athnOi5S3+xCI+MU1n4l7+p//wk
      i7TTSagotY7fs1ZrHfvoxBs6byJPKlzbmokf1ozL0L+pmFtynhwcb1KvjNGNa3gXLa8mMDhC
      aHOdmx/PMjjSXej/MDjMLm2y5DE7O/TfFxoZnZ12GE+kccR6A26GJ4zD/jZ7Y2CzZcCOzdJd
      aP6wi3Rl4z3iK8Y5T2d5vqvPfhyH5d3pnngDT5YKQamCqcNMYFObeIPf48Pv6W70bjuvWyu0
      FkeTGVkBm6ZQA446/eswu7TJXMckdsipMTUsFa/PWEd0uBq8bTZ7R/pm96DTJeCpd9dIw2UX
      uDxpnPXaG2gIl8tjRQ52d6etNjtDI8ZOA0/T9zoMb4DtYWPvnc/7ZPaX0yJxLmJsTEecnzyB
      4zBet7ZP88rVFymX5cbiV2WWVqMM9vh4uLK9LxKcciZZCD80/KAey8ieKvHrCl+0Qnmru6Sy
      ikVlMWwsuFZnfS+p0jQ6jcnf3TR0m83G0KixAHh9DQN31J6gz7XRFW+AeY9xBmbIWtr7vdkx
      0Akuq5MLA+cNaXo8nb1NndCN1y1X2GQ9eqN9Rdj/98P/F4fbz1e/+5vYAMwSdqvIdjLLWMC6
      LxKcsCdYiMwbXtRF4UV8O1G7TruXr6d/L8IXlwrMe4z9+AFTFctudLdi7NlQa6493lJhGXfi
      bUN6qpeo1/VdZLBkwVM03kl3eadRea9DaMMpqJzcoY/ZeojVjXerRiS4s2+uOVq7bJbIisa6
      c09TJPhEztid6PfY9nibpFxHx8AubVbOcatyx5DWXLPTW9cdHd107GkVHW/nGt4XwTaXMFvT
      7QRA4tz5U+Qq7MsF2tjcJBIOMx/N74sEW+I1bB8bxwykHhVxJ9T/wGwsAAPmCM/uqB42Wxa3
      y1hvlCy1PVVFqxoLgCa792jT9jLLHXa7SxYVxw69J+BFrHfIwtyhDVZFvjpvnIM04ZMQT+j0
      NWGOkpDswPsNAOqSk3XnmCGtxRoksnMtK5UwGwXj0+i1JlVvetG4dsDtHkcc1enXXVmSivEG
      dWq3Ftxc4B313QN/F0wCiqYv4IhpkOd26Df9GyQxDu6dFXXbpTnK3M413Bxl9geCKKMTBm1R
      UNkXKBasTE9PAzD0WELfkAyScUkwnia1cqPDw7PaGqpSJmdhad1YLzw1JLDrku8UaAmI/XsG
      9qY/zM0OXpEJm2O31oZEao5U1Nh+2TUm7TU7kzFjlSZQbOjpFfMDSsKyIT3oAlAVbB3vYcjS
      uGf2zSVci8a1zM3I5A4u0mZI1fN7yuy6I8t6h0KeVjCbzFwZeh5RELmx+kHLrIEN3zrr0vKh
      eXcDS2kFd+Lt9gIQifSwcedhV4Ewi72Ay79lSCNIjUy906eNH16Pu7FzxmMaM/eMj8IvXdBg
      R3t4R3nHkHZMPcOz/B1DmnaIp+aIRrtbSJrDQ+2Use9faaqj9sVXqaYeGDO90NVHH0CkZwBJ
      6X7q56rFOO/fIpj4pJq6hkaimOiY0fu0YC2tYkq+Y9QbVMMsSV3FAVLlBAsdHl5ALrGrEp9e
      +XeGtO7wEEz9fQBMFQlzpoMHo6nKyxUwFkS7u5GDH14pc+ZD41weR7C+d7ps+WoshTscdTvI
      kOXtDsJ4RXtxz59+ujrKaHesKVaL3NucMaTpc4+ye+Gb/ipb9S6ZHxKDJS/2DjZDS2jgtXup
      yGXcNjfJ4kF//UmtRETtcvCgud7RGDeJDRtryx9ieex0ewFYWV6lWihQh45F8V63m6F+464Q
      NmvD5XfKbBx8EkwXAF0A0s46ixFj/bUiNc6pHve0Ia3f0bA/ButhgmXjqLBbbViydneyo4Dt
      QlETZGt/aUhTVYLAiwC4pBexWLrb4ou1Eve3jAXgUr8T0E/aO5VlZkv3Den/UdPv4SXj/d05
      3lCvtpd8bGwa5+Hz8sGXNDRqdX14Yq3e+v0DmUFC6e5OiLKlxELE2BMpOP2E0UsyK5Ypsq5v
      txaAai5J39gkqfI81lYEj6FmCVHYaUzVDorQWEizDmNXmNvWSFYQHDEsoXuG9Cap4Zpc14wF
      QNAaD9faF0SaNr5uwdW47n7RjSQaG9m78Jo1XrEbqx1DYkNws+USUdpgAAAOaElEQVQ6pYJx
      W5RdZ56gKLhKJUNaS1OdtMNuw+Xq3r8+lDEuW3RWGjvpcjrGfOzwM5LNJjNOi4tMOUW+mmtJ
      UyqMUkx3F/ySgaRgrLCXTA1VOlAMMhk/2VoAKvkMM4+iyKUSdaA5liaX8wfiANezEX60Yryo
      /5cp596i/ucfGkeXz41E+N92mrGJVQFb3lgMzUpDZy1f+8CQtjoxCV/WPQQVeZZy6T8Z0nvU
      IST0RS+7v0FNNo4078IhODjtMF5IdqmxkGxiDiydU6sB3HKR6cRdQ5q+UqP4/GJ/mD5v9zOM
      i6eNr9sSblz3S4Gfcbpq7HiA//nAK7oNEMdsMmMRrNSUgypQ2VWlKHenurnKIhcWjIOaPQ47
      7Cy9upqkUp9rLQDegQle6x0Fk/mADbAXB6hCaGddDrtcvNRrXLfrbQpJjw4aL7qe8AXgewCE
      SiFOJYx3aYfc2KVHg8b9OnqbIoMb+VUWNow9Hs9V/8Gufc1z0SxyhzYdu5DTArH/bJwyELJY
      se+U2Qr+GUTzcgeueqKR11nm5XOPDCmHIg1huljVqJa6j97+6YqxW/PlqSKvdM2tNTRNYzFp
      HDvaEMzERON0zN3807qWJFszTrEJKDZ2i83r5htUxH/T3gYwt8m19zqtzK/FONPUliZSg/MF
      w8/G2eTl+u526yNvFz5rQ6UZ6Bng+Q5pth5nw2369579hiGtGGjk8khlCUfaWDUQmgzsu0mR
      5KZxbsl3dn7WfAG2f+N1Q1rb6AS75uOtQpXtjPFu91/t/LRKHgaDxh4mj6ORUraSPk06adxH
      qDkBbTp4yZC239GIrErmIayC8fPco1UlwiVjg7l5MzMt/DGm9dvGTL+s32OzFsGuft+QVNQa
      Rf32wAiBiVcOPyHG7Q9z0R9G0zQURY8EuyUPg65Rw/dJJsuer/dkyXiRSpWRPdrD8k6YjL+S
      DTO2HdpAbQJrh2ux1n2Na4l4URVjPXOXVjJZOl63W/Ls0U/P2ZGXjRPtlN/UaUslLytLXzWk
      HfKP4R7V6R1ud8focbMffuKKcWzE1xfco++J/C5eydge2aUNqgG+Z/qe8XVrE3v0RfMr5JoS
      HY1415QCSdk4gOdXAiiKrt5taCf52OT45BNiFEXpWJn1JLTHvI95Pw3ej9N/4ihE8wevry6T
      SDWasG5trhONJVrS7iK+vcn6+jq5wsFdpBX94zxb0ZbScVKFhlGV2l5jfnGVaCzZkv4wvJux
      uPCQePKg7/kAvVxkO1mkXkySLMrGtDtYWV4klTmoWrSiT8ai/OqtnxMvdMc7Ft1gbSN6oKau
      mT66vsCH1z/WG42odRbmF1hbfkSuorTlXchlmJ9fYHX9YLS8mT62tclWNLYXZE0nk6w+ekCm
      XP/E172LdvfkcfojC8MVsmliiRS1JvdbpVRClo1de+GAl4WlVeKJ7jwg3fDEpHH35ntsxHXD
      JBAMoNRlqjVjf3VXvJtQKBS623kEiXRsnZX1OFapu52qVCxSr3c3fkoULQwMDiIJ3XVuq1ar
      WKiSKbb/rla7E0ESdB3ZLBLwOPR7WG+vSrk8PswmjVqHIpRypURdlvcWcq1axiSIdNJFNE3D
      KWmG172Lbu/JkQmAy+vHapFIxhseBLMgkst3MJDMZvp6e3G1qNhvSd4FT7WuIlrERuMUVebR
      2jbVsnEqc1fX2wSP293dIi0lMYkCincQl6W7Wy6KEtmccUvzXRTyWbY3V8mWO19LtVRgbXOb
      Qg38ztYhTrlaIp0t4/c793bpcqXK9tYqpQ59fR7ML6B2SLsQzQL5XH6Pt1WAvGzG3mHm1o3b
      d0lkC22vew9KjXQuB4IN26clAHK1SjgcJBjeCTRpGlarBUnq0JFMqZLNV3B2WQghigJCm9aF
      u6hWFC5ePg+7KbKikzNjPQTDxh0TuuHdjNnZWZbXuggCOcJ43S48FKgZ7KCPX0u7Fo2Pw+/z
      gcVD2NNF9zdB4sT4CB6DFvWS1Uo8uk21UtnbpYOhEKHeMSIe48V36fwZ3B0qtwRRxCwIe4tP
      MYlQShoKcC6dZKAnhGrq4juazFgkCVEU6dTO9MgEQLJaMZvMja5qmkKtWqVU7tAFQXAimasU
      i8aeBAAUmZX1zY6emHIpx/zCOh6v7lXJRZfYyimUSwYnQJe8m3H65GTHijIAdrrR1ev1rnLc
      q6UCW7HEvs51RsgVCvgdIplCh5QEYHNzi3BPP4W8Ufq6wMDQIJlEfG+Xvj8zg2RWKFbaL9Jq
      qcDK2iYlwyi1wsrKOqhKU6KlhqwKuGztBd7jD+IPBImEuojEa3oXDl0APqUTACCXSZPJ6ipE
      pVJhbWubcqlDgEApsrKRJJXp4rgXJHwuO06XsbvQ7fEgWTTSKT36afX3Mxxy4PEYBKYEif6e
      MKrW3aLLphNsJDL43V3UCAsSNtFEtZQj30GFALA6XAR9Hvz+Lh62IlPXTDj8vQSdnU+MkM/F
      8soKTpdxE1qXzYzZ4d2rBzlxYhKz1YXbarBkujhdQKC/vwdVbWwEgqYguXwIJuPNoWu7SJDo
      C7pZmF+gLBvTH6kAeH1+fD59kZmAkeFhhgY7FNWbJU6MDeP3ddcVuDccoKYaS7Wm1MmlM1Rl
      fbFZhTqbsVzHjm82qxXJDNkWHqnHYcLEyPBwxyN2Fw67nbpmxmHpbARn0wkwi10/bJMis7E0
      QzTfOeXZ7Q/hdrk77qSJTJrURnRvl84mEihmwXBHtVqtbGxsdnQMWG1WJMlMLqtvjsWKTD66
      wHaH63d7/d2dAIpMpqzx0isv47Ubq2xHKgDxeBzTjulpdbiwWyWKRmoHgKogIyJ2kP5dlPJp
      ltaMMzK9vf30hQYYHtRvloKVkM/eMRhUKBZxun14XZ3bNHr8Qcwo5PLd5dikk0lEaqSLnRep
      1x8il05y74Nfspbq3Egr6PdQM7uJuDt3wQZYXpxnpYWrshk+Xw/PX72kP01Nwx+OoNZqqAYq
      nKoohEMh5A6CWywUsTvd+HZU1N7+PkIDJxn0G+d8xTdXuH3fOOMTAEHCIcHm1lZHm+tIBaBe
      bwQYsokt4ukC6U6qjVlCrRaQuugNCuAODdLrMb5Rmc0VKqINdSdKmM3lsVslotsxw/fJ9Tpi
      h9yTx1Grdec27RsaQjG76fN2NuI0TWN8YoJzz1wl0smwVWTu3p+jf3AQU5fd8qLxONlMh252
      ikyqWNZVIE2hUK5irmRIGghwqZhHsFjZjhr3BpXluq6fA6h1bt28g7mWYi1lnPbe0z+I2iZ1
      +sBnlMsUS2VDgYUjFgCbVSAa14NN3lAfp05OcOWScY57PJnBhNLRBwyQz+fJ5/P0Dxr1rVGI
      J3OYlQKxhL47VyplytUqPWHjPHcrNa59ZJx6vYu5+XkKFZnTJzv3NAXYXFvDYiqxme28o8uy
      TCqdRrQ5sYoddCwTnDr/DCM9ftQuJ7pdfeEqg4PG9RsmTSGZSOkqkKZSKpWQBSdhd3uBlGtV
      SqUy4Q6tTxxWuHbtI71bv1nk3NlJ4nkTPQbCnohFqckakQ79P3dRq9UQ6gWSRePT6NC5QEao
      yhoqXbTdboKmaV15RgBi21t6dDSRIeRvl7AlMHZyktWtOD6ffsT2D3Y3eMLqcBDwdreIBnrC
      FEoVUpkcAV/ndi+iZEHWrEj1EnSosrBYLIiC0J0NoFSZX1zDJ8m4h07jkIz3tGqpwMrqGsFQ
      DwGfkbtSw7RbrihYGB83zskBkCxWFCWP3CEQZrI66A14986r7WicYCRkeILFEwnyxTJWu5PB
      vs6z1II9PURjKUIu4/V3pALg8XrpGzjcjN9Ibz+RNv0gH8fE5Em62W+LyRhV0YGl0+75GKqK
      wNREd53wXB4frkO0OfK4rSzcX+HiFeOdF2Bu9j65QplcWe5s9EkuLp8/hQb7Bnu0g9XhIh/b
      RBasDA+2Tx2vymWomw7VHNnl8WGOxTtGgutVhdGpRkcGl9fHg9l7eIK92NpEyk+fOdzo9Psz
      s4QDXvIVBaur/aZwZCpQtVSgVMgxO794VCyfGM5QhOTyPPlSZ3VjF5VSAbmuHioV4jBIpYvI
      xW0ypc5GsD8QIBgKEgx2niUA+iCJbhb/LiRPkH6/ca2Cw+lppEJ0iVw6idVmx+ttf7LIlRIV
      ud5IhdC0Q6dydIPevgFKhQxyh7jOkZ0AK2ub1FUzVqG7/JWnidx2DJMVcgWZcHcVddisVtKZ
      DOVanaGBJxiC2wHBSAST3c1AB08HQKSn7xN3XTCCz+NEMdj75GqJRDxFsVxAoftd0uMPMvPw
      fYYGB4HWJ5dkcyAoNeTdOICmkMmmiSVzhDofjl0jEvRTKuZwWo2X+JGdAIMDvQRDQQIdDM2n
      D5lEWWW4f4y+8CH6TAoSwwO9iF0M1HsSmE0mqoUs+Ur37UmeFhRFJZ9rHwmuV8sUanBicuzQ
      7fH9HpehcAG4PHaSWyndCFZlkpkC/X19mM1HdALIJW58dJvNdAWPzfgbHNkJIEkiK8sruLx+
      QoEut92nAomeiJ/llVW8wZ5O9uY+2G02aqnua2cPg2qtisUi0ZW76ymiWq0SDvrBoMu13RPk
      8oXu1K9mbMdimAUzdptxG0Y907SqLz6TSCjoB7OAVTyi/VhycPWll0jEolRlxTAD9whzgRyc
      mBwlEDjaCR6Hh8yjhSV84d6uU493kcsXsVqewgmg1ilVZESlSCzXnR/7acFqtbK0tkm92kXu
      1SFh1hRyhXLH/BtRtCFJqm5gCxLDw8MMDvQjHNUJsINQpPMaOFIv0NbyIpp3gD7j+vinDInp
      5w8/FFrTNOx2G5X6U9ihzSK9vb00Gpt8tvB7XJRrR6+K7Sb8GUGulthYX8fq9HYZtXi6ONJA
      WGo7g6x173n5PGF1YZ50Lke+/HQ6qH1eUMhl8PqDFIvdtXk/DPoGhkgkk6SS7btKSFYHkUgE
      waR9LgTg/weiXape3+yJHAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EPL Story: The Lookout for the Wonderkids' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='EPL Story: Young Talents' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Median Contributions, Goals and Assists by Nationality' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Median Goals by Nationality' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Median Mins per Contribution by Nationality' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Median xG and xA by Nationality' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mins vs Mins per Contribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Nationality of Players in Each Club' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Players in Each Club' width='192'>
      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
      y8DPKsYiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Penalty Goals vs Attempted' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Player Quality by Nationality: Assists' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Player Quality by Nationality: Expected Assists' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Player Quality by Nationality: Expected Goals' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAIP0lEQVR4nO3d228jZx3G8WfOY489dg7OqcluyDbNtlAopRKlSEWqBEJI/KH8A9xwCxVi
      1WXVsucm2WQ3cU7OwacZezwzXFCFDZpUsGTntef3fK428V48kvPNO44dR0vTNAWRULrqAUQq
      MQASzXz9gz/86Ss8eL6nagvdkPUfLOC4WlI9YyJcCeD+01f445cPVW2hG/KLYIjthq96xkTg
      JRCJZmZ98odriyi7Nu492sGnP1pF86SN2bqHUZxg2i/jH5tNHJ93895K/yPb0PHJ0gyetzoI
      RzE+aNRw3B9gxS/jqB/CMQw8ODhVPVOpzBMgSRL0ggEAYBjFqHoOeuEQNc/Fo+0D+BU315H0
      ZsqWiW9PO6g6FsJRjNNgiJ3zLvY7AaI4QW8YqZ6oXGYA/UGENE3hey6iUfyvCEoOdg/PsLY0
      i4NWO++d9AbagwjLfhnn4QALlRIqtgnfsbDX6SGIYkDTVE9ULvMSaKf572Pxm839K7e9aMo+
      MidJkqa4/939dRoM8bLdu7ytH/VVzRormSfAynwdrm2h5rn4eGMFlZKDW/NT4PeLyWLqGjzL
      RMU2sTHjY8q1sVgpQecdeSnzBJj2PSzM1FCvlPDs5REqZQfrKw20eyHOu0HeG+kN2YaO6ZID
      U9fQ8Fwc9UIs1zyMkhTH/VD1vLGQeQK0eyEsQ8d5N8A7jRrWVxoAgJWFqVzH0f8nilPcrntw
      TQPdYYT1GR+uaWCRT5JdyjwBtvdb2N5v5b2FbliUJPjz7pHqGWMt8wQouzaqZSfvLXTDdA24
      O1uDyYv+a10TgIVp38t7C904DYamYaHCS57rZAZgmyaW5+p5b6EbZuoaDF2DYxiqp4ytzMcA
      Z50+upuDvLfQDYviBNtnHXSHI9VTxlZmAMEgQjDg0+STLgXQ4Rf/9+KrQUk0BkCiMQASjQGQ
      aAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQ
      aAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQ
      aAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQ
      aAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCimaoH0M1z
      TR2frzZUz5gIDKCA4jTFYb+vesZE4CUQicYToMCSOMbe13/H3Ht3oWkaOocHcCpVXBzso1Sr
      YzQYYG59Q/VMpXgCFFjYuUBt6R20D5qwSmVAA/rnZxh0LtA/bQFpqnqicgygwKxSGSebz2E6
      DnqnJzjZ2sQoDKDpBpxqFcHFueqJyvESqMAsx8XaZ59ffrzxxW+u/oc7OQ8aQwygwNI0xbDX
      g26aiMIApu0gCgO4fg2Gybse4CVQoY3CEIfPHqF/1kLz4dcIOxdobW/i+PkT1dPGBgMosCSJ
      YVo2OocHl5+7aO7BKpUUrhovPAcLzC578GZmYZXK6J+1oBsG3v/17xCPItXTxgYDKDBN01Bb
      WgYAlKemLz9vOo6qSWOHl0AFFo8i7H71N7R2tlVPGVsMoMCSUYw4GsJ77bs/XcUACsywLDTe
      3YDBS55r8TFAgemGgcosXxb9fXgCkGgMgERjACQaAyDRGACJxgBINAZAojEAEu3KE2Hra4v4
      dMhXCk66O6sL2FI9YkJcCeBFJ8CDVkfVFroh3lwdcPma//8GL4FItMwAFusV3JmvAwDKtoXl
      6SrWF6ZgGTp+ujoP1zJyHUn0tmQGUC87cL77penVRg1TnotRnGCu5uHoooelqWquI4nelsxX
      g5qGjpJjwS/Z8FwLVddGwy/j8KKHhu/h8d5J3juJ3orMAL55eXz573ubzf+4lV/8VByZAWgA
      LFMHoCGKYyAF+CZ6VESZAazN1eG5NiqOhdNeiCRN8ax5mvc2orfu2h+D7p5cYKfVxq0ZH7dm
      /Dw3EeUm8wRonncxjBOE0QhfPnuV9yai3GQG0B+OAACjGADiHOcQ5SvzEuj2rI9fbiznvYUo
      d5kBhFGMrUO+dzwV37XPBE9X3Ly3EOUu8zHAU/7Ik4Tgq0FJNAZAojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxj+UXUCWoePdmZrqGROBARTQKEmx
      0+6qnjEReAlEojGAAkuTBM3HDzEaDhBHQ5zv72EYBDh4+hgXB00cPnuieqJyDKDAgnYbtueh
      tbuDNE0x6Pdw8OQh4miIs1e7MF2+8wcDKDDTtnCyvQVd1xG02zj69ikMy0a3dQK36uPkBf+U
      Hh8EF5hd9rDxqy8uP/7wt7+/cvvCxvt5Txo7PAFINJ4ABTbodbH117/Am5nF0gcf4mzvJQzT
      xPTKbdXTxgZPgAKzHBfVuQWEnQ6iMEQcDZEmiepZY4UnQIGlaQqkKW599DMcbz3H/Ht3kcR8
      u/vXMYACMywLyz/+CACw8pOPFa8ZT7wEKrA4irBz/x7O9l6qnjK2GECB6YYB1/fhTc+onjK2
      GECBRYMBeq0WoiBQPWVs8TFAgdmlEtZ+/pnqGWONJwCJxgBINAZAojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBItCt/Imltvo5P1hZVbaEbsj4/
      BX3KVT1jIvwTApgGxaGea2cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Player Quality by Nationality: Goals' width='192'>
      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
      11hmQ/N/AbHSewC/Nm8CAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Positions in Each Club' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='The Search for Young EPL Talent' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aXBc2XXn+Xv5ct8TiX0HiI0E963IKlaxpFJJlizb8jKWHe3ung+OsT9N
      R8dEx/TEbJ6YmImxHDE9PeHocHsiJmRJbclS2yVpVOUyS6ViVXEnAWLflwSQiS0zkfue+e58
      ADMJkACRAAEuxfxHVLCQee+55728596z3isJIQQllPCKQvW8GSihhOeJkgCU8EqjJAAlvNIo
      CUAJrzTkP/uzP/uz/B/ZRIT7A0N89umnpLIw3duDraMd/Tad07E1Pr/Rw8rKImqDFbNRt6vB
      3//gfTraOzZ95hm7z+3ROaqra9GqpS37ZWI+bvXP0FhXybXPPqOusQnV1k2Lwkf/+HOC4Sgr
      /hA1Dpkf/8MviUcD+CMpggsTqJz1GOT1tstuF/13PqdnYhmdVovDZinQCc720LOkorHCvO1Y
      szMzOByOvTNbwr5CvekPg4UzZ86wsrzMmVPHuL44x+hgH0okzWsXz+OZHmPJG6Dz+BkcJi1z
      w/dwHrrIsYb1SeD1zDHrWaK2qRO7LsvI5BySWse5U8eYmBhhcnCSL//W1xi414fR5gQlw2Df
      fSJpwcXzp5FQ+OyTG9SevwBKmnt3+sip9Jw7c5LpyQkWZ0c58savU2EuZ23hKv4GE0nZhkyW
      3js9pNFw7txp5mdnaGltZWJyglq7nv5ZH1ImztHTFxDRFUZmFlGptbx25gQAaSFz5syZ9ZeQ
      XMZcVsu5187wi/d/QY1ehU15+I6q65vRZ/yQqKO1sZrp8WHWQhEqG9qxPWgT9HoYn/VQWduE
      XRVjfDGMkopx7MRxPv74Y04FAhw5cQbDprdfwvPAjipQx+HjOIQXdzDO4MQiFy6c49ZnVwFo
      P/dlonO9fPzxxwRiaW7fH+T8+QsM9N7CZCvDbtIxfOsOYeCDn/49p97+Erd/9Su6T5/jaFcb
      oOLw8ZMI7wrhB+w0NrZw4swZhm59SvPRsxxtNHK9d5pP/+nn1B6+QIV5fda8+84b/PX3P+Dt
      10/Qf+0qlV0nOdVZzme3RnDNzgIwOTlJ1LuAuqyJC4druTuywOe373PxtXP4lj2FZ4wEvPT0
      9DA4OgXA/Mw4d+/cxuas3fEF1tTUIMsabt+4Vvjs2u37vHb+PGMDvQSXZjFVt3GyxcbAfIxD
      ra2cOVOa/C8KdhAAFbJ6vYkQgsX5GXp6+2nt6AQgnclx4dJlvvTmSa5du0tgdZGenh5qG1q5
      +tGHOBva6GyuRwHaj56m1mkFJFTSA31FJaNWSYBgu2BEPkxR23qY9saqwud6Ww0njjSzUUvK
      t1UUZdO/allG9UBHUkmqTW0BLI4Kzpw5w7HDbQA0tnZy7vxrvHnh9JNfD/DhLz/h5OnT2EwP
      1b9IYJWenh4qahsAkNVqVKr1cRWhbPusJTx7bLIBNsLpdAJgczpRA0Z7DbVlOhKpDGarHYfN
      QiISoK9/mKWVIK9dPEd9lZNgJIHBaKa9uZaJqVkUSU1jcwPqBzSbmhq439NDIJqisqLssXHy
      /9/U2Mhofw8rEbhw5gjSBp4e5bO6sZGpgft4/Clef+04Ih3H5V5Eb7ZTX1uF1mjDYlCDWk9T
      pZmRyVlcC0ucOnEUgMial6UV77oNUFUBKi1OR163z+FyzREMx6mqKCuMqzZYsJm0KOkEbs8y
      9ooqqsqdqA0WjrTU4gtG0BmMVFU4MVgcmLQqVFoTLVUW+ofHcVbVoSm5IJ47pFctEjw9PkQg
      nEBojJw72f282SnhOeOVE4ASStiI0iZcwiuNkgCU8EqjJAAlvNIoCUAJrzQOVACUdIxIInuQ
      QwAQCoeKaCWYm5s7INolPA2e5zveVgDcoz388Be/2hWx4f573Ll7l96BEQDSa3NMLEe3bDty
      /Sp/d+UqkOTWzZ7NdEYGAfB6vUWNOzQyAih4vX4GR4a3bDM30kPOUMYvfvoP3Lt3l48/v1U0
      7TzNWMhPLK3s0ONg8PmvfsHt3hFA8Nd//hcEKf79PIpf/eLH9I7Mg8jy53/xfwJZvN7AU3Ko
      8Okv/4l79+4RjKa2bhJdYnBubdNHXq+XkZGhLZvn33siEjiwhXRTQP7+zc9ICBWth0/j8ifo
      dKgIpwVWrcTVq59y6fwR7o4tsTozxaGjxzna1YZneoSZlSCO8jr8a1FOHu+ib+zhSjs1PsTS
      UJj2pjJUVUdZHL3HW2+/DehpKsvg8q4LyMLMBEvLbnTWJvrv96DW2wgseZCTIe67VkknkjSa
      NKwZzYRXAlx+7Rhj03PEUjnUMoCKqekx3HOzpFMKscAK5y+/w63PP+Ptty/j8sa5fMTCrMXB
      mVMn+eiTa9y5fhVkNSZnIzMDt6mqtKGrPokhs4x7bpbut74JwNjgfdIpBbsSxdR9lusffIgk
      SXS01TO8EKW7s5WmuioOEhqDAykbJbo8TXnTegBvYnqKwZ572CsriSQURMKH2VbFsdOnIeqm
      ZzaJPrGMSqMhklPRdqidmnI7Bkcj2egyy9NBmo6eBrJMT81wv2eZ8soqYmkVqYAHW1UTp08f
      R04u87c/7aXckuXEuXP09I0jSQpNRg0elZqzR09iTnuQK7s5e7ye+NoC//SxC9IJuhpNjKwZ
      SYdXONdqpWc0Rr2xnZ/+432+/M4lFl3TKNk49+/34A+nMKslLrxxkU8+/gSfz0M6pVCjC5Oq
      OcfNT/4Rk1FNffcRbn14F7NR8MZv/jZ2zd7f66YdoL6hmuk5PxVWFUvuRTIo3O9bX81rbTp+
      dXucUyeOcaS7jfn5BQCq6upxjY9TXVNDTuSwOqtRkg9X/bbOozSXW6k6fI75vk+QdDby2Qtd
      Z99g9N51AGZmZlFpVIRCKdra2uhsbQRgcXGVk+dfo9KgJYmGY6dOUWYxMueaQQgIBDevKLWN
      rZw+dYyLr53gw//8Q8pbjwMgPUiBSEQC9PYPc+mtN1lZWUXWGEBkKa9u4Py548TDIWZn51Fl
      o/gjmU00VQCZCKv+JFaLAa2zhWqLinn3wt5/gV2g0qTm2uQaXQ0Ps0kNFgenT59BS47u7m4S
      4VVWgnF0tnpEdIWUJHP0aDc6crgX3IV+JrXE5FqaBsfDFA6Tzcnp02dRiTTd3UcIry4QjK/v
      eC3thzneWs3M9BRJSYdB1pBGzbkLF3FYDKjNZaTD6ztScHGRtpPnOVRpIJiErmOnqCqzUFtT
      Q1vnURwWPV1HTtJUVwGASmfk1Kkz6FUP00QEYvN7z0Yx2Bs5f/YwSwtemlo7ONJcTTL3dO90
      UyrEii/E66fbmZ1103nmdTrb2xDpGA6HA2dVOYFgjMYaO3PzS5jtZdRUVeBe8PD622+zsjBP
      V1sTvX2DmOzO9ZQCJOZcM2itZTRVV+AaH+XUG5fRP0jgMdlsOLQSmJxYdBKKrKW6qgaLXmI1
      GMfpsHGoq4Ph3h4MzmpqnQ5MNitqwG41E44ncZZXUFVZjs26novZXO3k/qiLhqYWxiYneevC
      aSQgtDyHxlmPxWSk+8hhNLIKm9lIOJqgsroWi9GAzWYFlR6VSKA12aipa8SoVdHygGZdTSUG
      ezVmTYqcpMFuMRIMRymvqMbpsD7dL1EEGltbiIXjVFdVFN6DzWpb5xuIR0MkFZmWlmY0soSa
      JLaKFpRUhGAkRmVNPXaLCYDWlhrCcRVVFfYH706F1Wop0IqGgyiykZbmOuRclM9vDKJ1VnL+
      zClSgWU0Rgt11VWY7et8SGoDqkyIqRkXVW3HWJnsJ2twcqjWidZkw6AGa2UdK9MjGO0V6A1G
      bBYDAHaznsmpGaobD1Fu1TAxPYvZ5uRwczX3R13U1lais1QjJZZxLUY5c+YwKtRYbUYMFhva
      p7Bkn1kkOB0LMT6/yrHD7c9iOAKri6wl4VDjekanyKXoH5nh5LHDz2T8LxSyURZWMzTUfvHq
      GEqpECW80nhs83BNjrKw5NslmSzuhcWiWnrn3QQCy0zML+9yjBJK2H9sEoCBO9fQOOqwmbRk
      UzH6B4bJKoJQcI2RwQHi6Ryri/OMT8+hxP3MLAVIxyP09fcxO79ENOhjfGoOUAgF13B7lgj6
      lpmaWy8+WV2c5+bnt5Ac1SzNjj+P533loCgKudxTWopb4ItCc5MA+BM56sqtWK1Wrl2/RVd7
      E9dv3ObmzWu0drTRc+8uN27exmIxoUqHWQqk+Oz6LY52d6GS4HZvP2VyiCHXMu//7EPKK+30
      9k8ih+aZmJ5kdDFOS0P1+sAS7P/jlvAohBAchJb7RaG5KQ5Qplfh9oWxaoENHW0OJ3qdEbUq
      xxuXLnHrs6vY31mvoVWEIJtMkBWwND+DWa+lsslJa0cneo2K+ZlJ9NoWKrVxJNlMPB5fZ4xS
      HsYXGX19fUxOTlJWVoZGo8HhcHDs2LHnzdZj2CQAJ167xOzEKGFrJZcuXWR4wsUbr79GLLpe
      sXvkyFHioTUOn72A0eLkqFZGXXea2aUQp452cPpIIzNuH4011TjNVkDHb33r67h9EVo7O9DP
      TZK2dmFGIITEUxzkUMJLAJvNRiaTQaN5ikhVkVibWCG2GqL6dDMao7bofs/FCxQPrBBVWam0
      GZ710K8ccrkcQgjU6v2tws9ms0+kGQwGGR4e5vDhwwwNDdHU1EQikaCrq6somlfGPuBHvd/j
      D07/C77a9Y0d+Rn9yV2UrELVyUbKD9cUzedzOZvA6KjC+DwGLuGZwW6388YbbwDw1ltv7br/
      yPIgyWySkeXBogSg6kQjsdUQtqbH68afhFIc4AuOg9gBXC4X9fX1W9KcnZ2lpaWl8Hc6neYn
      P/kJb775Jo2NjU+km81mWVhYoKWlhbWYn5uuz7nY/CZlpt1N6kdpPunZ90UAFEUpHEHyJAgh
      kKTdaf677XPQ7Z/1GE87cQ9CAIaHhxkbGyMejxMKhaipqSGZTFJWVkYwGKSqqopUKkU0GuU3
      fuM3GBgYwOFw4PV6cbvdGI1GpqamqKyspK6ujvfff593330XjUbD0tISf/iHf7hvvO6jCqQw
      OTpKTUsnqnSEuUU/5WUmYilBc0MtQghkWX4qZvajz0G3fxHHyKXijI+PIGQbaGWMcpZIQuF4
      9/b69tPA4/HQ1NSERqMhGo1isVior69naWkJvV5Pd/f6aRvDw8PodDrq6uowGAy0tLSQyWSo
      ra3FZrNht9tRqVR85Stfob29HafTyb179w6E5+1Q9A4gokt4suWIyAoNtRX09I1SVmZGkfQc
      aq4nl8uVBOA5jZFLxXD7otj1EhMTLizVlegQNDU1FXaA/MFc+wVFUb4QNIv+VSRDGYHhESqr
      6/AHI+jVMlqDiVAoti+MlrB3KAKS0SBYaqhsaKC6zEw4uf7D5wNhz9oL9LLQ3Dcj+FXZAXxR
      L/6Yj0Plbajl4vzbz+K5t8PzcoO+LDRLR7TuAu8N/Jj/3PdDBIIqSzX//bv/K+XmiufNVglP
      gRcmGyGXy/HTn/6U/v5+3nvvPaampvjoo4+K8i49C/ii3sLkB1iJLPMPA3/39ISFQIhSVtR+
      486dOywsLODz+QiHwywuLjIzM/NYuxdGAIQQxGIxkskky8vrqdLDw8MMDW1dMP2sEUwEHjvD
      OhBf26Z18RAIlGQpNTyPW67r3HJdf2o6c3NzZDIZrly5wtjYGBMTEwQCjxf+vzAqkEqloqKi
      AqfTye/8zu/g9Xr54z/+Y/x+//NmDYDmshaqLNWsRB5O1teaX39qupKkQjbUPTWdLwr+78/+
      AoA6Wz0NjqanptfV1cXk5CQ2m410Ov3Y9wdmBOfic8jGzQ/wshvBvqiXfxj4O9bifi40v8Hl
      Q+8UFeAqGcHF0/zv3v/XAPwvX/8/MGpN+0Jz37xASx43lbX15JJRFn1hapwWQkmFyjLbtl6g
      K1eucPjwYRoaGgrMrK6uUllZuamdx+Ohrq6Ozz77jJqaGioqKrDb7YU+iqLw0UcfcfjwYRob
      G/F41ots6urqCv1NJhNms/mF8tEfxBhCUcjmcqg1mh0zal82AXhhvUAi4SOJHrd7idoKC2ur
      XrJKGlkRKHYLiqJsWXzg9Xqx2Wz8+Mc/5vjx4ySTSfR6PbIss7a2hsVi4c6dOxw/fpyqqirs
      djt+v590Os0Pf/hDWltbSSQSfP3rX2dlZQWTycTf/M3fFNrPPrgOSa1WY7FYaG9vJ5st/hAl
      RVGKav/pp5+i0WhIpVLo9XrS6TQ6nY4LFy7s2xhb9dnqx+u5dY2sysSZC2c4+ETjFwfDw8Nk
      s1kaGhqYnp4uRJkjkQjRaJSWlhbGxsYYGxuju7sbg8GAzWYjEomg0+mYmpriy1/+Mj/84Q+p
      ra2lsbFxF4EwWcfaygyVleWEY0ly6STZjIF46mHAZasdoLu7G51OR1tbGz6fD7vdzqFDh1Cp
      VGSzWTQaDadPn6ayshK1Ws3i4iLl5eVIkkR9fT1Go5FgMIharcZqtW5qb7FYCoaN3W4H1m2J
      g1idk8kkBoMBs9lMOp0mEAgUvbLu9w7gtJv56PYEZy+c2RXNlxmKopBIJFhaWmJkZISGhgbS
      6TQfffQR5eXlCCEwm81ks1mqq6vxer2oVCqGhoaoqqpCpVJhsVgYGRlBkiRMJhOJROLZBsLC
      4TBW6+7Oz3lRbIC82nb37l30ej1VVVXEYjGam5t3tAP2WwDu3vgcry/Kl37z6+xUUfFFUYFW
      VlaAdY2isrISg2H9yROJREFj6OjoIJlMYjQaCYVCBAIBLBYLdrudlZUVNBoN9fX1xGKxQpFO
      KRL8AvL05D5phnqGcPvCvPO1t3dUgb4oAnBQNF+YOMDzxJ07d7h///4T24yNjTEwMFAUvdXV
      1f1gaxtIjIyMkk3ES4cK7ANemDjA84TX60Wn0/Hxxx9jtVqxWCyFLTMQCNDV1cXq6ioOh4Pv
      fOc7HDlyhPr6elwuF3V1dVy5coWvfvWrhMNhDAYDsViM+/fvc+TIEWRZ5t13391HbjWcv3AG
      fzhV+vH2AaUdADCZTGi1Wg4dOoQkSczMzNDU1ERFxcM8n8bGRrq7uzl8+DBVVVUcO3aMkydP
      Eo1G6ejowGazcejQIXK5HBaLhcOHD9Pe3k4stv/ZsiaTEffcfGkH2AeUbIAXkKed+sxNjTLt
      CXD58us8+Y2XbIBSNugXDImwn4HRKdSSjgwgs14RNjUzg85gJxSOUF5mJJLI0dXe+rzZfe74
      4IMP6Orq4tq1axw9epREIoHBYOD8+fNASQBeOhisFqrsZSSFXFj9ZY0Wo9FCBkGT08xiTsKi
      VxVqtYUQuw7E7YS9BPeKoekdW8Q36KH8WB2OtsqdOxVBM5fL0dXVxeDgIG1tbSwsLHD69Glg
      lwKQT4WQcinmF32U2wz4wkmaG2qfmtESioUWq1kmEX/406WiYcKJJDUVTpbWItQ4jIRe0oqw
      pC+KklVI+mKou56efmtrK7Isc+LECVpaWtDpdLjd7gLvxdcEJ3y41kClZKgst7HqWSKaSeAs
      r6XSaSeXy+0YENpLzedu+xx0+2c9xuOTLMOPv/9jjBYHX/nWN9DvQOdlswFEWiE058fW5Cyc
      8LY080+ARE3rV/edz22/WQuE0Go1mE3rR1htTIXwr67gi8Spqylnwe2muqKsdCrEMxtDw8U3
      zuFZjexoAL+M0Bi1m052i6xN0vfLfwOA+ff+HkvZ1hesPHoeUf5vl8tFTU0Nfr//sXOJgsHg
      1gKw4vXz+a0eJqZc/Ks/+eeYjAbQWjhz+kShTf2DTOfq6pqtSDwzvP/++7S3t/P5559z7Ngx
      wuEwDoeDM2e+uHkyHrcbtLZnPu6dO3dobm7G5XIVJlN1dfWBjPXZTIjFcIrLjU7MjkMA6E3b
      jxWNRvnLv/xLHA4HVVVVhEIhcrkcXq+X8fFxJEnir/7qr/jyl79MNpulvr5+XRXaitiq189n
      N3v4n/6bP12f/C8BOjs7GR8fp7Gxkfn5+S+0ADQ2NTIx73vmO4DL5SKXy+F2u2lsbOTKlSv8
      0R/90b4fZQKwGE6RygqCWT1v/hfvPbHt0tISarWaU6dOYbfb8fl8XLp0iUQiQXNzM6dOnWJ6
      ehq1Ws3Ro0dRqVRUVlai0+m2tgGWV33rjcrLimb4ecUBhoeH0Wg01NXVEQ6HkSQJv99fOJzp
      aenvR5/9HENk08wsLJKNxmg+1o1ui74bsZ82wPvvv091dTVOpxNFURgcHOT06dM0NDTs2DeS
      CTMeHKTTfgyLZuuEyI3P7I1m8MUzdJQbkFXb25ZCESSDMfR2E9IW7Z6qICaTTKLS64taaQ5a
      ABJrMQxlO1cIfdFtAO9EPwFbK6GJfo69eemlMYJ/PvcjJkMjtNuO8JtNf7AvNAEW780SmFzF
      0V5J7dmWx77fUzJcwDPDT/+/D/jRT36xK2YOEvnJ/95773H16lVisRjBYJDR0VEAfvrTnxIM
      BgvtXS7X82DzwFHRcRzFO0VZU+uOk3838Hg89PX1Fd0+Ho8TDAa5evXqE+u28/UajaYWNCot
      jabHJ+nzxJai4aht4Xg0zsy8HwVeKG9DPB7HZDLxs5/9DKfTicOxfnVnPgFtZWWFqqoq4vE4
      P/nJT2hqaiKTyfBrv/ZrOJ17P2X4xYFELBggGsrR2Fi7bxVhLpeLlZUV7HY74XCYcDiMx+Ph
      2LFjZLNZgsEgdXV1TE9P09raSn9/P7/7u7+L0WgklUoxMjLC6uoqdXV1BToqlQq3281Xv/pV
      Tpa/xsny1/aJ24eoOd2Mo7UCvX1v9cNb7w2SRDoeYW5x5Wl4OxB861vfQpZlhBDE4/FCYcO3
      vvUtVCoVExMTVFRUEI/HaW9vx2AwUF5evqN69rT40Y9+xJEjR5ibm6OqqorV1VXa2tqeeCHE
      XlHf3IhnNbPvN+wkEgmuXbtGLpfj5MmTNDQ04PP5OHnyJN/5znfo7u7m9OnTzM/Pb3qfPp+P
      5uZmvve973H48GGMRiMmk4lAIEB/fz9f/eru/ffFQlJJGMrMe++/nQ2QzWZRCYHQaF4IG+BZ
      tPfHMjhNO6+pW42RF4BQKEQsFkOn0xGPx/n1X//1fX/uqdG7fPrZDP/8T77NTpcBvSg2wItK
      c9tvtur0aCpETbm1cCrEFwHFTP7t0NzcjN1up6urq1Cid1Cn2qVTEg3NFbwoN5vk0lky8TR6
      +8t378+eToWoLLchpZPMeTNodjgVYiOe5nSEF6X9dn3Onj1b+P+NdQTZbHbfT4UwmkxoNGE8
      7hVa66t2RfcgMPvRCKlwgvo32rA1vlx21p5OhcinQtgsOiI7nAqRRyY0QGbtFtqyC2hsx4tm
      8GlVoFu3blFRUUE4HKayspJIJIJaraatrW3X9K9evUptbS2tra0sLCzgcDgIBoM0NTUhSRIr
      KyssLCxgNpvR6/U0NzcD64Ga/BEdkiThcrkK3+3lucsqa0nmJFpegMm/W6S9vyIbHUdf9weo
      tI7nzc4uskG3SYUoBkomTGL2P4DIkgj1Ind/B9U2wZCNyGbiZDNJ1OriA3KPYnV1lYqKCkZG
      RohEIhiNRsrK9kYvFouRzWb52c9+hizLZDIZjEYjfX19RCIR3n77bYLBIJlMht7eXjo6Ohgc
      HKSiooLa2lokSWJiYoKamhoWFxd5/fW9Ha3odk0xMeGmqatrx1MhngVa3j1StAqUXPx7UFJk
      TK3oKr/2DLh7Ml7oegBJkpFUT+foM5nW3WMXL15kcHAQnU5HKpXaE62KigpkWcZut1NbW8v8
      /DwtLS0IIUgmk1itVi5cuMDU1BRf+9rXSCQSGI1GzGbzetj9wXk0G5O29gQhqG6of2F+PFmr
      RtYWx42+9nfJRsfR2M9v+b0QOZLuH623rf8DJOlgvXfPrCQyExog/RxUoP1uv1OfXDaDrNbs
      2F7JKajk7XNoth8jR/+dOyz647zz9XfQAkomydT8MjVWPfPBOA6DTPhBRdjL5AVKRuL4++9i
      MX0fAFPn/4BsbH4qmi9MSaTGdhzJdGTfX1oeefUkv+JvB4/HQyaT2VEH3yvC/lUcVTuf9pyO
      JtHbdu81SUZDeJa9hGK5ghdIpdFjMepRZBkScRJ6O6aXsCIs6PITXNCibjqBtcGB0Nbuaoz4
      aoTAxAqOjiqMlZai+HxRdtGnxi9/+Us6Ojrw+XxYrVZkWcbn81Fbu16t5na7aWtrIxKJkEgk
      SCaTAFgsFmZnZykvL0ej0awbuMEATpMJk3anVLPH4aiqY3l5GaPRyMLCAhqNBp/Px4kTJzYJ
      514mP0Auk8VcVobepBQCYblUHJ/Pu66i6fQ4DJp9uSPM4/Hg8XhobGzEZDJhMBjo6enh3Llz
      wNau8qeBvdlJai2O+dC/xFC1uxMEAQKTq0SXQiBJWGvXDeznvgPkUllymRxa8+4n027Q0NDA
      6uoqP//5z/nSl76E0+mkoqKCu3fvkkqleO2114hEIgSDQWKxGENDQ8iyjCzLtLa2srq6it/v
      p6ahgZ/03+NMQxNvH+osOglvIz744AO6u7vx+Xy0t7djNBrp7e3lzTfffOrnTEVD9N3vw2Sp
      4NKDz2SdkWPHjgGQT8/fu9vgIVwuFxqNhnv37qFSqbDZbOj1elKpVCECv59QG7Q0Xe7cc//y
      rppN/xaD0rEoj7QXQrAQCuA0br8D7DTGvXv36O/vp7q6mvb2du7evUtzczNvvPHGgT3Hdnga
      G+D69etoNBpMJhOff/45Z8+exe128+abb2Kz2balmQzG0Ri1RRvGeTyPSPC+CgA5QS6dRWve
      Ok/xoAQgm8wgcgoak+65G8HPa4zt8KyN4NC8H/f1KXRWA22/Xryz40k0d0JPTw+w7vLOX+Dt
      8Xi4dGl9j9y3s0GXPG5yAoSSJRgKEw2t4VpYLHwva9XbTv6DhFqvQWM6WBWrhBcX+dP3Kioq
      uHHjBqFQqKCq7YQ9pUJUl9uIRqMkwmtYyms3eRuehGI9B3F/BKOzOCt+V2MocRAKyObi2m+D
      1dVV7t69y4ULF/D7/dTV1ZFMJhFCsLi4SEtLC/F4nOHhYSoqKkgkEtTV1TE6OuLvAmkAACAA
      SURBVFqIRnd2dhIMBkkkEuh0OmpqarBYLI/xdVBes40IhUIsLCwAUFZWxsLCArW1tdTV1fHB
      Bx/Q1taG2WxGCEEulyMQCGCz2QorbjweZ3R0lNdff52yRic6q6FwosOzQGVlJbFYjMbGRoQQ
      1NfXMzg4WJSdsqdUiEQqzcL8HM3NzQdyKoTR8fCao/1UN4QwggBJpS6q/XYYHBzE7/czPz+P
      Vqvl9u3bJBIJTCYTExMTRCIRLl26xNjYGLIsI0kS0WiUuro6JicnOXToEIODgwV9OpFIkMlk
      NvHxrCY/rBeULy0tMTMzQ3d3N9XV1Vy7do1vf/vbmEwmpqenMZvNhRt9IpEImUwGvV6PRqMh
      nU5TXV2N2+2mrKzsmSfFbUw5z1+9lS/W32lxe2GMYCWbQyjiMcPpRQyEBYPBQkRZo9EQj8cB
      MBgMTExM0NHRgdlsZnp6mlgsRkNDA3a7nZ6eHlpaWjAajQQCAcLhMJFIpJAqodU+XDWfpQ0w
      MDBAY2MjCwsLOJ1OkskkZWVlmM1mPB4PiqJQWVlJIpHA6/WSzWapqKhArVaTyWRIJpOFibdT
      HOZJ2OqZh4eHaWtro7+/v3Cc4XZwuVzMzs5y+fLlQqG+1+st5GxFIpFNUfhQKPTiCEAmlUHJ
      5NA9YkO8aAKQ8EdJBGLYm8vJpmKodQZU6idvta+SEbzfNPv7+wkGg6ysrCDLckFNlGUZvV6P
      0+lkZmaGzs5O/H4/i4uLNDc3c/fuXWw2G9XV1fj9fmRZxmq1EovFKCsrQ5ZlZmdnX5xAmEan
      Ad2LfeVbwh9l5sowAP7JUXJiCbXBSOub39hRCErYG2w2G36/n2PHjrGwsIBWq+XIkSMMD6//
      DoODg4X7G2pqarBaraytrVFXV4fD4SAQCHD+/HmCwSAmk4nh4WEcDgcWi4Xl5eVnuwMsxdzU
      mOp3RXc/VnSf20V5ffOW7WP+CMYyc1H3/QZmvCzengFAMqyg0q57H1ovfxOtybJtvyeqforC
      QnCOprKWovvsBo/uAEpOITC9iqHMjLF876WEX/iKsINAhe5gThHbCdtNfgCdzVDU5AewNZYR
      ca+RDMQpP3KaZGwevd35xMm/E1LxKLpgGuEQRfPxNAhMr7LcM4esVdP1u1/cw8OKxYEJwF5S
      CJ4H0tEQsq2sqMmnUss0vtW5YVXZ3W62FYY/v8LIjY/5/X/7F+hNe1+Ri4WhzIysVWOu+WKU
      sT4tXhgjeL/67KvbVBEo2dyBeqYS0TAh7xJVzR2bhLBkBD8bmi/kHWHJQPx5swCAb3SJqQ8G
      yKWf7EsWQjAfcO1pDIPZSnVL5zNRf151xNMxFgJzmz57YbxAG6GzvQiFfmCutgIClXrnqqQ6
      287nY5bwfPE//+O/xRNa4L9+699woXk9MbF4AUhH6Bmapqa+iTKTmvllHzopQyihcLx7PRKn
      5HIIJYesKS4Mnkssklz4LvrG/xJZ//CWma0OOd0tku6/Awn0dd/eMw2D04zBubNeLkkS8gGX
      7j0J+YqwKrsBl2etdEfYLlB8LlAuRVlVPZlUEn1lDVZjlGRawmIUhVwghEAoOYS0tcrwaN6N
      UHKAhJJTENuErPeaCyQAxM6h8BfxqJaNfYrRifMVYZFE5qW/I+wgaf6PX/3fWIv5qLc3Fj7b
      lRG85HHjLC8jnkizsrJCbW0tyYxCRZmNXC6HSqVCQgJpXS9+VK99XkawELCdiv0iGua77ZNL
      xRmZmKamuhpvMEr1gzvCmutrSkbw86oH8HlclNc174qZrbAfky3sjWCt2NpX/0UQgCehJADP
      SACKTYd+0S6kexF52tjnaQ/1zV8Tut+3uOzlmV5EmvsmbsUwLknSrh9wt30Ouv2LOsZ2yNPY
      74m1X/w9b5r7tgOUUMLLiAOPA/hXFvGsRTl+uINl9xzRrIpsNEBlQytltq1cjILx4UGsFfU4
      LVpmpqfRWp1EY3GOH+7YcYwl9xyxHcbIxEOMTLpo7TqKWaPQPzSB06IjLek41Ly1P39hdqrw
      /crCBDmtneVFL0eOHkaveXyF2ThG3L9INA1akdpyjI20Rwb7qK2vYcbl25b2bhHwLZHGRNTv
      xuysxLfowWZz4A8GaDtyHJNmZ7dzPBJkZsaD1WkmnsihkzJIOhOJoB9HTRPV5fZd85WnaSkz
      IdAiUhE0GsOu+HqMZjjA1KwHh9NCrAg+DzwSnMgoOM0GFEBvNOKwWpHVKuLxxDY9MphsVWRT
      MbQGIyg5EqlcgcZOYxiNBrLZ7BPHiAQitB9pIuiPMzE8xFowhKLRo32Cui09+F7JxJiYmmV1
      ZQ21FuKJzI5jqGWZeDxeoLEdbQBZVhENx55Ie7dwlDtRMhlkWSYeWsZW1c7Soocj7TUEQumi
      aGi1OixOBxIyJr0Gjd6ETASLo4lMIrInvvI09Q/ej0Zv2jVfj8JoMpLLZcmI4vg8cAFwWIzE
      s4JkPE5wbY14MoFa1qDXb1c8ryWXCmK22ljzB5C0RiodJuJZsS2zG8eIRKKYjIYnjuGorsA1
      sYTdKtN+7BSnjx/BIINKs30EWvvg+2RG4s233qSutgqdLKPXb10HsHEMlVqNTq8v0NiOdjwe
      Qa3WodGbn0h7t/AurxCKRpDVavSWGlJBFx1HupmYDVDtLO4wgXA4RDIWQ6/VkJPUyOTQGKrJ
      JJawOip2JvAEmkKlRq/XI5PbNV+PIhKJYDCasOqL47NkA5TwSuOFTIYroYRnhZIAPMD2NkkJ
      X2S8kgIwMzHM+PR84e9V3xr//v/5AdHYi5GG/SphbrCf3slZfv7znxXuFH6WeCHToQ8KMb+H
      9z7p5SuHzQwth+g81Miqb43//d/9NZcunCGVTmM2vXwXvb3MiIUTRFMhfOE0YyPjeGZnMBps
      LCRT/Mk/+50DH/+VMoIjviVc/gRmnUQ4nuHEkQ6WVrz41oJUOsuoqny5Lnj7IsA778afiCAb
      TOhRISGIhWL4EnHeOH/6wMd/pQSghBIexStpA5RQQh4lASjhlUZJAEp4pVESgBJeaZQEoIRX
      GiUBKOGVxmMC4F6Y3zbteD+QScXou3+fcGz762sW3PNFfZbH/Pz67SbhUOip+XvSOHmMDPSR
      TMbo6elhZn5xx/bF0n0S/MtuwvH1FOGF2Vm2OjvBvVDcGEomRX/ffdbCsW3bLMy7i/qs8N2D
      sUPhffgNnjDOfuMRAcgydPNXDLvWELk0A333CcdT+JbdjE7OQjrM9LyXtdVFhsen8S/P8P3v
      /S3L/hCuyVEWln0AhZB2MBgk5FtmcHTywTElGX71yQ2OHj9GMh5ByaYY6B8glVWIBLz09Q+R
      VQRu9wJKJkl/Xx/R5HpO/PzsJAMDQ2QUhbW1AJAlEAgD8PEvfszUUoiRoRFELsPQQB++YJTe
      j3/CLz7tIRL0MrMUIBbyMzw2jQDWfMsMDAyTE+BxTTE5uy5EbvcCs9NT+L2LfO/732VhYYFQ
      PE06HiaayoGSwBtMQXCOpKEO/FOML8eYmx7HG4wSCYVxz0+zuLpGKh6h734f8VQWt3uBwAOa
      i94A01PTKNk0gwODZBRReKfbBWUmZ6cZGxwCkeXj994nCiy7Z/Gs+Nffz8w4t3r6SIeXmfdG
      WfG4GJmcBcC37GZgePwBbcHHv/qEw0ePk03GQeQYGewnmswQjwS439dPKqvgXnAjlAyD/X0E
      o+t3KrvnXYwMDpBI51hbW9v0W9///EPujc4xNDICIsfY0ABLviAzvR/zt7/4lFAsyvT0PJlE
      hP7BERQBoYCPoYEBklllE7/uBTfu2Wm8fi/f/d73mfd4WAtEIJskEN7fnK1NArAyMUDr5d/D
      NzvA2P07pLRWVCLHzZu3sFjMoMRZ9Ua5eeMmNosFR3Ut7e2dVJtz3B6Yw/ggf909OUwgmWZ4
      eIwbN2/isFjIAUSX0JW3sTg3zcjYFNevXae9q53r12+QTCZJx7x8cr0XgIGe20hGG+TW17p4
      Ik1nWyM3bvbQ29uDZ7QPX3qd/Y5TrzPZdxOAXCZFNif48MMr1NbU0n3iDBaiLAVS3Lp3n6ZK
      A7fvj3Ltxl3aKlXcnfCSTKXo/+xDlh6kAi17V3BW1NLe3k5DbQV3b92m99591BqZiGcCS+P6
      QWCTY4Ms+GKkFseIasoY7rvHxOB9hKmcyfFh0qkkuVyaKx99AoDjAc3aCgerK15uXL/OofYW
      bt64W3in20cl1SBlWZoapbbzGOnAPJOrWeZHB5kc6SWuLafaaUeJr+GNZkkmU8z3f8bIUpwb
      d+9RqVpjwpsComh15fgW5+gfGePu9WvUHerizvXrpJJJcukYH31yHQDXQA8hyYi8/uuRTCRo
      7ejg1s0b9Pb2EvKM4vKt70qVLd0EXCNkBYhchmQ2x5UPP6S2tobO7hPYTGq8q16u3bhD16E6
      rt24y80bN2jraKDn7sAmfgFWlr1YnBW0t7fTWFdLb89tRvvukVbtb/bOJgEYd3uJuMfx+oJU
      HTpMk0PDtVu9XHjjEsM3rxJ4UKRz/o1LTPV8hjcO6XSKrKLh8ptn+fSTTwE4euokH/34hzR1
      n+LchTdYGL6JJ5AGcw3xlXFqmw6RikUQG37uvsEROruOopbWV5vmjqNUmeDG3X4ADEYTSi6D
      LKvprLPz0fAq7VX5ckeJs4cbuTM8y8TAfRyNh7AZDchqNYl4HOXBMBsnl7OiAqNeTy4XYXpu
      jc7mCpKPFCGl0xkUSYtZnSMiVOhVoNbqyDy4Zb696xiX3/06FUbB8EA/aSGDrKPCaUOt1tDT
      00dHZyd6jXozTWVdyYyF/PT1D2O0mDe80+0V0ENVZq5PB6m36xBKjsnRIZLpHPFECo324VVN
      AGPTc3R3NpNIpqmoqECv15LLCcBMMr5CeW0TSiq26Z309A3S2dmFRr1eiuhs7qCzysS1G3cB
      0OgM68IgyZzprOMHHw1zor2q0P/SxRN8dqOPlYkBJEcjZTYjKllNKhFH2eJHsJc50esNyGQ3
      8bsRmXQaRRHU2Q0Mr6apMu/zRSRiAwKBgBBCiHhoTUTjcdF3/76IJtJi2e0S49NzQuRSIhiO
      i9XFeTEyOSuEEGJhdlKsroXE1NiQ8KyuFWgtLnqEEEL4l91iaHy68HkqFha9vfdFKJYUuUxS
      9PcNiFQmJwLeRTHlcotgKCiCoaBIJ6Oir7dPxFNZIYQQK545MTA0JnKKEMnwsrh6o69AMxgM
      CSGEmJ+bF0o2JQb6B4XXHxBCyYnRwT4Rj8dEMJoS0aBPDI1NCSXfJxMXwWhKuKbGhNvtFvGM
      KIwvhBCeuWmx5AuKucEbYtQTejBaVnzyyacil4qKYDRV4GF2clS43MsiHAyJ3AP6iUhADI1O
      iWDwcZrBYEjkMknRd79XhKLJTe90K4SCQSFETqysrIpoMCQyQojF+WkxPjMvhFDExMigmPMs
      i1wqKsLxjHC7poTb7RbheEYEQ0GRiYdFNJUTQgiRScXE/d5e4Q/FhFCyYnigT0QSaREJeMXo
      lEsEgyERDIZENp0U/X29Ihxff84175K43zco0jlFZJNh8curNx7hT4i5+TkhlKwYGugXy16/
      EEIRk6ODIhxPilAwLNLxsOgbHBE55eEzhYLhzfwGQ4X3uOqZEwtLPhFeHhc3+rZ/P3vFS5kL
      NDc7S0NzC/twhGgRUJidXaClpanwyeL8HOX1jWifDQMvJBbmZqluaEbzjN7B7OwszS0t7Pdo
      L6UAlFDCfmGTDZBLx7l75w4jE7M7dlTSMfyhvBstzcjweFEDzg2O4A0sc7e/uPYllHCQ2GRS
      37xxm/Nvvo1Wllj1zOHyLNPScRTv/BjJdJaqxi4iKzPEhY7THTXE0hqSrimW13xE4xrmpsdY
      8sc4e+4EU0PDqK3lSIkA/liOc2eOM9x3j8mBGb507NskBseBzuf02C8fYrFYUedmZrNZEonN
      rkKx4aBio3G94CcejyNJUuE4S5VKVTDOgcJ3Go2GXC6HTqdDURTS6TRm8/5f5SS2OEz5WWDT
      G82gQiuvMzExPc+lty5x7do1VCqJ119/g5s3b5COR7FWNUEyyILXQM63xFtvnePWzWFu3LhB
      S305twdt+GY8/Na32vn+//sJ9eUyt5QEWkc7nYfWXWoqJLKPMlDCtlCr1eh0Tz4qJJVKoVar
      0Wg0CCHI5XJIkoSiKIUjAtVqNdlstnBc4MZJ9+gRgpIkFc4VzWaz5HI5NBoNWq123yarEKLA
      q1qtLvz7pPb58043Xiy+V2x64pYaB5/fuM3IxCw6OcedO3fRW8ofXFixfuy501nG/PgY8QeW
      QzYR5n7fACkF6urq0VjrONzspKqqCtBRV1+Ota6DzuZ63OO9hYBTTojS5N9HCCFIJBIkk0n0
      ej0ajQadTocsy+vH1ksSBoOBZDJJ8oEbt1jkJ5xOp8NsLu5K2fzE3s7EzO8m+XP6hRDb8rWR
      hiRJhefcDzwXI1hkE3x2a4DLl1571kO/tEilUtvuAPmTucPhMLlcDr1eTyaTQaVSFXYBlUqF
      1WolHo+TSm2fhrIdVCoVBoNhx10oP+kzmUxhnI1Cs1F48jsTPLxkcSfhEkIQi63bngaD4alP
      z34uyXDJRJoLF88/j6G/cNg4wdVqNZIkkU6nC2qLJEnodDqsViuSJKHR7C2QJMtyUSpHNBol
      lUqhKApqtbowqfP/bUR+Z5IkqcD7TpAkCb1eTzqdJp1O73gk/054LgJgsNjQya+uD30/kDdY
      k8kkqVQKIURhdd54r4AQovD/0WiUaDS6p/GK1ftlWS6oWTqdDpPJtO/GrSzLhV0lHA5vMt53
      i1I69EsIRVEK6oVGoyGbzZJKpVCpVJhMJgwGA5nMehKhJEnIskwsFtuT6pNHsTe3aLVaNBoN
      Go2GTCbz1Cv0VpAkCa1WW/Su9CQ8tQDkcrlNfz/NS94O+31x2n7Te1Y0896SvNojHlx9ZDKZ
      0Ov1BRUnv+rLslzQk41GIzqdbs8XUOQFaifkBUWj0TzmWt1v7McY+74DPCoQJewf4vE4iUQC
      tVq9aeXLuwbzi08ymSSTyRSMzLwKUrjNcw94kkfnUeh0OrRabWGV3i2K9fAoikIoFCKRSJBO
      p/f0bCVP5EuC/GSWZZlIJIJery/cf5VIJAoTLh6PY7VaNwW48v/mj4uXJIl4PL7rxapYXX4v
      hnbeDbqTfz/vYcpkMiSTyUK//Duw27e+qCPf71GDe98F4GndUiVsDZVKhVarJZlMoihKIdpr
      NpvR6/UIIQqrYDQaLayGNputQGPjxDKZTITD4aLHz+VyB3KJHWx2bT7JaM7lcoRCoU22RT5Y
      tzGqvR2i0WjhPea9Y/suAK+CCvTee+9RX1+Pz+ejpaWF0dFR2traOHbs2IGNmVdvNga38vq2
      LMsFNUir1RZ+gyet2Gq1uhAVLhYHMfnhYaAt76rdCvk4Rzqd3tRm406XT/PYCpIkFXaHvLBI
      klTyAu0F8Xgcj8fDm2++SSQSYXl5eVeuvn7Pff71e3/Kv/xPv89/uPZ/kc7u7DhIpVJEIhFi
      sRgajaYweXO5XEEFiEajm1bH/HfbrYzFeHbyBvV+pB1sh0QigcFgeCxIluc7k8kQDoc3RY03
      QpZldDodiUSCcDhcsH+i0egmAZckqbCQ5GMQJRVoD3j33XdxOp1cvXqVw4cP09jYWNjCd0Is
      FeXff/rnJLPrht61mauUmyr4/VP/7In9hBCF1T0SiRTcn0ajkWw2u34v2oOJGo1GkSSJbDZb
      SGbbarKrVKodk9DydsdBCYCiKGQyGUwm06ZnDYfDhaS7dDr9WILfRuRyuU3VcIlEAlmWCwvE
      RjUwm82STCYLBnpJBdoDKisrAXjnnXcKnxWrSnhC7sLkz2PaN7ljP7VajdFoJBaLkU6nN6U6
      5P3+G5PfYH0i5aOyJpPpMSHIq1E7/Wb52+YPIltzq1hBKpUqTPq8d2s37k4hxKbfI51OF54h
      FosVnqOsrKykAj2KK1euMDv75HqIW7duMT9f3BEkq6urm/6us9WjV2++vO9QefuOdEwmExrN
      +sV/eW+Ooigkk8lCYCi/Sup0usIPnk+JiEQipNOb6203Zo5uB5VKtWevTn7cUCi0rZBptdrC
      LpbnIy+0eQ/P07hvE4nE+ukkoVDB6M+7dAOBQEkFehRerxe73c7Q0BBtbW1IksTY2Bg2m414
      PM7ly5dZXV1FrVbz3e9+l6985SsIIVhZWaG+vp6RkREaGxuxWCz4/X6y2Sy9vb2cPXuWpqYm
      uru7+VeX/1u+e+c/Eoivcb7pdb517Pd25Cu/Gua39vzkznt+0uk0Op2OdDqNwbB+E2U+GJZP
      F0ilUo/FD3Za1fM5PbtZ/bPZLIG1NXigc6dSKZLJJHa7fVNKRT7VOp/CEY1G19WSBzvV0wS4
      Nj7bdnQURSmpQI8iv9KeOHGCyclJDAYDJ0+eZGFhodDm+PHjaLVaLl68SHl5OSaTicbGRmZn
      Z6mpqaG1tZVcLofP58NkMnHx4kVqa2vxer0AnKg7xb/77b/aFV/JZLLgAcn7+dPpNFqtdlPi
      WzweLwiEXq8vGIj5VTWfdQkUhGkr5Ff+PI1iEYvF+Ml/+gHTE+PoDQbe/cY3qaypIZvNsra2
      hsFgwGazkUgk0Ov1xGKxgh2Q52/jjpNX83aD/ApfVHLd06ZDb3yhsO4heZI76lFcuXKFlpaW
      wg+1uLiIzWajo+PhrfDZbLboXJRisN/0ngXN5eXlguG7MbV44w+dj/rmJ7bFYikYzrFYrFAI
      YzabC6rP2tpaYTfZCLPZvGvDVwjB1V9+xEcfvF/4zGQ28y/+qz8tBKCEEJSVlRXylx5Nnck/
      S35n2Gj8FjOpN07+YgTguatAXq+X8vJyvF4vFosFlUq1yaIvYR1arRaDwVAIcj0p8CNJUmHy
      w8MoaD6FYmMQ6dFYQH4h2rgK5yO0mUwGo9G4pWDkxwgFg5s+TyYSKLkc0oN6Ar1eX6hb2E41
      yT/bo5N/I9/bYbfr+S4EQBAIBLHbLHiWfNTXVW/ZarfblclkQqfTcfToUSYmJjaV65XwEHnP
      Dzw+AfI/en4l12g0hZrffH3Axojpxgms0+kKKQKwvvI/uoip1WriUR8qMsDD3V1RFDLpDKlY
      knsjHv6pf550SoUs6dGKdU/XoY4OdHp9IT8JnpxYt90E3viMj7bZSiAerSLbDsWrQEqGadci
      Bg3IIoeuugWLrGyq6oGHQY39xKMh+HQ4idaqf0KP3dHbDxwUzfxkXVxcLARvVCrVJr1/IywW
      C3q9flOhDFDIndFoNJt+n3xCWT7gtVU0Nh9lztNTFIVYMIp/dIn4UhiReeh2dSfSDIUDtNYm
      sdltHDl2HCSpUB9QLDYK4cag2F6xVUUa7GYHEAqrK4tUVJQTCUXoqpM2GVN5aLXaLXXhWCy2
      KdiR/1tRFO7evcvZs2cfW3nC4TBWq7WgL+b7yzYjkrz3yfYy2QAbkV/hDQYDsVjsMZVAp9Nt
      8gDBuksxGo1iNBq3PM1hIz2NRrPlarnRrnAFp5kKjbK2vIwmpaVaXY0940CKRRGrPupjMeqz
      WeSYAX0TSN4ISoUFk8m0q7SLvB6/X/UE29kPz8wIHh4eJplM4nQ6cblcWK1WqqurcbvdaLVa
      TCYTqVSKYDBITU0Nfv/6qcdGo5GVlZVCsOfy5ctPwy7wcglAnubi4sNj2GVZJpROY3nwXX6V
      t1qtj+2+qVSKUCiEJEk4HA4URXlsoufrDGD79IhUOskV98+ZiA5toJ1m1esj58+RSyYpS5no
      DlbTHahBteEMN9OJVuzfOEciXVytSD5CvVHA90MQ8iphfieFZ5QOvbS0hNfr5e7du9hsNg4d
      OoTb7cZgMGAwGJibm0Oj0XDx4kW++93vcurUKcbHx/nmN79JPB7n3r17vPbaa1RUVDwLdl94
      CCGQN3iA8pMjHo8XCmM2toV1NSISiRSSzjbaAXljeDvkcjk+XbyyafKvBYK45hcQQgEk0EFQ
      l2DG6mXA4eH3XKfQKes0Y/0z5GJJLL99AWUbHX7jZ4/q+buZ/DsJi91u3xRI3Pcd4EmnF+wV
      j66uufgcsrHpCT12Ry+bzCAUBY1x73w/yx1gIx5192k0mkKFGKxPHq/Xu8njkvfFFwt/1Mff
      zPwl4sHVKaloiuHpiSdOtI5QJb/nOrnpM9s7J9Gcbi1M8I0206PFOxtRTDHOVnbLo8Jgs9k2
      qeHwklaEPc3k3wpqveapJv+zxpO8Gul0mkAgUIhCb1U0nkwmCYfDRa+s7qirMPkdKQPR+cCO
      fSdsq3iMm12ikRujyNL6lMundOf/g4dnBeUN9nwKxMY22z173m27UVg28phP6HtUmEoVYbvA
      D37wA+rr61lcXKSzs5PZ2Vm+9rWvYbFYnsn4+RVt44kPsD5x9A9cjXmk0+lC9DeP/KqYTxWW
      ZfmxFXErpJV13V0SEod9FfwqfacofietXuriDyu0lESK7OIacl3ZY0G8fOF+/rSHfCLfRn19
      K1Upr75tXHjzUWWgUCyUj8zrdDocDkeh7b7vAM8iF0jZYfURyv54Dh5F3mOytraGXq8nGAzS
      29t7IGM9ikcnDFDImxFphVQkuUkFE0IQiUQKR6bkXYn5DNCt/P3boUxXDkB5QMvU0CDKFvfY
      bPXGo5rHjd7s/9/emcW4dd1n/Hfv5SV5LznchrNIM9KMrMWyZcm2HMvxWkduFDR2nTy0desC
      dV7SAAVa9LlPRh760HQDiqJ9KFIURZEUaAHnIbXT2Glsx45sy7IlWaNdI42l0awcksP1bqcP
      1LlchpxFw9Fi6wMEzV14F/Is/+X7fyeT90fzcrns1zFUKpUlHTsUCtVyEA1iXo2zhPy7Wq3i
      OE5TuFQm81oHgFZW6R3JBcqWHVJmZ4ZiNVcinFx5ZFsrRkZG/MqvfD7PK6+8sixPvZuQySP5
      I2qaxuKlDJfePUXl+rpZ4bjB6FP3kb53U9sicSmXaJqmX2QiK8OWw3DPOMtNswAAFrdJREFU
      KAkSWIfPIrIVlH4QLZZIO8Mkai81K62qRcir54+kr9IJiqJgmiZCCHK5nP/80veUJo1lWWia
      1sSPkglBIYQv0tXqn96RJtByjR/YkMYP8OSTT/p/y1DvjSqtrRWNtAaAzKkpzr91oumcSq7M
      6Z8eZUd1L6ndg000B5nwSiaTvs7nap9dD+jce3UTZxdOAArJYoBMtDWmL2q9oqEn7MwvjdoZ
      g71NSnY9PT0sLi4uy/ORtGiZE4K6pSEdZ2nqSBq2fDf5vVmWRTwe96VU/FLKTi89efUq77z1
      C1anBlPHraZDe45H5vwMpfm1KaC9/vrrzM/P88477wAwNzeHbdvL8v4PHz7MW2+9tWS/ZVmr
      rhBbLZri4i5cfGes47njb48RoE4rliK0vb29Ph1ZNsDVRK5s22bqZL2zbZ82UJbYPA2NX9Si
      QI32P4Cnq3jJsG8l9PX14XmeX7klyXGNvo1s/FLTSBICpS8k/ylKTTRXmqmN31u5XMY0TQzD
      WEIp6fj2xdwcQgmuec3glUwgq1AhGL1xGsNKmD42QebsNIqqsPPFh9CNpcQtt2KjGipqQzY5
      HA5z+PBhEokEr776KkNDQzz++OMcP34cz/OYmJjg4MGDqKrKkSNHeP755ykWi6iqyg9+8AN2
      7tyJaZocOXKE/fv3U61WGRkZ4bXXXuPll19uYrfeCBoZjvmrGTy78/fs2i4LE7NEt9ScvVAo
      RDgcbnL+1oJKqUApl/G345UAD1yJcHKoiNdmCB0pJPntiQeW7C8Mm8yNHWf7nn2UyhV/BpBE
      Ok3T0HXd1/mR0i+NySvp90hpFGnmycq4Roe5Wq1i2zYxy8L+8X8yk88T2LuX+KGvr5QIszny
      4TFSg8NdX5NJC956q0sJLFUh3rNnD7Ozs0SjUZ555hkGBgZQVZVDhw4xMzPD8PAwkUiEYrHI
      o48+imma7N27l/7+fkKhEIlEgpGREUzTZGBgACEE27ZtI5PJdCVKpGla/ce2WudlUfNCG97J
      tVy/wxiGQSwWW/czNGIgHyRW1phLaSxEbCzV7ZgJBiilQhSHTXAcSot5XEWjXC6TTCaJRCJ+
      Y278X0apGk01+btJOrcMDjT6O6Zp+tRr0/Mo/vXfIq5rojonPoN8nvTLf1CbBdu/ns7+xw5w
      /KMjrNWlXckE2ugOMPDgVkJxEyNpth39AdSAen3Ngzr6+/v9Wt+RkeY8Qzqd5v777+94zyee
      eMJPWj311FNNxw4ePHgjr7EEjbaymWrl9ChLvFAjFfFNifUK1IbNKGY8RX72Wm2HqN3SsDW2
      Tik84+0kLdIobYZLAWSHeyiOmkg9ZD0YJKSHfJ0jqfQsTR4hBIZhNNU2t9IjWhu9RGOddDwe
      J/ve+37jl6j+8m3s3/2dmlnV/pVdwgHBtr37WasWwK2uCFMDKqkd/Ri9q1vGx61co3D6+xRO
      fx+3cm2Dn+7GoWkaPT09tRG9r4f4UKrjufGhFGa6xx/91+uX6brO6L4GOXul1rAFMKsk+FlA
      4VfaNDPKLFXNRo2ECaRj6HtHyD24DS/Vjzdpga3QOzBIIpUmEAg05SMkgzUYDPoh2mAw6BfI
      y6SY1EZt7BytNcON4d6VGLodjgoKRYupy+PrdoKvzi02bV/Lt0/pSzgVG9dqqOh3LTKluWU/
      s1Bd/vhysKbfwCtP4JUnsKbfuOHr3AxIR851XbZ/Yy+R9FLTykz3cO/zD+MJzx8F16vmoKoq
      9z1+kOSmLf4+BZhUBnlf/Qqn1F38TNvNe4EKU9urhF/az6Y/eYEF3WD+zCzZs9PYkzaVz8ok
      Iv3YjuNr/DcS3mRkSi71JPc3qjo0onFGkLOHNJ+kTEzk8a+itLBgQ8/+hm9Waa+++uqrbV6Z
      cmGBQtll9J4Rlhs/WjkdlmU12WyxFopBT2h5e1gNaE3OqaZqhLTwsj3ZCKy+BBNauPuKhpP9
      GBSV0KZvoYUHlv/waq7ZJTReU2r7+GE8Ffof2IKZ6iFoBukZiLPlKzvY+8KjJNJJf0RdKc6+
      WujBIAPb72Pu6mVy2FjbI5xyt1OqXo+4KAouGsnMCS4d+4BrY+cpXWnh53iCcNQgNdqPbduE
      QqGmghzZIWQCS8btpcMrQ5xSGlIOto36RnKWME2z5jCbJtqD+3DKFdREnPChr5P41ot+B+to
      kM9Mz3D6xEm++tzT3JxI962BHt+HtuevAFD17jqKGwGpbamqKrlcjsSOPhI7+giHwyQSiSYn
      UYYLu6Hn43keV6sW1x7dy6IOilZFP+JBrn6OtlXBKQYJzFqUM0WibUZOq1BpSoBJhxVoKriR
      USBFUfxaApk5lp+tVqt+pEg+I+CvkQbXlabTaaLf+SO/U8lQazAYbN8BhPCIJ+JsHt225IT8
      tQku5mz27t7edmZoNYFcy2lyfFu3rVIR3TA7/kiu51JxykQDtZkjd2mO7PgcW57eiRpoPzfZ
      JQvdrHsvTrWMqgVQA+278lobfiVXYvKDcTY/to1wfG2zTzcgVc1SqRSZTMZvUK3SgtLOXq8P
      4DgOb58/w0dTpwkkTqKoNRN16545KoUgi5kwPakKW/dnKKhpen4+g5trnwcJRsNNnXJhYQHb
      tonH4/T29gL18k85osvzZfmsVI2rVquUSiW/gF76EtFotGnVyYsXL3Lx4kVisRjz8/OMjo76
      Oq5tO0D22mVOX56u8TNajilhA29ikqJ9DxHVW1KuJlPS/pdXsRANlkHrtl2poAY7MzEdz6FU
      LREO1KZaTwhQrqsVt2WggF2xUIJqw3YVNSjQqOvErGdBC8/1QGm+znqv2fY+y+jiSDalJMEV
      CgWCwSDFYhHbtunt7fXLJqXKWiQSWdVCdI1wXZefnz7Jp9NXCSTP+40fIGQ47H22OVEo0Cg+
      0Yv6xjQF9wwRdSfKdQZopC/GPU/cB4FafbLjOH64szEhFwwGGRgYIJvN+kS2QCBAMpkkEAiQ
      SCSYm5vzj/X39xONRn39otZoUSaToVQqMTw8TLlc5vjx434HWLYewKlWUUKhpk7g2hU+vzbP
      6NYh/wtajyzKanBXFqVznYVMIkklDSnsJWXT5TnQuS52Ocxms/zw6GGEWiSQPMaqPuoJYj+d
      Qss7qIQJKHG27n2Y+w89hyc8YrEYmUzGj/REIpG2ShP5fN53iGOxmN/OXNelUCiQzWb9xNno
      6GjT8Wq1immajI+P4zgO0WgU0zQplUrk83lGRkYIh8PLc4ECbb5wTQ/7jb8dNpoKcSU7waXM
      RR4ffRpNvbm0i0uXLnH16lWi0SjDw8NYlsWpU6d47LHHul4EtFpIlQfJdZcmwsLCAgMDA5w9
      fZrPjn0KwAMPPsSu3bt9EpnrurhOFeHZKKqOFgg1zRBCCE7PTuEJgaJVV9f4AVQFLxpAzTt4
      VLBEhUJxAtupZ29jsZgvutWpQ8rZrVWcSxbvS+qErB+Q1G5ZP+C6Llu3bm2yUCKRCH19fX5w
      YcPZoPOTE/Ru3upvWzM5gv31aqRKfoFQT915s0tVFE0lEKrZ645VZXFhnuTAZgD+5v/+kunF
      KQCeuufZVT2TU5xG0aNowfWR5KTOp+u6vP322xiGwY4dOyiXy7esAzRCxv3D4TC5XI73332H
      13/ymn/8k48+5Lde/DYPP7ofsXgML/chijWJEDaKoiOCm1HjBwj1Poqu12z1ueL1JJJY42Dj
      NeeCy4WcH+dvpDB30hkC/MX2Og2qkUiEZDJJPp/3+T/S/JFF/Cv9LhvOS0gODjdt673NYdBQ
      T3NpXqAle6vpQaKpOqvwoaFH+PTqx4ym7ln1M2hGH6sfvjojEomQzWZJpVLk83l6e3sZHx+/
      aQUxq0VtVtD5xc/e8LO2AAj4+L3/Yd/g+yiVugBw7XAZynlE+TTl7Lu4w98haA7iyISTYyA8
      DUVdOdEpPA2l1Px9a4G6CK/0VUKh0LKlmYpSW9RCRm1aZwrpf0rnGfB1pRRFuTUdoLW3tsbG
      W+VMpINU31aWbDfue+XAd3mF767pmZQuxef37Nnj/z06OgrgO1MbsUrkepDP5alWyqAofh+I
      Rjy+/XQWyjXh2tYhQW4rlYtYl/8BRv6ciAxQCB2vmkYzple8t1dJoxavNPW9WHrQD8s61xNh
      qVRqRX+kU82AZH4Wi0Xf/CuXy0xOTrJlyxa/mGalMPAtrQkWQjCxkKHYIJdxJTvBlezqpMcB
      hGfj5D9DeGvNWXfGzMwM4+Pj5PP5Jeto5fN5ZmZmKBQKTbbl7SLnKJ8pFo8RChsgZCMUHDpg
      kYp5q3CCFRR7Dvvaj9kSq4/QbnELwlk+wOE5Juq1CKrjNHWwwZ17fH/FMAwGBgbWVUvRmEkW
      QpDNZpmZmfFNocaaYtnx2sV7OmSCV4/GTLBdLlE4dwZzcJN/PHt5knCibiKcmRgjHa+ZNGXb
      5t+OvI8ARlO1srsfvvtPHLt6lCe31/R/PMeluljtSGxzF09RuvD3BKK7UEP9q3rmlbK2n3zy
      CYVCgUwmw/z8PAsLC5w/f55oNMqFCxc4cuQIUIthT01N8eabb/pO5djYGGNjY7iuSyaTaZqe
      14p2meCVUK+xDRDQdc6fOY0ANqc9vvaI3bbxN47UTbBniSUf4kLeoeI4gIZXTaFoVdDKTVal
      ECCsFE5+J9EzY+jF+sCR3LSFXU8cQruel0in010pJNJ13aekm6bZlA+ReRBZLSZDxZKpIBNu
      t1QWRQjB57kFes2IP9XK0X84UXeclwsxCs/GLZxFi+5CUVf3pa4UsnzzzTcpFots2rTJf6ef
      /OQnfO9732NhYQFN07h8+TJzc3PE43HC4TCO47Br1y7OnTvHvn37/OMvvfTSqp5ppee8EbkZ
      27Y5ffIkp8dOMpo4xb2bplrOkD+90vJ3AxLPMWs8y3+PHcP1m4pA0UoowRyKaiM8HWHF8VyT
      8PQV4sd+7V9FDxk8/nt/TDiR9sV5U6nORL61wnVdLMvycwCNZZLSF5AcocXFRbLZrG9+qap6
      6+XRV4O1xtitYp5AyOiY+f0i5QFWQj6fp1QqYeT+A0pjTZRlIVpiA22mAmHeh3nPn3FuZorX
      z53CWsbEDU1/TvzEhyhe7ZxwNMYjL/wh4dSAn9SLRCKk0+mu8qZkg29UzZbcosYMuVxfLRqN
      UqlUajSMrj0FIDwPYVs0KghXCiXC0dp2uZBn7L03uf/J38SI1ugHtmMR0OpSfXbmAwD01GOr
      vq9j2wSuT6mZS2eYGTtKwDC55+lvduwEy76HEHiui9blBn0rICUn8Vp0RsFv7ALRkcuPVxPg
      vW/zMH3RHn59+SLnM/NU3evXEwJ9MYtx6QzhqQkUIGhGGL7vYUb3P42r1Lg3hmH4q1lK004y
      NtfLVWqUPPSfXQjfec7n82iahmmafk4hGo3WiuXXdecWuJaFYi8A9VrQwnTO7wC5mWuMf3yE
      oV17/A5QzM8TT9al1u3Mr0FZWwcozeeIDdZ8iEq2pinqlEs41QrBG+gACEF+fprkQOeE350C
      WUdQzcaaGrkC/ojv71eapwAFgQjEfFOiL57ghQcewrIs8pUytusRDQaxFnPkd+zCtW10I0I4
      lkLRAlQqFYxg0CeySQKaLFeUoeRukPXaQUpByplUrp22uLjoq2DfVBNICEG1VCRkdq5QElKE
      Sa1P92sxL6xSgbmzxwknekmN3tv2nC+TCQS1770w+RZi5kcstXHk+N9qD9WgDPw+0U3PrbqR
      lkolX9hYRmIkNdl1XQYHB9F1nYWFBRzHIZ1Od70DCCEoFApLVp+Bur5SMpms8am6eucVoCgK
      4Uh02RdW1FBT478wd45fnn9zVYtJAwTNKJsfeqJj4/8yQlEU9OR+0NqwXhWl1u5btTUBtB70
      xP41NVDDMPwGHwwGicViPlXBNE2/lte27SUM1vVCCEGpVCKbzWJZlk+JkCZS471yuVzNFOva
      3QGrXCW3WI+HT0zn+JfXjjIxXSONV3IlLr31Kyq5+jnWYvNK5tVyBtuqpd8XShm+/8Zf8MMP
      /5kfHf33+jmLzevsrgW26/JfJz7h5NTylWlfNATDCbzk84jaWL8srlPnUNIvEjLWpiQhK7tk
      lrZRqKqR8hAMBrtWrCMhl41doqBXnkErTjZ1Aqmb2tU5WwtoGMFmmztTaEwQKQiv2TzSwnrT
      pBzQI0uyw60IhL/IJTobA9d1ueg+xOdiE6aYZo/yBlEls/REcT07n/oGRv/TNzRCSx6ONH9k
      hEYu0CEpDt1GY2WY3AYgWgtny1YlQ6SWZd3+YdALc+cYn7/AM9sPEgystUS/Pcr5EiEz1LGg
      5kZwu/sAZ6dyHL5aQfoAca7xNe0fa45uo/kf3ISafgEj/QiadmPvI4Rgfn4e27URike1aDE4
      ONj1pbPaIZ/P++bP5cuXAXxO0NTUFPF4nB07dvhZ4jW/oV1e5Ozlae7fvaNt9nAtdGghBNPj
      Z4n3b/KjQq3Ynt7JSGJb1xrX9PHPmTs5SSCsc8+hPeiRW8/i3GgIIZgtOjQ6wHkGqQz8KYZ7
      BcUroWgmqjmKHtmGHlyfbS5Zn67l4IGf+d2IuulWNNr7J0+eBGBoaAjLsojFYk2UlY4lkcth
      ej7HtlSI+YogqXs+H0PTNIoLU1SnjpK675s+J2js9Nvcv7tGa9A0jdmzh0ltfxRN0ygX8vzv
      v/4du796kAe+9oJ/jvyspmlUrTKl4gLJ5Oam/cv97SxahBKGv3++PIepRzACBgsXapRmp2Kz
      8Pkc0a3JFa+3mr/9H/36fmG5CEANauu6ZjeYpoqi0GtoXMjWO0EsqBJP7SIU2tt0Xjdw/vx5
      crkcAwMDzMzMMDRUC0mmUqmu2/2tME3TX3vukUce8UV1ZVG9nIU8z6vpJa3VBFpcmOXi5zPc
      v3cPurI+E0gIwfSls8T7Os8A0F3zomkG+Maeri2McbubQJPXrjFlBbmy6GHoCg8NGvTF1yeY
      1QkffPAB2WwWx3GIx+N+pvbAgQMb3gEkZGF9KyQbVdM0DMNY+wzQk+zjwWTntbrWYgIpisLg
      tpsbrhzYt4XYaG/XfYDbGZ7n4dg2Q2GVbbGgX1y+UcjlckxNTbF7927OnDnj7z9w4MAyn+ou
      ZL10O8iOsaw47o3iVivDrQa6GfzSNH7AN1GBJeHIjcBjj9Wz+Lt3797Qe90IJFsU7tD1Ae5i
      bXAcB8dxfNnBjaIeSKxlAb5bgUYq9h25RNJdrA1yRflurLj+RcMduUrkXawNsk7WMIyuO+ob
      gU7KzxuBm8oFuotbA7l8UGOByO1Ww9yIVmrzRqIrw0HjqK/retdnAVlueLtebyOv2Q1I21+q
      w0np8OXuu9F+wu2CdXeAVpt/I3pvt695JzyjvGY3oKoqiUSCYrF41wdowbq5QHdxc7CeRNhd
      dEZXh6zJiXGOfHpiRbrtWnDl8kXOXbzctetdPXOc+UqZTz7+hCtTN76wxpJrWoKjHx0mV7hx
      qjaezbnTJzl27ATHjh4hb90dmzYaXe0AjlDpjUe72gEMI8zc3NyaV6vshL50H3g2ib7NONY6
      Gmuba4bDJnPzbSjGq4UCgVAP/b1xhgZ6qTh3O8BGo6sxsaHNA8xkCl3tVdGeHrZsCXTtmrOF
      MtgBjIBDerA7Nb+1a+aIxXroHxpc+QOd4Aksq0yyd4jC4iLD5t0g3Ubjrg9wh6CbPkBjpdaX
      JdrTCXeHmC8ZpIbmnd74ZcXZesfv2z8teBddgywatyzrplRnreZ5yuUytm37S6N2gud5/mIZ
      nudRKpX8fIVcXbJUKmEYhr8+mpSTlHXCuq77HV92/v8HCwllGx1uWpQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='xA vs xG by Nationality (Penalties Considered)' width='192'>
      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
      mXV0I3/UYQgOkcjizIE1ju1KcKuz/eUfEtQ0rX0H3/ftWLUAsViMP//5z0xMTPCXv/yFSCTC
      J598UtGKD4LjxbEyQC6XK+2xq2kamUyGra0tVlZWjjo0QZVyrAywO98ryzKXLl2iWCzS399f
      yl0XCJ5GrAOIdYC60DvwOoAa3+TWzVtEExq5dIoH0zNoyRh3/nOTRFY/eJBZ/YX5H5qmsbGx
      sa+cE13X0XWdtbU1ksnkCz+bzWbL1hUcH8q2WTabZWBoCDWTJtAYxOdNIssKvtY2PPLOsvNe
      pRHLLXOnZ/Nge/5DIXfu3CEajXLmzBk2Nzfp7e1lamqKVCrF+Pg4qqqiqird3d0sLy/T09PD
      5cuX+clPfsKnn37Ke++9RygUolgslpbDW1pa2N7exm63s7KywqVLl8q9HC+k2ksZ1pteRUoj
      +pr8PJxdoKdnZ5/gyMYG2a8HnblCGy75YPsE23wv/oxpmthsNq5evYrFYiGRSPDmm2+STCaZ
      nZ3F7/dz7do1TNNEURQePnzI8PAwLpeLoaEhfD4f4XCYVCrF2toaXV1drK2t4fV6WVxcpKmp
      qaLNbjWXCqw3vWOxSd7S0hKLi4ul52nHxsZoaGjg7t27DA4OksvlmJ+f59SpU1itVra3t4nF
      Yrz55ptsbW3R2NhIPp9ncXERm81GOp2mtbUVr9fL5uYmyWSSN95448BxQm30ietNr+YNcFh6
      BxkEX7t2jaamJnR9Zwx06tQp1tbWaG9vr/g5X7lyBafTSTgc5syZM6iqysrKCmfPnqW7u3vf
      etX8N9lLzzRNvvzySzo6Okobhnd3d7O5ufnE88nP06vKjbJv376NaZqoqkpDQwM9PT3E43EG
      BgaOMqyyWV9fJ5FI0NraSjKZZGlpifv37+/5EPlByeVyOJ1OOjs7uXv3LqZpcv78eSKRyL4N
      UIsYhkEkEiGXy+H3+1laWkLTNOLxOB0dHa9cVOBIDRCJRGhvb0fXdaLRaClfvr+/vyqrJDyN
      LMvk83lCoRDpdJpEIkE0GiWRSBAIBCp6LL/fT7FYpL29HbvdTiAQ4N69e3W1S87u9X7w4AEN
      DQ3MzMyQTCY5f/78KxfdOtIu0P379xkbG+OTTz7BbrcTjUbJ5/N89NFHz60jU01doPX1dRRF
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
